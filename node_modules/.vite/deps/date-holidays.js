import {
  __commonJS,
  __esm,
  __export,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-2LSFTFF7.js";

// node_modules/moment/dist/moment.js
var moment_exports = {};
__export(moment_exports, {
  default: () => moment_default
});
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(callback) {
  hookCallback = callback;
}
function isArray(input) {
  return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
}
function isObject(input) {
  return input != null && Object.prototype.toString.call(input) === "[object Object]";
}
function hasOwnProp(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
}
function isObjectEmpty(obj) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(obj).length === 0;
  } else {
    var k;
    for (k in obj) {
      if (hasOwnProp(obj, k)) {
        return false;
      }
    }
    return true;
  }
}
function isUndefined(input) {
  return input === void 0;
}
function isNumber(input) {
  return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
}
function isDate(input) {
  return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
}
function map(arr, fn) {
  var res = [], i, arrLen = arr.length;
  for (i = 0; i < arrLen; ++i) {
    res.push(fn(arr[i], i));
  }
  return res;
}
function extend(a, b) {
  for (var i in b) {
    if (hasOwnProp(b, i)) {
      a[i] = b[i];
    }
  }
  if (hasOwnProp(b, "toString")) {
    a.toString = b.toString;
  }
  if (hasOwnProp(b, "valueOf")) {
    a.valueOf = b.valueOf;
  }
  return a;
}
function createUTC(input, format2, locale2, strict) {
  return createLocalOrUTC(input, format2, locale2, strict, true).utc();
}
function defaultParsingFlags() {
  return {
    empty: false,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: false,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: false,
    userInvalidated: false,
    iso: false,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: false,
    weekdayMismatch: false
  };
}
function getParsingFlags(m3) {
  if (m3._pf == null) {
    m3._pf = defaultParsingFlags();
  }
  return m3._pf;
}
function isValid(m3) {
  var flags = null, parsedParts = false, isNowValid = m3._d && !isNaN(m3._d.getTime());
  if (isNowValid) {
    flags = getParsingFlags(m3);
    parsedParts = some.call(flags.parsedDateParts, function(i) {
      return i != null;
    });
    isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
    if (m3._strict) {
      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
    }
  }
  if (Object.isFrozen == null || !Object.isFrozen(m3)) {
    m3._isValid = isNowValid;
  } else {
    return isNowValid;
  }
  return m3._isValid;
}
function createInvalid(flags) {
  var m3 = createUTC(NaN);
  if (flags != null) {
    extend(getParsingFlags(m3), flags);
  } else {
    getParsingFlags(m3).userInvalidated = true;
  }
  return m3;
}
function copyConfig(to2, from2) {
  var i, prop, val, momentPropertiesLen = momentProperties.length;
  if (!isUndefined(from2._isAMomentObject)) {
    to2._isAMomentObject = from2._isAMomentObject;
  }
  if (!isUndefined(from2._i)) {
    to2._i = from2._i;
  }
  if (!isUndefined(from2._f)) {
    to2._f = from2._f;
  }
  if (!isUndefined(from2._l)) {
    to2._l = from2._l;
  }
  if (!isUndefined(from2._strict)) {
    to2._strict = from2._strict;
  }
  if (!isUndefined(from2._tzm)) {
    to2._tzm = from2._tzm;
  }
  if (!isUndefined(from2._isUTC)) {
    to2._isUTC = from2._isUTC;
  }
  if (!isUndefined(from2._offset)) {
    to2._offset = from2._offset;
  }
  if (!isUndefined(from2._pf)) {
    to2._pf = getParsingFlags(from2);
  }
  if (!isUndefined(from2._locale)) {
    to2._locale = from2._locale;
  }
  if (momentPropertiesLen > 0) {
    for (i = 0; i < momentPropertiesLen; i++) {
      prop = momentProperties[i];
      val = from2[prop];
      if (!isUndefined(val)) {
        to2[prop] = val;
      }
    }
  }
  return to2;
}
function Moment(config) {
  copyConfig(this, config);
  this._d = new Date(config._d != null ? config._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = /* @__PURE__ */ new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
}
function isMoment(obj) {
  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
}
function warn(msg) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + msg);
  }
}
function deprecate(msg, fn) {
  var firstTime = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, msg);
    }
    if (firstTime) {
      var args = [], arg, i, key, argLen = arguments.length;
      for (i = 0; i < argLen; i++) {
        arg = "";
        if (typeof arguments[i] === "object") {
          arg += "\n[" + i + "] ";
          for (key in arguments[0]) {
            if (hasOwnProp(arguments[0], key)) {
              arg += key + ": " + arguments[0][key] + ", ";
            }
          }
          arg = arg.slice(0, -2);
        } else {
          arg = arguments[i];
        }
        args.push(arg);
      }
      warn(
        msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack
      );
      firstTime = false;
    }
    return fn.apply(this, arguments);
  }, fn);
}
function deprecateSimple(name, msg) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(name, msg);
  }
  if (!deprecations[name]) {
    warn(msg);
    deprecations[name] = true;
  }
}
function isFunction(input) {
  return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
}
function set(config) {
  var prop, i;
  for (i in config) {
    if (hasOwnProp(config, i)) {
      prop = config[i];
      if (isFunction(prop)) {
        this[i] = prop;
      } else {
        this["_" + i] = prop;
      }
    }
  }
  this._config = config;
  this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function mergeConfigs(parentConfig, childConfig) {
  var res = extend({}, parentConfig), prop;
  for (prop in childConfig) {
    if (hasOwnProp(childConfig, prop)) {
      if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
        res[prop] = {};
        extend(res[prop], parentConfig[prop]);
        extend(res[prop], childConfig[prop]);
      } else if (childConfig[prop] != null) {
        res[prop] = childConfig[prop];
      } else {
        delete res[prop];
      }
    }
  }
  for (prop in parentConfig) {
    if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
      res[prop] = extend({}, res[prop]);
    }
  }
  return res;
}
function Locale(config) {
  if (config != null) {
    this.set(config);
  }
}
function calendar(key, mom, now2) {
  var output = this._calendar[key] || this._calendar["sameElse"];
  return isFunction(output) ? output.call(mom, now2) : output;
}
function zeroFill(number, targetLength, forceSign) {
  var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign2 = number >= 0;
  return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}
function addFormatToken(token2, padded, ordinal2, callback) {
  var func = callback;
  if (typeof callback === "string") {
    func = function() {
      return this[callback]();
    };
  }
  if (token2) {
    formatTokenFunctions[token2] = func;
  }
  if (padded) {
    formatTokenFunctions[padded[0]] = function() {
      return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
    };
  }
  if (ordinal2) {
    formatTokenFunctions[ordinal2] = function() {
      return this.localeData().ordinal(
        func.apply(this, arguments),
        token2
      );
    };
  }
}
function removeFormattingTokens(input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|\]$/g, "");
  }
  return input.replace(/\\/g, "");
}
function makeFormatFunction(format2) {
  var array = format2.match(formattingTokens), i, length;
  for (i = 0, length = array.length; i < length; i++) {
    if (formatTokenFunctions[array[i]]) {
      array[i] = formatTokenFunctions[array[i]];
    } else {
      array[i] = removeFormattingTokens(array[i]);
    }
  }
  return function(mom) {
    var output = "", i2;
    for (i2 = 0; i2 < length; i2++) {
      output += isFunction(array[i2]) ? array[i2].call(mom, format2) : array[i2];
    }
    return output;
  };
}
function formatMoment(m3, format2) {
  if (!m3.isValid()) {
    return m3.localeData().invalidDate();
  }
  format2 = expandFormat(format2, m3.localeData());
  formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
  return formatFunctions[format2](m3);
}
function expandFormat(format2, locale2) {
  var i = 5;
  function replaceLongDateFormatTokens(input) {
    return locale2.longDateFormat(input) || input;
  }
  localFormattingTokens.lastIndex = 0;
  while (i >= 0 && localFormattingTokens.test(format2)) {
    format2 = format2.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens
    );
    localFormattingTokens.lastIndex = 0;
    i -= 1;
  }
  return format2;
}
function longDateFormat(key) {
  var format2 = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
  if (format2 || !formatUpper) {
    return format2;
  }
  this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
    if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
      return tok.slice(1);
    }
    return tok;
  }).join("");
  return this._longDateFormat[key];
}
function invalidDate() {
  return this._invalidDate;
}
function ordinal(number) {
  return this._ordinal.replace("%d", number);
}
function relativeTime(number, withoutSuffix, string, isFuture) {
  var output = this._relativeTime[string];
  return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
}
function pastFuture(diff2, output) {
  var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
  return isFunction(format2) ? format2(output) : format2.replace(/%s/i, output);
}
function normalizeUnits(units) {
  return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
}
function normalizeObjectUnits(inputObject) {
  var normalizedInput = {}, normalizedProp, prop;
  for (prop in inputObject) {
    if (hasOwnProp(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);
      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }
  return normalizedInput;
}
function getPrioritizedUnits(unitsObj) {
  var units = [], u;
  for (u in unitsObj) {
    if (hasOwnProp(unitsObj, u)) {
      units.push({ unit: u, priority: priorities[u] });
    }
  }
  units.sort(function(a, b) {
    return a.priority - b.priority;
  });
  return units;
}
function addRegexToken(token2, regex, strictRegex) {
  regexes[token2] = isFunction(regex) ? regex : function(isStrict, localeData2) {
    return isStrict && strictRegex ? strictRegex : regex;
  };
}
function getParseRegexForToken(token2, config) {
  if (!hasOwnProp(regexes, token2)) {
    return new RegExp(unescapeFormat(token2));
  }
  return regexes[token2](config._strict, config._locale);
}
function unescapeFormat(s2) {
  return regexEscape(
    s2.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(matched, p1, p22, p3, p4) {
        return p1 || p22 || p3 || p4;
      }
    )
  );
}
function regexEscape(s2) {
  return s2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function absFloor(number) {
  if (number < 0) {
    return Math.ceil(number) || 0;
  } else {
    return Math.floor(number);
  }
}
function toInt(argumentForCoercion) {
  var coercedNumber = +argumentForCoercion, value = 0;
  if (coercedNumber !== 0 && isFinite(coercedNumber)) {
    value = absFloor(coercedNumber);
  }
  return value;
}
function addParseToken(token2, callback) {
  var i, func = callback, tokenLen;
  if (typeof token2 === "string") {
    token2 = [token2];
  }
  if (isNumber(callback)) {
    func = function(input, array) {
      array[callback] = toInt(input);
    };
  }
  tokenLen = token2.length;
  for (i = 0; i < tokenLen; i++) {
    tokens[token2[i]] = func;
  }
}
function addWeekParseToken(token2, callback) {
  addParseToken(token2, function(input, array, config, token3) {
    config._w = config._w || {};
    callback(input, config._w, config, token3);
  });
}
function addTimeToArrayFromToken(token2, input, config) {
  if (input != null && hasOwnProp(tokens, token2)) {
    tokens[token2](input, config._a, config, token2);
  }
}
function isLeapYear(year) {
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function makeGetSet(unit, keepTime) {
  return function(value) {
    if (value != null) {
      set$1(this, unit, value);
      hooks.updateOffset(this, keepTime);
      return this;
    } else {
      return get(this, unit);
    }
  };
}
function get(mom, unit) {
  if (!mom.isValid()) {
    return NaN;
  }
  var d3 = mom._d, isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return isUTC ? d3.getUTCMilliseconds() : d3.getMilliseconds();
    case "Seconds":
      return isUTC ? d3.getUTCSeconds() : d3.getSeconds();
    case "Minutes":
      return isUTC ? d3.getUTCMinutes() : d3.getMinutes();
    case "Hours":
      return isUTC ? d3.getUTCHours() : d3.getHours();
    case "Date":
      return isUTC ? d3.getUTCDate() : d3.getDate();
    case "Day":
      return isUTC ? d3.getUTCDay() : d3.getDay();
    case "Month":
      return isUTC ? d3.getUTCMonth() : d3.getMonth();
    case "FullYear":
      return isUTC ? d3.getUTCFullYear() : d3.getFullYear();
    default:
      return NaN;
  }
}
function set$1(mom, unit, value) {
  var d3, isUTC, year, month, date;
  if (!mom.isValid() || isNaN(value)) {
    return;
  }
  d3 = mom._d;
  isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return void (isUTC ? d3.setUTCMilliseconds(value) : d3.setMilliseconds(value));
    case "Seconds":
      return void (isUTC ? d3.setUTCSeconds(value) : d3.setSeconds(value));
    case "Minutes":
      return void (isUTC ? d3.setUTCMinutes(value) : d3.setMinutes(value));
    case "Hours":
      return void (isUTC ? d3.setUTCHours(value) : d3.setHours(value));
    case "Date":
      return void (isUTC ? d3.setUTCDate(value) : d3.setDate(value));
    case "FullYear":
      break;
    default:
      return;
  }
  year = value;
  month = mom.month();
  date = mom.date();
  date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;
  void (isUTC ? d3.setUTCFullYear(year, month, date) : d3.setFullYear(year, month, date));
}
function stringGet(units) {
  units = normalizeUnits(units);
  if (isFunction(this[units])) {
    return this[units]();
  }
  return this;
}
function stringSet(units, value) {
  if (typeof units === "object") {
    units = normalizeObjectUnits(units);
    var prioritized = getPrioritizedUnits(units), i, prioritizedLen = prioritized.length;
    for (i = 0; i < prioritizedLen; i++) {
      this[prioritized[i].unit](units[prioritized[i].unit]);
    }
  } else {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units](value);
    }
  }
  return this;
}
function mod(n, x) {
  return (n % x + x) % x;
}
function daysInMonth(year, month) {
  if (isNaN(year) || isNaN(month)) {
    return NaN;
  }
  var modMonth = mod(month, 12);
  year += (month - modMonth) / 12;
  return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
}
function localeMonths(m3, format2) {
  if (!m3) {
    return isArray(this._months) ? this._months : this._months["standalone"];
  }
  return isArray(this._months) ? this._months[m3.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m3.month()];
}
function localeMonthsShort(m3, format2) {
  if (!m3) {
    return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray(this._monthsShort) ? this._monthsShort[m3.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m3.month()];
}
function handleStrictParse(monthName2, format2, strict) {
  var i, ii, mom, llc = monthName2.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (i = 0; i < 12; ++i) {
      mom = createUTC([2e3, i]);
      this._shortMonthsParse[i] = this.monthsShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._longMonthsParse[i] = this.months(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format2 === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format2 === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeMonthsParse(monthName2, format2, strict) {
  var i, mom, regex;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, monthName2, format2, strict);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    if (strict && !this._longMonthsParse[i]) {
      this._longMonthsParse[i] = new RegExp(
        "^" + this.months(mom, "").replace(".", "") + "$",
        "i"
      );
      this._shortMonthsParse[i] = new RegExp(
        "^" + this.monthsShort(mom, "").replace(".", "") + "$",
        "i"
      );
    }
    if (!strict && !this._monthsParse[i]) {
      regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
      this._monthsParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format2 === "MMMM" && this._longMonthsParse[i].test(monthName2)) {
      return i;
    } else if (strict && format2 === "MMM" && this._shortMonthsParse[i].test(monthName2)) {
      return i;
    } else if (!strict && this._monthsParse[i].test(monthName2)) {
      return i;
    }
  }
}
function setMonth(mom, value) {
  if (!mom.isValid()) {
    return mom;
  }
  if (typeof value === "string") {
    if (/^\d+$/.test(value)) {
      value = toInt(value);
    } else {
      value = mom.localeData().monthsParse(value);
      if (!isNumber(value)) {
        return mom;
      }
    }
  }
  var month = value, date = mom.date();
  date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));
  void (mom._isUTC ? mom._d.setUTCMonth(month, date) : mom._d.setMonth(month, date));
  return mom;
}
function getSetMonth(value) {
  if (value != null) {
    setMonth(this, value);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get(this, "Month");
  }
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
}
function monthsRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
  }
}
function computeMonthsParse() {
  function cmpLenRev(a, b) {
    return b.length - a.length;
  }
  var shortPieces = [], longPieces = [], mixedPieces = [], i, mom, shortP, longP;
  for (i = 0; i < 12; i++) {
    mom = createUTC([2e3, i]);
    shortP = regexEscape(this.monthsShort(mom, ""));
    longP = regexEscape(this.months(mom, ""));
    shortPieces.push(shortP);
    longPieces.push(longP);
    mixedPieces.push(longP);
    mixedPieces.push(shortP);
  }
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._monthsShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
}
function createDate(y, m3, d3, h, M, s2, ms) {
  var date;
  if (y < 100 && y >= 0) {
    date = new Date(y + 400, m3, d3, h, M, s2, ms);
    if (isFinite(date.getFullYear())) {
      date.setFullYear(y);
    }
  } else {
    date = new Date(y, m3, d3, h, M, s2, ms);
  }
  return date;
}
function createUTCDate(y) {
  var date, args;
  if (y < 100 && y >= 0) {
    args = Array.prototype.slice.call(arguments);
    args[0] = y + 400;
    date = new Date(Date.UTC.apply(null, args));
    if (isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y);
    }
  } else {
    date = new Date(Date.UTC.apply(null, arguments));
  }
  return date;
}
function firstWeekOffset(year, dow, doy) {
  var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
}
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
  var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
  if (dayOfYear <= 0) {
    resYear = year - 1;
    resDayOfYear = daysInYear(resYear) + dayOfYear;
  } else if (dayOfYear > daysInYear(year)) {
    resYear = year + 1;
    resDayOfYear = dayOfYear - daysInYear(year);
  } else {
    resYear = year;
    resDayOfYear = dayOfYear;
  }
  return {
    year: resYear,
    dayOfYear: resDayOfYear
  };
}
function weekOfYear(mom, dow, doy) {
  var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
  if (week < 1) {
    resYear = mom.year() - 1;
    resWeek = week + weeksInYear(resYear, dow, doy);
  } else if (week > weeksInYear(mom.year(), dow, doy)) {
    resWeek = week - weeksInYear(mom.year(), dow, doy);
    resYear = mom.year() + 1;
  } else {
    resYear = mom.year();
    resWeek = week;
  }
  return {
    week: resWeek,
    year: resYear
  };
}
function weeksInYear(year, dow, doy) {
  var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}
function localeWeek(mom) {
  return weekOfYear(mom, this._week.dow, this._week.doy).week;
}
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(input) {
  var week = this.localeData().week(this);
  return input == null ? week : this.add((input - week) * 7, "d");
}
function getSetISOWeek(input) {
  var week = weekOfYear(this, 1, 4).week;
  return input == null ? week : this.add((input - week) * 7, "d");
}
function parseWeekday(input, locale2) {
  if (typeof input !== "string") {
    return input;
  }
  if (!isNaN(input)) {
    return parseInt(input, 10);
  }
  input = locale2.weekdaysParse(input);
  if (typeof input === "number") {
    return input;
  }
  return null;
}
function parseIsoWeekday(input, locale2) {
  if (typeof input === "string") {
    return locale2.weekdaysParse(input) % 7 || 7;
  }
  return isNaN(input) ? null : input;
}
function shiftWeekdays(ws, n) {
  return ws.slice(n, 7).concat(ws.slice(0, n));
}
function localeWeekdays(m3, format2) {
  var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m3 && m3 !== true && this._weekdays.isFormat.test(format2) ? "format" : "standalone"];
  return m3 === true ? shiftWeekdays(weekdays, this._week.dow) : m3 ? weekdays[m3.day()] : weekdays;
}
function localeWeekdaysShort(m3) {
  return m3 === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m3 ? this._weekdaysShort[m3.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(m3) {
  return m3 === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m3 ? this._weekdaysMin[m3.day()] : this._weekdaysMin;
}
function handleStrictParse$1(weekdayName, format2, strict) {
  var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (i = 0; i < 7; ++i) {
      mom = createUTC([2e3, 1]).day(i);
      this._minWeekdaysParse[i] = this.weekdaysMin(
        mom,
        ""
      ).toLocaleLowerCase();
      this._shortWeekdaysParse[i] = this.weekdaysShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._weekdaysParse[i] = this.weekdays(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format2 === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format2 === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format2 === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format2 === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeWeekdaysParse(weekdayName, format2, strict) {
  var i, mom, regex;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, weekdayName, format2, strict);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    if (strict && !this._fullWeekdaysParse[i]) {
      this._fullWeekdaysParse[i] = new RegExp(
        "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._shortWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._minWeekdaysParse[i] = new RegExp(
        "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
    }
    if (!this._weekdaysParse[i]) {
      regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
      this._weekdaysParse[i] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format2 === "dddd" && this._fullWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (strict && format2 === "dd" && this._minWeekdaysParse[i].test(weekdayName)) {
      return i;
    } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
      return i;
    }
  }
}
function getSetDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var day = get(this, "Day");
  if (input != null) {
    input = parseWeekday(input, this.localeData());
    return this.add(input - day, "d");
  } else {
    return day;
  }
}
function getSetLocaleDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return input == null ? weekday : this.add(input - weekday, "d");
}
function getSetISODayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    var weekday = parseIsoWeekday(input, this.localeData());
    return this.day(this.day() % 7 ? weekday : weekday - 7);
  } else {
    return this.day() || 7;
  }
}
function weekdaysRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
}
function weekdaysShortRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
}
function weekdaysMinRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
}
function computeWeekdaysParse() {
  function cmpLenRev(a, b) {
    return b.length - a.length;
  }
  var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i, mom, minp, shortp, longp;
  for (i = 0; i < 7; i++) {
    mom = createUTC([2e3, 1]).day(i);
    minp = regexEscape(this.weekdaysMin(mom, ""));
    shortp = regexEscape(this.weekdaysShort(mom, ""));
    longp = regexEscape(this.weekdays(mom, ""));
    minPieces.push(minp);
    shortPieces.push(shortp);
    longPieces.push(longp);
    mixedPieces.push(minp);
    mixedPieces.push(shortp);
    mixedPieces.push(longp);
  }
  minPieces.sort(cmpLenRev);
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._weekdaysShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
  this._weekdaysMinStrictRegex = new RegExp(
    "^(" + minPieces.join("|") + ")",
    "i"
  );
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
function meridiem(token2, lowercase) {
  addFormatToken(token2, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase
    );
  });
}
function matchMeridiem(isStrict, locale2) {
  return locale2._meridiemParse;
}
function localeIsPM(input) {
  return (input + "").toLowerCase().charAt(0) === "p";
}
function localeMeridiem(hours2, minutes2, isLower) {
  if (hours2 > 11) {
    return isLower ? "pm" : "PM";
  } else {
    return isLower ? "am" : "AM";
  }
}
function commonPrefix(arr1, arr2) {
  var i, minl = Math.min(arr1.length, arr2.length);
  for (i = 0; i < minl; i += 1) {
    if (arr1[i] !== arr2[i]) {
      return i;
    }
  }
  return minl;
}
function normalizeLocale(key) {
  return key ? key.toLowerCase().replace("_", "-") : key;
}
function chooseLocale(names) {
  var i = 0, j, next, locale2, split;
  while (i < names.length) {
    split = normalizeLocale(names[i]).split("-");
    j = split.length;
    next = normalizeLocale(names[i + 1]);
    next = next ? next.split("-") : null;
    while (j > 0) {
      locale2 = loadLocale(split.slice(0, j).join("-"));
      if (locale2) {
        return locale2;
      }
      if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {
        break;
      }
      j--;
    }
    i++;
  }
  return globalLocale;
}
function isLocaleNameSane(name) {
  return !!(name && name.match("^[^/\\\\]*$"));
}
function loadLocale(name) {
  var oldLocale = null, aliasedRequire;
  if (locales[name] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(name)) {
    try {
      oldLocale = globalLocale._abbr;
      aliasedRequire = __require;
      aliasedRequire("./locale/" + name);
      getSetGlobalLocale(oldLocale);
    } catch (e) {
      locales[name] = null;
    }
  }
  return locales[name];
}
function getSetGlobalLocale(key, values) {
  var data2;
  if (key) {
    if (isUndefined(values)) {
      data2 = getLocale(key);
    } else {
      data2 = defineLocale(key, values);
    }
    if (data2) {
      globalLocale = data2;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn(
          "Locale " + key + " not found. Did you forget to load it?"
        );
      }
    }
  }
  return globalLocale._abbr;
}
function defineLocale(name, config) {
  if (config !== null) {
    var locale2, parentConfig = baseConfig;
    config.abbr = name;
    if (locales[name] != null) {
      deprecateSimple(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      );
      parentConfig = locales[name]._config;
    } else if (config.parentLocale != null) {
      if (locales[config.parentLocale] != null) {
        parentConfig = locales[config.parentLocale]._config;
      } else {
        locale2 = loadLocale(config.parentLocale);
        if (locale2 != null) {
          parentConfig = locale2._config;
        } else {
          if (!localeFamilies[config.parentLocale]) {
            localeFamilies[config.parentLocale] = [];
          }
          localeFamilies[config.parentLocale].push({
            name,
            config
          });
          return null;
        }
      }
    }
    locales[name] = new Locale(mergeConfigs(parentConfig, config));
    if (localeFamilies[name]) {
      localeFamilies[name].forEach(function(x) {
        defineLocale(x.name, x.config);
      });
    }
    getSetGlobalLocale(name);
    return locales[name];
  } else {
    delete locales[name];
    return null;
  }
}
function updateLocale(name, config) {
  if (config != null) {
    var locale2, tmpLocale, parentConfig = baseConfig;
    if (locales[name] != null && locales[name].parentLocale != null) {
      locales[name].set(mergeConfigs(locales[name]._config, config));
    } else {
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config = mergeConfigs(parentConfig, config);
      if (tmpLocale == null) {
        config.abbr = name;
      }
      locale2 = new Locale(config);
      locale2.parentLocale = locales[name];
      locales[name] = locale2;
    }
    getSetGlobalLocale(name);
  } else {
    if (locales[name] != null) {
      if (locales[name].parentLocale != null) {
        locales[name] = locales[name].parentLocale;
        if (name === getSetGlobalLocale()) {
          getSetGlobalLocale(name);
        }
      } else if (locales[name] != null) {
        delete locales[name];
      }
    }
  }
  return locales[name];
}
function getLocale(key) {
  var locale2;
  if (key && key._locale && key._locale._abbr) {
    key = key._locale._abbr;
  }
  if (!key) {
    return globalLocale;
  }
  if (!isArray(key)) {
    locale2 = loadLocale(key);
    if (locale2) {
      return locale2;
    }
    key = [key];
  }
  return chooseLocale(key);
}
function listLocales() {
  return keys(locales);
}
function checkOverflow(m3) {
  var overflow, a = m3._a;
  if (a && getParsingFlags(m3).overflow === -2) {
    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(m3)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
      overflow = DATE;
    }
    if (getParsingFlags(m3)._overflowWeeks && overflow === -1) {
      overflow = WEEK;
    }
    if (getParsingFlags(m3)._overflowWeekday && overflow === -1) {
      overflow = WEEKDAY;
    }
    getParsingFlags(m3).overflow = overflow;
  }
  return m3;
}
function configFromISO(config) {
  var i, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
  if (match) {
    getParsingFlags(config).iso = true;
    for (i = 0, l = isoDatesLen; i < l; i++) {
      if (isoDates[i][1].exec(match[1])) {
        dateFormat = isoDates[i][0];
        allowTime = isoDates[i][2] !== false;
        break;
      }
    }
    if (dateFormat == null) {
      config._isValid = false;
      return;
    }
    if (match[3]) {
      for (i = 0, l = isoTimesLen; i < l; i++) {
        if (isoTimes[i][1].exec(match[3])) {
          timeFormat = (match[2] || " ") + isoTimes[i][0];
          break;
        }
      }
      if (timeFormat == null) {
        config._isValid = false;
        return;
      }
    }
    if (!allowTime && timeFormat != null) {
      config._isValid = false;
      return;
    }
    if (match[4]) {
      if (tzRegex.exec(match[4])) {
        tzFormat = "Z";
      } else {
        config._isValid = false;
        return;
      }
    }
    config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
    configFromStringAndFormat(config);
  } else {
    config._isValid = false;
  }
}
function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)
  ];
  if (secondStr) {
    result.push(parseInt(secondStr, 10));
  }
  return result;
}
function untruncateYear(yearStr) {
  var year = parseInt(yearStr, 10);
  if (year <= 49) {
    return 2e3 + year;
  } else if (year <= 999) {
    return 1900 + year;
  }
  return year;
}
function preprocessRFC2822(s2) {
  return s2.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(weekdayStr, parsedInput, config) {
  if (weekdayStr) {
    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]
    ).getDay();
    if (weekdayProvided !== weekdayActual) {
      getParsingFlags(config).weekdayMismatch = true;
      config._isValid = false;
      return false;
    }
  }
  return true;
}
function calculateOffset(obsOffset, militaryOffset, numOffset) {
  if (obsOffset) {
    return obsOffsets[obsOffset];
  } else if (militaryOffset) {
    return 0;
  } else {
    var hm = parseInt(numOffset, 10), m3 = hm % 100, h = (hm - m3) / 100;
    return h * 60 + m3;
  }
}
function configFromRFC2822(config) {
  var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;
  if (match) {
    parsedArray = extractFromRFC2822Strings(
      match[4],
      match[3],
      match[2],
      match[5],
      match[6],
      match[7]
    );
    if (!checkWeekday(match[1], parsedArray, config)) {
      return;
    }
    config._a = parsedArray;
    config._tzm = calculateOffset(match[8], match[9], match[10]);
    config._d = createUTCDate.apply(null, config._a);
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    getParsingFlags(config).rfc2822 = true;
  } else {
    config._isValid = false;
  }
}
function configFromString(config) {
  var matched = aspNetJsonRegex.exec(config._i);
  if (matched !== null) {
    config._d = /* @__PURE__ */ new Date(+matched[1]);
    return;
  }
  configFromISO(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  configFromRFC2822(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  if (config._strict) {
    config._isValid = false;
  } else {
    hooks.createFromInputFallback(config);
  }
}
function defaults(a, b, c) {
  if (a != null) {
    return a;
  }
  if (b != null) {
    return b;
  }
  return c;
}
function currentDateArray(config) {
  var nowValue = new Date(hooks.now());
  if (config._useUTC) {
    return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()
    ];
  }
  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}
function configFromArray(config) {
  var i, date, input = [], currentDate, expectedWeekday, yearToUse;
  if (config._d) {
    return;
  }
  currentDate = currentDateArray(config);
  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
    dayOfYearFromWeekInfo(config);
  }
  if (config._dayOfYear != null) {
    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
      getParsingFlags(config)._overflowDayOfYear = true;
    }
    date = createUTCDate(yearToUse, 0, config._dayOfYear);
    config._a[MONTH] = date.getUTCMonth();
    config._a[DATE] = date.getUTCDate();
  }
  for (i = 0; i < 3 && config._a[i] == null; ++i) {
    config._a[i] = input[i] = currentDate[i];
  }
  for (; i < 7; i++) {
    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
  }
  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
    config._nextDay = true;
    config._a[HOUR] = 0;
  }
  config._d = (config._useUTC ? createUTCDate : createDate).apply(
    null,
    input
  );
  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
  if (config._tzm != null) {
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
  }
  if (config._nextDay) {
    config._a[HOUR] = 24;
  }
  if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
    getParsingFlags(config).weekdayMismatch = true;
  }
}
function dayOfYearFromWeekInfo(config) {
  var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
  w = config._w;
  if (w.GG != null || w.W != null || w.E != null) {
    dow = 1;
    doy = 4;
    weekYear = defaults(
      w.GG,
      config._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year
    );
    week = defaults(w.W, 1);
    weekday = defaults(w.E, 1);
    if (weekday < 1 || weekday > 7) {
      weekdayOverflow = true;
    }
  } else {
    dow = config._locale._week.dow;
    doy = config._locale._week.doy;
    curWeek = weekOfYear(createLocal(), dow, doy);
    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
    week = defaults(w.w, curWeek.week);
    if (w.d != null) {
      weekday = w.d;
      if (weekday < 0 || weekday > 6) {
        weekdayOverflow = true;
      }
    } else if (w.e != null) {
      weekday = w.e + dow;
      if (w.e < 0 || w.e > 6) {
        weekdayOverflow = true;
      }
    } else {
      weekday = dow;
    }
  }
  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
    getParsingFlags(config)._overflowWeeks = true;
  } else if (weekdayOverflow != null) {
    getParsingFlags(config)._overflowWeekday = true;
  } else {
    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
    config._a[YEAR] = temp.year;
    config._dayOfYear = temp.dayOfYear;
  }
}
function configFromStringAndFormat(config) {
  if (config._f === hooks.ISO_8601) {
    configFromISO(config);
    return;
  }
  if (config._f === hooks.RFC_2822) {
    configFromRFC2822(config);
    return;
  }
  config._a = [];
  getParsingFlags(config).empty = true;
  var string = "" + config._i, i, parsedInput, tokens2, token2, skipped, stringLength = string.length, totalParsedInputLength = 0, era, tokenLen;
  tokens2 = expandFormat(config._f, config._locale).match(formattingTokens) || [];
  tokenLen = tokens2.length;
  for (i = 0; i < tokenLen; i++) {
    token2 = tokens2[i];
    parsedInput = (string.match(getParseRegexForToken(token2, config)) || [])[0];
    if (parsedInput) {
      skipped = string.substr(0, string.indexOf(parsedInput));
      if (skipped.length > 0) {
        getParsingFlags(config).unusedInput.push(skipped);
      }
      string = string.slice(
        string.indexOf(parsedInput) + parsedInput.length
      );
      totalParsedInputLength += parsedInput.length;
    }
    if (formatTokenFunctions[token2]) {
      if (parsedInput) {
        getParsingFlags(config).empty = false;
      } else {
        getParsingFlags(config).unusedTokens.push(token2);
      }
      addTimeToArrayFromToken(token2, parsedInput, config);
    } else if (config._strict && !parsedInput) {
      getParsingFlags(config).unusedTokens.push(token2);
    }
  }
  getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
  if (string.length > 0) {
    getParsingFlags(config).unusedInput.push(string);
  }
  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
    getParsingFlags(config).bigHour = void 0;
  }
  getParsingFlags(config).parsedDateParts = config._a.slice(0);
  getParsingFlags(config).meridiem = config._meridiem;
  config._a[HOUR] = meridiemFixWrap(
    config._locale,
    config._a[HOUR],
    config._meridiem
  );
  era = getParsingFlags(config).era;
  if (era !== null) {
    config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
  }
  configFromArray(config);
  checkOverflow(config);
}
function meridiemFixWrap(locale2, hour, meridiem2) {
  var isPm;
  if (meridiem2 == null) {
    return hour;
  }
  if (locale2.meridiemHour != null) {
    return locale2.meridiemHour(hour, meridiem2);
  } else if (locale2.isPM != null) {
    isPm = locale2.isPM(meridiem2);
    if (isPm && hour < 12) {
      hour += 12;
    }
    if (!isPm && hour === 12) {
      hour = 0;
    }
    return hour;
  } else {
    return hour;
  }
}
function configFromStringAndArray(config) {
  var tempConfig, bestMoment, scoreToBeat, i, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;
  if (configfLen === 0) {
    getParsingFlags(config).invalidFormat = true;
    config._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (i = 0; i < configfLen; i++) {
    currentScore = 0;
    validFormatFound = false;
    tempConfig = copyConfig({}, config);
    if (config._useUTC != null) {
      tempConfig._useUTC = config._useUTC;
    }
    tempConfig._f = config._f[i];
    configFromStringAndFormat(tempConfig);
    if (isValid(tempConfig)) {
      validFormatFound = true;
    }
    currentScore += getParsingFlags(tempConfig).charsLeftOver;
    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    getParsingFlags(tempConfig).score = currentScore;
    if (!bestFormatIsValid) {
      if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
        if (validFormatFound) {
          bestFormatIsValid = true;
        }
      }
    } else {
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
  }
  extend(config, bestMoment || tempConfig);
}
function configFromObject(config) {
  if (config._d) {
    return;
  }
  var i = normalizeObjectUnits(config._i), dayOrDate = i.day === void 0 ? i.date : i.day;
  config._a = map(
    [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
    function(obj) {
      return obj && parseInt(obj, 10);
    }
  );
  configFromArray(config);
}
function createFromConfig(config) {
  var res = new Moment(checkOverflow(prepareConfig(config)));
  if (res._nextDay) {
    res.add(1, "d");
    res._nextDay = void 0;
  }
  return res;
}
function prepareConfig(config) {
  var input = config._i, format2 = config._f;
  config._locale = config._locale || getLocale(config._l);
  if (input === null || format2 === void 0 && input === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof input === "string") {
    config._i = input = config._locale.preparse(input);
  }
  if (isMoment(input)) {
    return new Moment(checkOverflow(input));
  } else if (isDate(input)) {
    config._d = input;
  } else if (isArray(format2)) {
    configFromStringAndArray(config);
  } else if (format2) {
    configFromStringAndFormat(config);
  } else {
    configFromInput(config);
  }
  if (!isValid(config)) {
    config._d = null;
  }
  return config;
}
function configFromInput(config) {
  var input = config._i;
  if (isUndefined(input)) {
    config._d = new Date(hooks.now());
  } else if (isDate(input)) {
    config._d = new Date(input.valueOf());
  } else if (typeof input === "string") {
    configFromString(config);
  } else if (isArray(input)) {
    config._a = map(input.slice(0), function(obj) {
      return parseInt(obj, 10);
    });
    configFromArray(config);
  } else if (isObject(input)) {
    configFromObject(config);
  } else if (isNumber(input)) {
    config._d = new Date(input);
  } else {
    hooks.createFromInputFallback(config);
  }
}
function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
  var c = {};
  if (format2 === true || format2 === false) {
    strict = format2;
    format2 = void 0;
  }
  if (locale2 === true || locale2 === false) {
    strict = locale2;
    locale2 = void 0;
  }
  if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
    input = void 0;
  }
  c._isAMomentObject = true;
  c._useUTC = c._isUTC = isUTC;
  c._l = locale2;
  c._i = input;
  c._f = format2;
  c._strict = strict;
  return createFromConfig(c);
}
function createLocal(input, format2, locale2, strict) {
  return createLocalOrUTC(input, format2, locale2, strict, false);
}
function pickBy(fn, moments) {
  var res, i;
  if (moments.length === 1 && isArray(moments[0])) {
    moments = moments[0];
  }
  if (!moments.length) {
    return createLocal();
  }
  res = moments[0];
  for (i = 1; i < moments.length; ++i) {
    if (!moments[i].isValid() || moments[i][fn](res)) {
      res = moments[i];
    }
  }
  return res;
}
function min() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isBefore", args);
}
function max() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isAfter", args);
}
function isDurationValid(m3) {
  var key, unitHasDecimal = false, i, orderLen = ordering.length;
  for (key in m3) {
    if (hasOwnProp(m3, key) && !(indexOf.call(ordering, key) !== -1 && (m3[key] == null || !isNaN(m3[key])))) {
      return false;
    }
  }
  for (i = 0; i < orderLen; ++i) {
    if (m3[ordering[i]]) {
      if (unitHasDecimal) {
        return false;
      }
      if (parseFloat(m3[ordering[i]]) !== toInt(m3[ordering[i]])) {
        unitHasDecimal = true;
      }
    }
  }
  return true;
}
function isValid$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(duration) {
  var normalizedInput = normalizeObjectUnits(duration), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
  this._isValid = isDurationValid(normalizedInput);
  this._milliseconds = +milliseconds2 + seconds2 * 1e3 + // 1000
  minutes2 * 6e4 + // 1000 * 60
  hours2 * 1e3 * 60 * 60;
  this._days = +days2 + weeks2 * 7;
  this._months = +months2 + quarters * 3 + years2 * 12;
  this._data = {};
  this._locale = getLocale();
  this._bubble();
}
function isDuration(obj) {
  return obj instanceof Duration;
}
function absRound(number) {
  if (number < 0) {
    return Math.round(-1 * number) * -1;
  } else {
    return Math.round(number);
  }
}
function compareArrays(array1, array2, dontConvert) {
  var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
  for (i = 0; i < len; i++) {
    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
      diffs++;
    }
  }
  return diffs + lengthDiff;
}
function offset(token2, separator) {
  addFormatToken(token2, 0, 0, function() {
    var offset2 = this.utcOffset(), sign2 = "+";
    if (offset2 < 0) {
      offset2 = -offset2;
      sign2 = "-";
    }
    return sign2 + zeroFill(~~(offset2 / 60), 2) + separator + zeroFill(~~offset2 % 60, 2);
  });
}
function offsetFromString(matcher, string) {
  var matches = (string || "").match(matcher), chunk, parts, minutes2;
  if (matches === null) {
    return null;
  }
  chunk = matches[matches.length - 1] || [];
  parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
  minutes2 = +(parts[1] * 60) + toInt(parts[2]);
  return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
}
function cloneWithOffset(input, model) {
  var res, diff2;
  if (model._isUTC) {
    res = model.clone();
    diff2 = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
    res._d.setTime(res._d.valueOf() + diff2);
    hooks.updateOffset(res, false);
    return res;
  } else {
    return createLocal(input).local();
  }
}
function getDateOffset(m3) {
  return -Math.round(m3._d.getTimezoneOffset());
}
function getSetOffset(input, keepLocalTime, keepMinutes) {
  var offset2 = this._offset || 0, localAdjust;
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    if (typeof input === "string") {
      input = offsetFromString(matchShortOffset, input);
      if (input === null) {
        return this;
      }
    } else if (Math.abs(input) < 16 && !keepMinutes) {
      input = input * 60;
    }
    if (!this._isUTC && keepLocalTime) {
      localAdjust = getDateOffset(this);
    }
    this._offset = input;
    this._isUTC = true;
    if (localAdjust != null) {
      this.add(localAdjust, "m");
    }
    if (offset2 !== input) {
      if (!keepLocalTime || this._changeInProgress) {
        addSubtract(
          this,
          createDuration(input - offset2, "m"),
          1,
          false
        );
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? offset2 : getDateOffset(this);
  }
}
function getSetZone(input, keepLocalTime) {
  if (input != null) {
    if (typeof input !== "string") {
      input = -input;
    }
    this.utcOffset(input, keepLocalTime);
    return this;
  } else {
    return -this.utcOffset();
  }
}
function setOffsetToUTC(keepLocalTime) {
  return this.utcOffset(0, keepLocalTime);
}
function setOffsetToLocal(keepLocalTime) {
  if (this._isUTC) {
    this.utcOffset(0, keepLocalTime);
    this._isUTC = false;
    if (keepLocalTime) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var tZone = offsetFromString(matchOffset, this._i);
    if (tZone != null) {
      this.utcOffset(tZone);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
}
function hasAlignedHourOffset(input) {
  if (!this.isValid()) {
    return false;
  }
  input = input ? createLocal(input).utcOffset() : 0;
  return (this.utcOffset() - input) % 60 === 0;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var c = {}, other;
  copyConfig(c, this);
  c = prepareConfig(c);
  if (c._a) {
    other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
    this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : false;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : false;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
}
function createDuration(input, key) {
  var duration = input, match = null, sign2, ret, diffRes;
  if (isDuration(input)) {
    duration = {
      ms: input._milliseconds,
      d: input._days,
      M: input._months
    };
  } else if (isNumber(input) || !isNaN(+input)) {
    duration = {};
    if (key) {
      duration[key] = +input;
    } else {
      duration.milliseconds = +input;
    }
  } else if (match = aspNetRegex.exec(input)) {
    sign2 = match[1] === "-" ? -1 : 1;
    duration = {
      y: 0,
      d: toInt(match[DATE]) * sign2,
      h: toInt(match[HOUR]) * sign2,
      m: toInt(match[MINUTE]) * sign2,
      s: toInt(match[SECOND]) * sign2,
      ms: toInt(absRound(match[MILLISECOND] * 1e3)) * sign2
      // the millisecond decimal point is included in the match
    };
  } else if (match = isoRegex.exec(input)) {
    sign2 = match[1] === "-" ? -1 : 1;
    duration = {
      y: parseIso(match[2], sign2),
      M: parseIso(match[3], sign2),
      w: parseIso(match[4], sign2),
      d: parseIso(match[5], sign2),
      h: parseIso(match[6], sign2),
      m: parseIso(match[7], sign2),
      s: parseIso(match[8], sign2)
    };
  } else if (duration == null) {
    duration = {};
  } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
    diffRes = momentsDifference(
      createLocal(duration.from),
      createLocal(duration.to)
    );
    duration = {};
    duration.ms = diffRes.milliseconds;
    duration.M = diffRes.months;
  }
  ret = new Duration(duration);
  if (isDuration(input) && hasOwnProp(input, "_locale")) {
    ret._locale = input._locale;
  }
  if (isDuration(input) && hasOwnProp(input, "_isValid")) {
    ret._isValid = input._isValid;
  }
  return ret;
}
function parseIso(inp, sign2) {
  var res = inp && parseFloat(inp.replace(",", "."));
  return (isNaN(res) ? 0 : res) * sign2;
}
function positiveMomentsDifference(base, other) {
  var res = {};
  res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
  if (base.clone().add(res.months, "M").isAfter(other)) {
    --res.months;
  }
  res.milliseconds = +other - +base.clone().add(res.months, "M");
  return res;
}
function momentsDifference(base, other) {
  var res;
  if (!(base.isValid() && other.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  other = cloneWithOffset(other, base);
  if (base.isBefore(other)) {
    res = positiveMomentsDifference(base, other);
  } else {
    res = positiveMomentsDifference(other, base);
    res.milliseconds = -res.milliseconds;
    res.months = -res.months;
  }
  return res;
}
function createAdder(direction, name) {
  return function(val, period) {
    var dur, tmp;
    if (period !== null && !isNaN(+period)) {
      deprecateSimple(
        name,
        "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
      );
      tmp = val;
      val = period;
      period = tmp;
    }
    dur = createDuration(val, period);
    addSubtract(this, dur, direction);
    return this;
  };
}
function addSubtract(mom, duration, isAdding, updateOffset) {
  var milliseconds2 = duration._milliseconds, days2 = absRound(duration._days), months2 = absRound(duration._months);
  if (!mom.isValid()) {
    return;
  }
  updateOffset = updateOffset == null ? true : updateOffset;
  if (months2) {
    setMonth(mom, get(mom, "Month") + months2 * isAdding);
  }
  if (days2) {
    set$1(mom, "Date", get(mom, "Date") + days2 * isAdding);
  }
  if (milliseconds2) {
    mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
  }
  if (updateOffset) {
    hooks.updateOffset(mom, days2 || months2);
  }
}
function isString(input) {
  return typeof input === "string" || input instanceof String;
}
function isMomentInput(input) {
  return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
}
function isMomentInputObject(input) {
  var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], i, property, propertyLen = properties.length;
  for (i = 0; i < propertyLen; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
}
function isNumberOrStringArray(input) {
  var arrayTest = isArray(input), dataTypeTest = false;
  if (arrayTest) {
    dataTypeTest = input.filter(function(item) {
      return !isNumber(item) && isString(input);
    }).length === 0;
  }
  return arrayTest && dataTypeTest;
}
function isCalendarSpec(input) {
  var objectTest = isObject(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], i, property;
  for (i = 0; i < properties.length; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
}
function getCalendarFormat(myMoment, now2) {
  var diff2 = myMoment.diff(now2, "days", true);
  return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(time, formats) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      time = void 0;
      formats = void 0;
    } else if (isMomentInput(arguments[0])) {
      time = arguments[0];
      formats = void 0;
    } else if (isCalendarSpec(arguments[0])) {
      formats = arguments[0];
      time = void 0;
    }
  }
  var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction(formats[format2]) ? formats[format2].call(this, now2) : formats[format2]);
  return this.format(
    output || this.localeData().calendar(format2, this, createLocal(now2))
  );
}
function clone() {
  return new Moment(this);
}
function isAfter(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() > localInput.valueOf();
  } else {
    return localInput.valueOf() < this.clone().startOf(units).valueOf();
  }
}
function isBefore(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() < localInput.valueOf();
  } else {
    return this.clone().endOf(units).valueOf() < localInput.valueOf();
  }
}
function isBetween(from2, to2, units, inclusivity) {
  var localFrom = isMoment(from2) ? from2 : createLocal(from2), localTo = isMoment(to2) ? to2 : createLocal(to2);
  if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
    return false;
  }
  inclusivity = inclusivity || "()";
  return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
}
function isSame(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input), inputMs;
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() === localInput.valueOf();
  } else {
    inputMs = localInput.valueOf();
    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
  }
}
function isSameOrAfter(input, units) {
  return this.isSame(input, units) || this.isAfter(input, units);
}
function isSameOrBefore(input, units) {
  return this.isSame(input, units) || this.isBefore(input, units);
}
function diff(input, units, asFloat) {
  var that, zoneDelta, output;
  if (!this.isValid()) {
    return NaN;
  }
  that = cloneWithOffset(input, this);
  if (!that.isValid()) {
    return NaN;
  }
  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
  units = normalizeUnits(units);
  switch (units) {
    case "year":
      output = monthDiff(this, that) / 12;
      break;
    case "month":
      output = monthDiff(this, that);
      break;
    case "quarter":
      output = monthDiff(this, that) / 3;
      break;
    case "second":
      output = (this - that) / 1e3;
      break;
    case "minute":
      output = (this - that) / 6e4;
      break;
    case "hour":
      output = (this - that) / 36e5;
      break;
    case "day":
      output = (this - that - zoneDelta) / 864e5;
      break;
    case "week":
      output = (this - that - zoneDelta) / 6048e5;
      break;
    default:
      output = this - that;
  }
  return asFloat ? output : absFloor(output);
}
function monthDiff(a, b) {
  if (a.date() < b.date()) {
    return -monthDiff(b, a);
  }
  var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()), anchor = a.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
  if (b - anchor < 0) {
    anchor2 = a.clone().add(wholeMonthDiff - 1, "months");
    adjust = (b - anchor) / (anchor - anchor2);
  } else {
    anchor2 = a.clone().add(wholeMonthDiff + 1, "months");
    adjust = (b - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
}
function toString2() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(keepOffset) {
  if (!this.isValid()) {
    return null;
  }
  var utc = keepOffset !== true, m3 = utc ? this.clone().utc() : this;
  if (m3.year() < 0 || m3.year() > 9999) {
    return formatMoment(
      m3,
      utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
    );
  }
  if (isFunction(Date.prototype.toISOString)) {
    if (utc) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m3, "Z"));
    }
  }
  return formatMoment(
    m3,
    utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function inspect() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var func = "moment", zone = "", prefix, year, datetime, suffix;
  if (!this.isLocal()) {
    func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    zone = "Z";
  }
  prefix = "[" + func + '("]';
  year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  datetime = "-MM-DD[T]HH:mm:ss.SSS";
  suffix = zone + '[")]';
  return this.format(prefix + year + datetime + suffix);
}
function format(inputString) {
  if (!inputString) {
    inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var output = formatMoment(this, inputString);
  return this.localeData().postformat(output);
}
function from(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function fromNow(withoutSuffix) {
  return this.from(createLocal(), withoutSuffix);
}
function to(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function toNow(withoutSuffix) {
  return this.to(createLocal(), withoutSuffix);
}
function locale(key) {
  var newLocaleData;
  if (key === void 0) {
    return this._locale._abbr;
  } else {
    newLocaleData = getLocale(key);
    if (newLocaleData != null) {
      this._locale = newLocaleData;
    }
    return this;
  }
}
function localeData() {
  return this._locale;
}
function mod$1(dividend, divisor) {
  return (dividend % divisor + divisor) % divisor;
}
function localStartOfDate(y, m3, d3) {
  if (y < 100 && y >= 0) {
    return new Date(y + 400, m3, d3) - MS_PER_400_YEARS;
  } else {
    return new Date(y, m3, d3).valueOf();
  }
}
function utcStartOfDate(y, m3, d3) {
  if (y < 100 && y >= 0) {
    return Date.UTC(y + 400, m3, d3) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(y, m3, d3);
  }
}
function startOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year(), 0, 1);
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      time = startOfDate(this.year(), this.month(), 1);
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date());
      break;
    case "hour":
      time = this._d.valueOf();
      time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      );
      break;
    case "minute":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_MINUTE);
      break;
    case "second":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_SECOND);
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function endOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      time = startOfDate(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      time = this._d.valueOf();
      time += MS_PER_HOUR - mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      ) - 1;
      break;
    case "minute":
      time = this._d.valueOf();
      time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
      break;
    case "second":
      time = this._d.valueOf();
      time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray() {
  var m3 = this;
  return [
    m3.year(),
    m3.month(),
    m3.date(),
    m3.hour(),
    m3.minute(),
    m3.second(),
    m3.millisecond()
  ];
}
function toObject() {
  var m3 = this;
  return {
    years: m3.year(),
    months: m3.month(),
    date: m3.date(),
    hours: m3.hours(),
    minutes: m3.minutes(),
    seconds: m3.seconds(),
    milliseconds: m3.milliseconds()
  };
}
function toJSON() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2() {
  return isValid(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
function localeEras(m3, format2) {
  var i, l, date, eras = this._eras || getLocale("en")._eras;
  for (i = 0, l = eras.length; i < l; ++i) {
    switch (typeof eras[i].since) {
      case "string":
        date = hooks(eras[i].since).startOf("day");
        eras[i].since = date.valueOf();
        break;
    }
    switch (typeof eras[i].until) {
      case "undefined":
        eras[i].until = Infinity;
        break;
      case "string":
        date = hooks(eras[i].until).startOf("day").valueOf();
        eras[i].until = date.valueOf();
        break;
    }
  }
  return eras;
}
function localeErasParse(eraName, format2, strict) {
  var i, l, eras = this.eras(), name, abbr, narrow;
  eraName = eraName.toUpperCase();
  for (i = 0, l = eras.length; i < l; ++i) {
    name = eras[i].name.toUpperCase();
    abbr = eras[i].abbr.toUpperCase();
    narrow = eras[i].narrow.toUpperCase();
    if (strict) {
      switch (format2) {
        case "N":
        case "NN":
        case "NNN":
          if (abbr === eraName) {
            return eras[i];
          }
          break;
        case "NNNN":
          if (name === eraName) {
            return eras[i];
          }
          break;
        case "NNNNN":
          if (narrow === eraName) {
            return eras[i];
          }
          break;
      }
    } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
      return eras[i];
    }
  }
}
function localeErasConvertYear(era, year) {
  var dir = era.since <= era.until ? 1 : -1;
  if (year === void 0) {
    return hooks(era.since).year();
  } else {
    return hooks(era.since).year() + (year - era.offset) * dir;
  }
}
function getEraName() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].name;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].name;
    }
  }
  return "";
}
function getEraNarrow() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].narrow;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].narrow;
    }
  }
  return "";
}
function getEraAbbr() {
  var i, l, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until) {
      return eras[i].abbr;
    }
    if (eras[i].until <= val && val <= eras[i].since) {
      return eras[i].abbr;
    }
  }
  return "";
}
function getEraYear() {
  var i, l, dir, val, eras = this.localeData().eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    dir = eras[i].since <= eras[i].until ? 1 : -1;
    val = this.clone().startOf("day").valueOf();
    if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {
      return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
    }
  }
  return this.year();
}
function erasNameRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(isStrict) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(isStrict, locale2) {
  return locale2.erasAbbrRegex(isStrict);
}
function matchEraName(isStrict, locale2) {
  return locale2.erasNameRegex(isStrict);
}
function matchEraNarrow(isStrict, locale2) {
  return locale2.erasNarrowRegex(isStrict);
}
function matchEraYearOrdinal(isStrict, locale2) {
  return locale2._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i, l, erasName, erasAbbr, erasNarrow, eras = this.eras();
  for (i = 0, l = eras.length; i < l; ++i) {
    erasName = regexEscape(eras[i].name);
    erasAbbr = regexEscape(eras[i].abbr);
    erasNarrow = regexEscape(eras[i].narrow);
    namePieces.push(erasName);
    abbrPieces.push(erasAbbr);
    narrowPieces.push(erasNarrow);
    mixedPieces.push(erasName);
    mixedPieces.push(erasAbbr);
    mixedPieces.push(erasNarrow);
  }
  this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp(
    "^(" + narrowPieces.join("|") + ")",
    "i"
  );
}
function addWeekYearFormatToken(token2, getter) {
  addFormatToken(0, [token2, token2.length], 0, getter);
}
function getSetWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function getSetISOWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}
function getWeeksInWeekYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
}
function getSetWeekYearHelper(input, week, weekday, dow, doy) {
  var weeksTarget;
  if (input == null) {
    return weekOfYear(this, dow, doy).year;
  } else {
    weeksTarget = weeksInYear(input, dow, doy);
    if (week > weeksTarget) {
      week = weeksTarget;
    }
    return setWeekAll.call(this, input, week, weekday, dow, doy);
  }
}
function setWeekAll(weekYear, week, weekday, dow, doy) {
  var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
  this.year(date.getUTCFullYear());
  this.month(date.getUTCMonth());
  this.date(date.getUTCDate());
  return this;
}
function getSetQuarter(input) {
  return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}
function getSetDayOfYear(input) {
  var dayOfYear = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
}
function parseMs(input, array) {
  array[MILLISECOND] = toInt(("0." + input) * 1e3);
}
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
function createUnix(input) {
  return createLocal(input * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(string) {
  return string;
}
function get$1(format2, index, field, setter) {
  var locale2 = getLocale(), utc = createUTC().set(setter, index);
  return locale2[field](utc, format2);
}
function listMonthsImpl(format2, index, field) {
  if (isNumber(format2)) {
    index = format2;
    format2 = void 0;
  }
  format2 = format2 || "";
  if (index != null) {
    return get$1(format2, index, field, "month");
  }
  var i, out = [];
  for (i = 0; i < 12; i++) {
    out[i] = get$1(format2, i, field, "month");
  }
  return out;
}
function listWeekdaysImpl(localeSorted, format2, index, field) {
  if (typeof localeSorted === "boolean") {
    if (isNumber(format2)) {
      index = format2;
      format2 = void 0;
    }
    format2 = format2 || "";
  } else {
    format2 = localeSorted;
    index = format2;
    localeSorted = false;
    if (isNumber(format2)) {
      index = format2;
      format2 = void 0;
    }
    format2 = format2 || "";
  }
  var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0, i, out = [];
  if (index != null) {
    return get$1(format2, (index + shift) % 7, field, "day");
  }
  for (i = 0; i < 7; i++) {
    out[i] = get$1(format2, (i + shift) % 7, field, "day");
  }
  return out;
}
function listMonths(format2, index) {
  return listMonthsImpl(format2, index, "months");
}
function listMonthsShort(format2, index) {
  return listMonthsImpl(format2, index, "monthsShort");
}
function listWeekdays(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdays");
}
function listWeekdaysShort(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysShort");
}
function listWeekdaysMin(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysMin");
}
function abs() {
  var data2 = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  data2.milliseconds = mathAbs(data2.milliseconds);
  data2.seconds = mathAbs(data2.seconds);
  data2.minutes = mathAbs(data2.minutes);
  data2.hours = mathAbs(data2.hours);
  data2.months = mathAbs(data2.months);
  data2.years = mathAbs(data2.years);
  return this;
}
function addSubtract$1(duration, input, value, direction) {
  var other = createDuration(input, value);
  duration._milliseconds += direction * other._milliseconds;
  duration._days += direction * other._days;
  duration._months += direction * other._months;
  return duration._bubble();
}
function add$1(input, value) {
  return addSubtract$1(this, input, value, 1);
}
function subtract$1(input, value) {
  return addSubtract$1(this, input, value, -1);
}
function absCeil(number) {
  if (number < 0) {
    return Math.floor(number);
  } else {
    return Math.ceil(number);
  }
}
function bubble() {
  var milliseconds2 = this._milliseconds, days2 = this._days, months2 = this._months, data2 = this._data, seconds2, minutes2, hours2, years2, monthsFromDays;
  if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
    milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
    days2 = 0;
    months2 = 0;
  }
  data2.milliseconds = milliseconds2 % 1e3;
  seconds2 = absFloor(milliseconds2 / 1e3);
  data2.seconds = seconds2 % 60;
  minutes2 = absFloor(seconds2 / 60);
  data2.minutes = minutes2 % 60;
  hours2 = absFloor(minutes2 / 60);
  data2.hours = hours2 % 24;
  days2 += absFloor(hours2 / 24);
  monthsFromDays = absFloor(daysToMonths(days2));
  months2 += monthsFromDays;
  days2 -= absCeil(monthsToDays(monthsFromDays));
  years2 = absFloor(months2 / 12);
  months2 %= 12;
  data2.days = days2;
  data2.months = months2;
  data2.years = years2;
  return this;
}
function daysToMonths(days2) {
  return days2 * 4800 / 146097;
}
function monthsToDays(months2) {
  return months2 * 146097 / 4800;
}
function as(units) {
  if (!this.isValid()) {
    return NaN;
  }
  var days2, months2, milliseconds2 = this._milliseconds;
  units = normalizeUnits(units);
  if (units === "month" || units === "quarter" || units === "year") {
    days2 = this._days + milliseconds2 / 864e5;
    months2 = this._months + daysToMonths(days2);
    switch (units) {
      case "month":
        return months2;
      case "quarter":
        return months2 / 3;
      case "year":
        return months2 / 12;
    }
  } else {
    days2 = this._days + Math.round(monthsToDays(this._months));
    switch (units) {
      case "week":
        return days2 / 7 + milliseconds2 / 6048e5;
      case "day":
        return days2 + milliseconds2 / 864e5;
      case "hour":
        return days2 * 24 + milliseconds2 / 36e5;
      case "minute":
        return days2 * 1440 + milliseconds2 / 6e4;
      case "second":
        return days2 * 86400 + milliseconds2 / 1e3;
      case "millisecond":
        return Math.floor(days2 * 864e5) + milliseconds2;
      default:
        throw new Error("Unknown unit " + units);
    }
  }
}
function makeAs(alias) {
  return function() {
    return this.as(alias);
  };
}
function clone$1() {
  return createDuration(this);
}
function get$2(units) {
  units = normalizeUnits(units);
  return this.isValid() ? this[units + "s"]() : NaN;
}
function makeGetter(name) {
  return function() {
    return this.isValid() ? this._data[name] : NaN;
  };
}
function weeks() {
  return absFloor(this.days() / 7);
}
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale2) {
  return locale2.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}
function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
  var duration = createDuration(posNegDuration).abs(), seconds2 = round(duration.as("s")), minutes2 = round(duration.as("m")), hours2 = round(duration.as("h")), days2 = round(duration.as("d")), months2 = round(duration.as("M")), weeks2 = round(duration.as("w")), years2 = round(duration.as("y")), a = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
  if (thresholds2.w != null) {
    a = a || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
  }
  a = a || months2 <= 1 && ["M"] || months2 < thresholds2.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
  a[2] = withoutSuffix;
  a[3] = +posNegDuration > 0;
  a[4] = locale2;
  return substituteTimeAgo.apply(null, a);
}
function getSetRelativeTimeRounding(roundingFunction) {
  if (roundingFunction === void 0) {
    return round;
  }
  if (typeof roundingFunction === "function") {
    round = roundingFunction;
    return true;
  }
  return false;
}
function getSetRelativeTimeThreshold(threshold, limit) {
  if (thresholds[threshold] === void 0) {
    return false;
  }
  if (limit === void 0) {
    return thresholds[threshold];
  }
  thresholds[threshold] = limit;
  if (threshold === "s") {
    thresholds.ss = limit - 1;
  }
  return true;
}
function humanize(argWithSuffix, argThresholds) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var withSuffix = false, th = thresholds, locale2, output;
  if (typeof argWithSuffix === "object") {
    argThresholds = argWithSuffix;
    argWithSuffix = false;
  }
  if (typeof argWithSuffix === "boolean") {
    withSuffix = argWithSuffix;
  }
  if (typeof argThresholds === "object") {
    th = Object.assign({}, thresholds, argThresholds);
    if (argThresholds.s != null && argThresholds.ss == null) {
      th.ss = argThresholds.s - 1;
    }
  }
  locale2 = this.localeData();
  output = relativeTime$1(this, !withSuffix, th, locale2);
  if (withSuffix) {
    output = locale2.pastFuture(+this, output);
  }
  return locale2.postformat(output);
}
function sign(x) {
  return (x > 0) - (x < 0) || +x;
}
function toISOString$1() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months2 = abs$1(this._months), minutes2, hours2, years2, s2, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
  if (!total) {
    return "P0D";
  }
  minutes2 = absFloor(seconds2 / 60);
  hours2 = absFloor(minutes2 / 60);
  seconds2 %= 60;
  minutes2 %= 60;
  years2 = absFloor(months2 / 12);
  months2 %= 12;
  s2 = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
  totalSign = total < 0 ? "-" : "";
  ymSign = sign(this._months) !== sign(total) ? "-" : "";
  daysSign = sign(this._days) !== sign(total) ? "-" : "";
  hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
  return totalSign + "P" + (years2 ? ymSign + years2 + "Y" : "") + (months2 ? ymSign + months2 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s2 + "S" : "");
}
var hookCallback, some, momentProperties, updateInProgress, deprecations, keys, defaultCalendar, formattingTokens, localFormattingTokens, formatFunctions, formatTokenFunctions, defaultLongDateFormat, defaultInvalidDate, defaultOrdinal, defaultDayOfMonthOrdinalParse, defaultRelativeTime, aliases, priorities, match1, match2, match3, match4, match6, match1to2, match3to4, match5to6, match1to3, match1to4, match1to6, matchUnsigned, matchSigned, matchOffset, matchShortOffset, matchTimestamp, matchWord, match1to2NoLeadingZero, match1to2HasZero, regexes, tokens, YEAR, MONTH, DATE, HOUR, MINUTE, SECOND, MILLISECOND, WEEK, WEEKDAY, getSetYear, indexOf, defaultLocaleMonths, defaultLocaleMonthsShort, MONTHS_IN_FORMAT, defaultMonthsShortRegex, defaultMonthsRegex, defaultLocaleWeek, defaultLocaleWeekdays, defaultLocaleWeekdaysShort, defaultLocaleWeekdaysMin, defaultWeekdaysRegex, defaultWeekdaysShortRegex, defaultWeekdaysMinRegex, defaultLocaleMeridiemParse, getSetHour, baseConfig, locales, localeFamilies, globalLocale, extendedIsoRegex, basicIsoRegex, tzRegex, isoDates, isoTimes, aspNetJsonRegex, rfc2822, obsOffsets, prototypeMin, prototypeMax, now, ordering, chunkOffset, aspNetRegex, isoRegex, add, subtract, lang, MS_PER_SECOND, MS_PER_MINUTE, MS_PER_HOUR, MS_PER_400_YEARS, getSetDayOfMonth, getSetMinute, getSetSecond, token, getSetMillisecond, proto, proto$1, mathAbs, asMilliseconds, asSeconds, asMinutes, asHours, asDays, asWeeks, asMonths, asQuarters, asYears, valueOf$1, milliseconds, seconds, minutes, hours, days, months, years, round, thresholds, abs$1, proto$2, moment_default;
var init_moment = __esm({
  "node_modules/moment/dist/moment.js"() {
    if (Array.prototype.some) {
      some = Array.prototype.some;
    } else {
      some = function(fun) {
        var t = Object(this), len = t.length >>> 0, i;
        for (i = 0; i < len; i++) {
          if (i in t && fun.call(this, t[i], i, t)) {
            return true;
          }
        }
        return false;
      };
    }
    momentProperties = hooks.momentProperties = [];
    updateInProgress = false;
    deprecations = {};
    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;
    if (Object.keys) {
      keys = Object.keys;
    } else {
      keys = function(obj) {
        var i, res = [];
        for (i in obj) {
          if (hasOwnProp(obj, i)) {
            res.push(i);
          }
        }
        return res;
      };
    }
    defaultCalendar = {
      sameDay: "[Today at] LT",
      nextDay: "[Tomorrow at] LT",
      nextWeek: "dddd [at] LT",
      lastDay: "[Yesterday at] LT",
      lastWeek: "[Last] dddd [at] LT",
      sameElse: "L"
    };
    formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
    localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
    formatFunctions = {};
    formatTokenFunctions = {};
    defaultLongDateFormat = {
      LTS: "h:mm:ss A",
      LT: "h:mm A",
      L: "MM/DD/YYYY",
      LL: "MMMM D, YYYY",
      LLL: "MMMM D, YYYY h:mm A",
      LLLL: "dddd, MMMM D, YYYY h:mm A"
    };
    defaultInvalidDate = "Invalid date";
    defaultOrdinal = "%d";
    defaultDayOfMonthOrdinalParse = /\d{1,2}/;
    defaultRelativeTime = {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      ss: "%d seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      w: "a week",
      ww: "%d weeks",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    };
    aliases = {
      D: "date",
      dates: "date",
      date: "date",
      d: "day",
      days: "day",
      day: "day",
      e: "weekday",
      weekdays: "weekday",
      weekday: "weekday",
      E: "isoWeekday",
      isoweekdays: "isoWeekday",
      isoweekday: "isoWeekday",
      DDD: "dayOfYear",
      dayofyears: "dayOfYear",
      dayofyear: "dayOfYear",
      h: "hour",
      hours: "hour",
      hour: "hour",
      ms: "millisecond",
      milliseconds: "millisecond",
      millisecond: "millisecond",
      m: "minute",
      minutes: "minute",
      minute: "minute",
      M: "month",
      months: "month",
      month: "month",
      Q: "quarter",
      quarters: "quarter",
      quarter: "quarter",
      s: "second",
      seconds: "second",
      second: "second",
      gg: "weekYear",
      weekyears: "weekYear",
      weekyear: "weekYear",
      GG: "isoWeekYear",
      isoweekyears: "isoWeekYear",
      isoweekyear: "isoWeekYear",
      w: "week",
      weeks: "week",
      week: "week",
      W: "isoWeek",
      isoweeks: "isoWeek",
      isoweek: "isoWeek",
      y: "year",
      years: "year",
      year: "year"
    };
    priorities = {
      date: 9,
      day: 11,
      weekday: 11,
      isoWeekday: 11,
      dayOfYear: 4,
      hour: 13,
      millisecond: 16,
      minute: 14,
      month: 8,
      quarter: 7,
      second: 15,
      weekYear: 1,
      isoWeekYear: 1,
      week: 5,
      isoWeek: 5,
      year: 1
    };
    match1 = /\d/;
    match2 = /\d\d/;
    match3 = /\d{3}/;
    match4 = /\d{4}/;
    match6 = /[+-]?\d{6}/;
    match1to2 = /\d\d?/;
    match3to4 = /\d\d\d\d?/;
    match5to6 = /\d\d\d\d\d\d?/;
    match1to3 = /\d{1,3}/;
    match1to4 = /\d{1,4}/;
    match1to6 = /[+-]?\d{1,6}/;
    matchUnsigned = /\d+/;
    matchSigned = /[+-]?\d+/;
    matchOffset = /Z|[+-]\d\d:?\d\d/gi;
    matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
    matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
    matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
    match1to2NoLeadingZero = /^[1-9]\d?/;
    match1to2HasZero = /^([1-9]\d|\d)/;
    regexes = {};
    tokens = {};
    YEAR = 0;
    MONTH = 1;
    DATE = 2;
    HOUR = 3;
    MINUTE = 4;
    SECOND = 5;
    MILLISECOND = 6;
    WEEK = 7;
    WEEKDAY = 8;
    addFormatToken("Y", 0, 0, function() {
      var y = this.year();
      return y <= 9999 ? zeroFill(y, 4) : "+" + y;
    });
    addFormatToken(0, ["YY", 2], 0, function() {
      return this.year() % 100;
    });
    addFormatToken(0, ["YYYY", 4], 0, "year");
    addFormatToken(0, ["YYYYY", 5], 0, "year");
    addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
    addRegexToken("Y", matchSigned);
    addRegexToken("YY", match1to2, match2);
    addRegexToken("YYYY", match1to4, match4);
    addRegexToken("YYYYY", match1to6, match6);
    addRegexToken("YYYYYY", match1to6, match6);
    addParseToken(["YYYYY", "YYYYYY"], YEAR);
    addParseToken("YYYY", function(input, array) {
      array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken("YY", function(input, array) {
      array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken("Y", function(input, array) {
      array[YEAR] = parseInt(input, 10);
    });
    hooks.parseTwoDigitYear = function(input) {
      return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
    };
    getSetYear = makeGetSet("FullYear", true);
    if (Array.prototype.indexOf) {
      indexOf = Array.prototype.indexOf;
    } else {
      indexOf = function(o) {
        var i;
        for (i = 0; i < this.length; ++i) {
          if (this[i] === o) {
            return i;
          }
        }
        return -1;
      };
    }
    addFormatToken("M", ["MM", 2], "Mo", function() {
      return this.month() + 1;
    });
    addFormatToken("MMM", 0, 0, function(format2) {
      return this.localeData().monthsShort(this, format2);
    });
    addFormatToken("MMMM", 0, 0, function(format2) {
      return this.localeData().months(this, format2);
    });
    addRegexToken("M", match1to2, match1to2NoLeadingZero);
    addRegexToken("MM", match1to2, match2);
    addRegexToken("MMM", function(isStrict, locale2) {
      return locale2.monthsShortRegex(isStrict);
    });
    addRegexToken("MMMM", function(isStrict, locale2) {
      return locale2.monthsRegex(isStrict);
    });
    addParseToken(["M", "MM"], function(input, array) {
      array[MONTH] = toInt(input) - 1;
    });
    addParseToken(["MMM", "MMMM"], function(input, array, config, token2) {
      var month = config._locale.monthsParse(input, token2, config._strict);
      if (month != null) {
        array[MONTH] = month;
      } else {
        getParsingFlags(config).invalidMonth = input;
      }
    });
    defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
      "_"
    );
    defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
    MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    defaultMonthsShortRegex = matchWord;
    defaultMonthsRegex = matchWord;
    addFormatToken("w", ["ww", 2], "wo", "week");
    addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
    addRegexToken("w", match1to2, match1to2NoLeadingZero);
    addRegexToken("ww", match1to2, match2);
    addRegexToken("W", match1to2, match1to2NoLeadingZero);
    addRegexToken("WW", match1to2, match2);
    addWeekParseToken(
      ["w", "ww", "W", "WW"],
      function(input, week, config, token2) {
        week[token2.substr(0, 1)] = toInt(input);
      }
    );
    defaultLocaleWeek = {
      dow: 0,
      // Sunday is the first day of the week.
      doy: 6
      // The week that contains Jan 6th is the first week of the year.
    };
    addFormatToken("d", 0, "do", "day");
    addFormatToken("dd", 0, 0, function(format2) {
      return this.localeData().weekdaysMin(this, format2);
    });
    addFormatToken("ddd", 0, 0, function(format2) {
      return this.localeData().weekdaysShort(this, format2);
    });
    addFormatToken("dddd", 0, 0, function(format2) {
      return this.localeData().weekdays(this, format2);
    });
    addFormatToken("e", 0, 0, "weekday");
    addFormatToken("E", 0, 0, "isoWeekday");
    addRegexToken("d", match1to2);
    addRegexToken("e", match1to2);
    addRegexToken("E", match1to2);
    addRegexToken("dd", function(isStrict, locale2) {
      return locale2.weekdaysMinRegex(isStrict);
    });
    addRegexToken("ddd", function(isStrict, locale2) {
      return locale2.weekdaysShortRegex(isStrict);
    });
    addRegexToken("dddd", function(isStrict, locale2) {
      return locale2.weekdaysRegex(isStrict);
    });
    addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config, token2) {
      var weekday = config._locale.weekdaysParse(input, token2, config._strict);
      if (weekday != null) {
        week.d = weekday;
      } else {
        getParsingFlags(config).invalidWeekday = input;
      }
    });
    addWeekParseToken(["d", "e", "E"], function(input, week, config, token2) {
      week[token2] = toInt(input);
    });
    defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
    defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
    defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
    defaultWeekdaysRegex = matchWord;
    defaultWeekdaysShortRegex = matchWord;
    defaultWeekdaysMinRegex = matchWord;
    addFormatToken("H", ["HH", 2], 0, "hour");
    addFormatToken("h", ["hh", 2], 0, hFormat);
    addFormatToken("k", ["kk", 2], 0, kFormat);
    addFormatToken("hmm", 0, 0, function() {
      return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });
    addFormatToken("hmmss", 0, 0, function() {
      return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });
    addFormatToken("Hmm", 0, 0, function() {
      return "" + this.hours() + zeroFill(this.minutes(), 2);
    });
    addFormatToken("Hmmss", 0, 0, function() {
      return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });
    meridiem("a", true);
    meridiem("A", false);
    addRegexToken("a", matchMeridiem);
    addRegexToken("A", matchMeridiem);
    addRegexToken("H", match1to2, match1to2HasZero);
    addRegexToken("h", match1to2, match1to2NoLeadingZero);
    addRegexToken("k", match1to2, match1to2NoLeadingZero);
    addRegexToken("HH", match1to2, match2);
    addRegexToken("hh", match1to2, match2);
    addRegexToken("kk", match1to2, match2);
    addRegexToken("hmm", match3to4);
    addRegexToken("hmmss", match5to6);
    addRegexToken("Hmm", match3to4);
    addRegexToken("Hmmss", match5to6);
    addParseToken(["H", "HH"], HOUR);
    addParseToken(["k", "kk"], function(input, array, config) {
      var kInput = toInt(input);
      array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(["a", "A"], function(input, array, config) {
      config._isPm = config._locale.isPM(input);
      config._meridiem = input;
    });
    addParseToken(["h", "hh"], function(input, array, config) {
      array[HOUR] = toInt(input);
      getParsingFlags(config).bigHour = true;
    });
    addParseToken("hmm", function(input, array, config) {
      var pos = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos));
      array[MINUTE] = toInt(input.substr(pos));
      getParsingFlags(config).bigHour = true;
    });
    addParseToken("hmmss", function(input, array, config) {
      var pos1 = input.length - 4, pos2 = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos1));
      array[MINUTE] = toInt(input.substr(pos1, 2));
      array[SECOND] = toInt(input.substr(pos2));
      getParsingFlags(config).bigHour = true;
    });
    addParseToken("Hmm", function(input, array, config) {
      var pos = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos));
      array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken("Hmmss", function(input, array, config) {
      var pos1 = input.length - 4, pos2 = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos1));
      array[MINUTE] = toInt(input.substr(pos1, 2));
      array[SECOND] = toInt(input.substr(pos2));
    });
    defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    getSetHour = makeGetSet("Hours", true);
    baseConfig = {
      calendar: defaultCalendar,
      longDateFormat: defaultLongDateFormat,
      invalidDate: defaultInvalidDate,
      ordinal: defaultOrdinal,
      dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
      relativeTime: defaultRelativeTime,
      months: defaultLocaleMonths,
      monthsShort: defaultLocaleMonthsShort,
      week: defaultLocaleWeek,
      weekdays: defaultLocaleWeekdays,
      weekdaysMin: defaultLocaleWeekdaysMin,
      weekdaysShort: defaultLocaleWeekdaysShort,
      meridiemParse: defaultLocaleMeridiemParse
    };
    locales = {};
    localeFamilies = {};
    extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
    isoDates = [
      ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
      ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
      ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
      ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
      ["YYYY-DDD", /\d{4}-\d{3}/],
      ["YYYY-MM", /\d{4}-\d\d/, false],
      ["YYYYYYMMDD", /[+-]\d{10}/],
      ["YYYYMMDD", /\d{8}/],
      ["GGGG[W]WWE", /\d{4}W\d{3}/],
      ["GGGG[W]WW", /\d{4}W\d{2}/, false],
      ["YYYYDDD", /\d{7}/],
      ["YYYYMM", /\d{6}/, false],
      ["YYYY", /\d{4}/, false]
    ];
    isoTimes = [
      ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
      ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
      ["HH:mm:ss", /\d\d:\d\d:\d\d/],
      ["HH:mm", /\d\d:\d\d/],
      ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
      ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
      ["HHmmss", /\d\d\d\d\d\d/],
      ["HHmm", /\d\d\d\d/],
      ["HH", /\d\d/]
    ];
    aspNetJsonRegex = /^\/?Date\((-?\d+)/i;
    rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
    obsOffsets = {
      UT: 0,
      GMT: 0,
      EDT: -4 * 60,
      EST: -5 * 60,
      CDT: -5 * 60,
      CST: -6 * 60,
      MDT: -6 * 60,
      MST: -7 * 60,
      PDT: -7 * 60,
      PST: -8 * 60
    };
    hooks.createFromInputFallback = deprecate(
      "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
      function(config) {
        config._d = /* @__PURE__ */ new Date(config._i + (config._useUTC ? " UTC" : ""));
      }
    );
    hooks.ISO_8601 = function() {
    };
    hooks.RFC_2822 = function() {
    };
    prototypeMin = deprecate(
      "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
      function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other < this ? this : other;
        } else {
          return createInvalid();
        }
      }
    );
    prototypeMax = deprecate(
      "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
      function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other > this ? this : other;
        } else {
          return createInvalid();
        }
      }
    );
    now = function() {
      return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
    };
    ordering = [
      "year",
      "quarter",
      "month",
      "week",
      "day",
      "hour",
      "minute",
      "second",
      "millisecond"
    ];
    offset("Z", ":");
    offset("ZZ", "");
    addRegexToken("Z", matchShortOffset);
    addRegexToken("ZZ", matchShortOffset);
    addParseToken(["Z", "ZZ"], function(input, array, config) {
      config._useUTC = true;
      config._tzm = offsetFromString(matchShortOffset, input);
    });
    chunkOffset = /([\+\-]|\d\d)/gi;
    hooks.updateOffset = function() {
    };
    aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/;
    isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;
    add = createAdder(1, "add");
    subtract = createAdder(-1, "subtract");
    hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
    hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
    lang = deprecate(
      "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
      function(key) {
        if (key === void 0) {
          return this.localeData();
        } else {
          return this.locale(key);
        }
      }
    );
    MS_PER_SECOND = 1e3;
    MS_PER_MINUTE = 60 * MS_PER_SECOND;
    MS_PER_HOUR = 60 * MS_PER_MINUTE;
    MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
    addFormatToken("N", 0, 0, "eraAbbr");
    addFormatToken("NN", 0, 0, "eraAbbr");
    addFormatToken("NNN", 0, 0, "eraAbbr");
    addFormatToken("NNNN", 0, 0, "eraName");
    addFormatToken("NNNNN", 0, 0, "eraNarrow");
    addFormatToken("y", ["y", 1], "yo", "eraYear");
    addFormatToken("y", ["yy", 2], 0, "eraYear");
    addFormatToken("y", ["yyy", 3], 0, "eraYear");
    addFormatToken("y", ["yyyy", 4], 0, "eraYear");
    addRegexToken("N", matchEraAbbr);
    addRegexToken("NN", matchEraAbbr);
    addRegexToken("NNN", matchEraAbbr);
    addRegexToken("NNNN", matchEraName);
    addRegexToken("NNNNN", matchEraNarrow);
    addParseToken(
      ["N", "NN", "NNN", "NNNN", "NNNNN"],
      function(input, array, config, token2) {
        var era = config._locale.erasParse(input, token2, config._strict);
        if (era) {
          getParsingFlags(config).era = era;
        } else {
          getParsingFlags(config).invalidEra = input;
        }
      }
    );
    addRegexToken("y", matchUnsigned);
    addRegexToken("yy", matchUnsigned);
    addRegexToken("yyy", matchUnsigned);
    addRegexToken("yyyy", matchUnsigned);
    addRegexToken("yo", matchEraYearOrdinal);
    addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
    addParseToken(["yo"], function(input, array, config, token2) {
      var match;
      if (config._locale._eraYearOrdinalRegex) {
        match = input.match(config._locale._eraYearOrdinalRegex);
      }
      if (config._locale.eraYearOrdinalParse) {
        array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
      } else {
        array[YEAR] = parseInt(input, 10);
      }
    });
    addFormatToken(0, ["gg", 2], 0, function() {
      return this.weekYear() % 100;
    });
    addFormatToken(0, ["GG", 2], 0, function() {
      return this.isoWeekYear() % 100;
    });
    addWeekYearFormatToken("gggg", "weekYear");
    addWeekYearFormatToken("ggggg", "weekYear");
    addWeekYearFormatToken("GGGG", "isoWeekYear");
    addWeekYearFormatToken("GGGGG", "isoWeekYear");
    addRegexToken("G", matchSigned);
    addRegexToken("g", matchSigned);
    addRegexToken("GG", match1to2, match2);
    addRegexToken("gg", match1to2, match2);
    addRegexToken("GGGG", match1to4, match4);
    addRegexToken("gggg", match1to4, match4);
    addRegexToken("GGGGG", match1to6, match6);
    addRegexToken("ggggg", match1to6, match6);
    addWeekParseToken(
      ["gggg", "ggggg", "GGGG", "GGGGG"],
      function(input, week, config, token2) {
        week[token2.substr(0, 2)] = toInt(input);
      }
    );
    addWeekParseToken(["gg", "GG"], function(input, week, config, token2) {
      week[token2] = hooks.parseTwoDigitYear(input);
    });
    addFormatToken("Q", 0, "Qo", "quarter");
    addRegexToken("Q", match1);
    addParseToken("Q", function(input, array) {
      array[MONTH] = (toInt(input) - 1) * 3;
    });
    addFormatToken("D", ["DD", 2], "Do", "date");
    addRegexToken("D", match1to2, match1to2NoLeadingZero);
    addRegexToken("DD", match1to2, match2);
    addRegexToken("Do", function(isStrict, locale2) {
      return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
    });
    addParseToken(["D", "DD"], DATE);
    addParseToken("Do", function(input, array) {
      array[DATE] = toInt(input.match(match1to2)[0]);
    });
    getSetDayOfMonth = makeGetSet("Date", true);
    addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
    addRegexToken("DDD", match1to3);
    addRegexToken("DDDD", match3);
    addParseToken(["DDD", "DDDD"], function(input, array, config) {
      config._dayOfYear = toInt(input);
    });
    addFormatToken("m", ["mm", 2], 0, "minute");
    addRegexToken("m", match1to2, match1to2HasZero);
    addRegexToken("mm", match1to2, match2);
    addParseToken(["m", "mm"], MINUTE);
    getSetMinute = makeGetSet("Minutes", false);
    addFormatToken("s", ["ss", 2], 0, "second");
    addRegexToken("s", match1to2, match1to2HasZero);
    addRegexToken("ss", match1to2, match2);
    addParseToken(["s", "ss"], SECOND);
    getSetSecond = makeGetSet("Seconds", false);
    addFormatToken("S", 0, 0, function() {
      return ~~(this.millisecond() / 100);
    });
    addFormatToken(0, ["SS", 2], 0, function() {
      return ~~(this.millisecond() / 10);
    });
    addFormatToken(0, ["SSS", 3], 0, "millisecond");
    addFormatToken(0, ["SSSS", 4], 0, function() {
      return this.millisecond() * 10;
    });
    addFormatToken(0, ["SSSSS", 5], 0, function() {
      return this.millisecond() * 100;
    });
    addFormatToken(0, ["SSSSSS", 6], 0, function() {
      return this.millisecond() * 1e3;
    });
    addFormatToken(0, ["SSSSSSS", 7], 0, function() {
      return this.millisecond() * 1e4;
    });
    addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
      return this.millisecond() * 1e5;
    });
    addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
      return this.millisecond() * 1e6;
    });
    addRegexToken("S", match1to3, match1);
    addRegexToken("SS", match1to3, match2);
    addRegexToken("SSS", match1to3, match3);
    for (token = "SSSS"; token.length <= 9; token += "S") {
      addRegexToken(token, matchUnsigned);
    }
    for (token = "S"; token.length <= 9; token += "S") {
      addParseToken(token, parseMs);
    }
    getSetMillisecond = makeGetSet("Milliseconds", false);
    addFormatToken("z", 0, 0, "zoneAbbr");
    addFormatToken("zz", 0, 0, "zoneName");
    proto = Moment.prototype;
    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== "undefined" && Symbol.for != null) {
      proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return "Moment<" + this.format() + ">";
      };
    }
    proto.toJSON = toJSON;
    proto.toString = toString2;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
      "dates accessor is deprecated. Use date instead.",
      getSetDayOfMonth
    );
    proto.months = deprecate(
      "months accessor is deprecated. Use month instead",
      getSetMonth
    );
    proto.years = deprecate(
      "years accessor is deprecated. Use year instead",
      getSetYear
    );
    proto.zone = deprecate(
      "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
      getSetZone
    );
    proto.isDSTShifted = deprecate(
      "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
      isDaylightSavingTimeShifted
    );
    proto$1 = Locale.prototype;
    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;
    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;
    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;
    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;
    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;
    getSetGlobalLocale("en", {
      eras: [
        {
          since: "0001-01-01",
          until: Infinity,
          offset: 1,
          name: "Anno Domini",
          narrow: "AD",
          abbr: "AD"
        },
        {
          since: "0000-12-31",
          until: -Infinity,
          offset: 1,
          name: "Before Christ",
          narrow: "BC",
          abbr: "BC"
        }
      ],
      dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
      ordinal: function(number) {
        var b = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th";
        return number + output;
      }
    });
    hooks.lang = deprecate(
      "moment.lang is deprecated. Use moment.locale instead.",
      getSetGlobalLocale
    );
    hooks.langData = deprecate(
      "moment.langData is deprecated. Use moment.localeData instead.",
      getLocale
    );
    mathAbs = Math.abs;
    asMilliseconds = makeAs("ms");
    asSeconds = makeAs("s");
    asMinutes = makeAs("m");
    asHours = makeAs("h");
    asDays = makeAs("d");
    asWeeks = makeAs("w");
    asMonths = makeAs("M");
    asQuarters = makeAs("Q");
    asYears = makeAs("y");
    valueOf$1 = asMilliseconds;
    milliseconds = makeGetter("milliseconds");
    seconds = makeGetter("seconds");
    minutes = makeGetter("minutes");
    hours = makeGetter("hours");
    days = makeGetter("days");
    months = makeGetter("months");
    years = makeGetter("years");
    round = Math.round;
    thresholds = {
      ss: 44,
      // a few seconds to seconds
      s: 45,
      // seconds to minute
      m: 45,
      // minutes to hour
      h: 22,
      // hours to day
      d: 26,
      // days to month/week
      w: null,
      // weeks to month
      M: 11
      // months to year
    };
    abs$1 = Math.abs;
    proto$2 = Duration.prototype;
    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;
    proto$2.toIsoString = deprecate(
      "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
      toISOString$1
    );
    proto$2.lang = lang;
    addFormatToken("X", 0, 0, "unix");
    addFormatToken("x", 0, 0, "valueOf");
    addRegexToken("x", matchSigned);
    addRegexToken("X", matchTimestamp);
    addParseToken("X", function(input, array, config) {
      config._d = new Date(parseFloat(input) * 1e3);
    });
    addParseToken("x", function(input, array, config) {
      config._d = new Date(toInt(input));
    });
    hooks.version = "2.30.1";
    setHookCallback(createLocal);
    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;
    hooks.HTML5_FMT = {
      DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
      // <input type="datetime-local" />
      DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
      // <input type="datetime-local" step="1" />
      DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
      // <input type="datetime-local" step="0.001" />
      DATE: "YYYY-MM-DD",
      // <input type="date" />
      TIME: "HH:mm",
      // <input type="time" />
      TIME_SECONDS: "HH:mm:ss",
      // <input type="time" step="1" />
      TIME_MS: "HH:mm:ss.SSS",
      // <input type="time" step="0.001" />
      WEEK: "GGGG-[W]WW",
      // <input type="week" />
      MONTH: "YYYY-MM"
      // <input type="month" />
    };
    moment_default = hooks;
  }
});

// node_modules/moment-timezone/moment-timezone.js
var require_moment_timezone = __commonJS({
  "node_modules/moment-timezone/moment-timezone.js"(exports, module2) {
    (function(root, factory) {
      "use strict";
      if (typeof module2 === "object" && module2.exports) {
        module2.exports = factory((init_moment(), __toCommonJS(moment_exports)));
      } else if (typeof define === "function" && define.amd) {
        define(["moment"], factory);
      } else {
        factory(root.moment);
      }
    })(exports, function(moment3) {
      "use strict";
      if (moment3.version === void 0 && moment3.default) {
        moment3 = moment3.default;
      }
      var VERSION = "0.5.48", zones = {}, links = {}, countries = {}, names = {}, guesses = {}, cachedGuess;
      if (!moment3 || typeof moment3.version !== "string") {
        logError("Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/");
      }
      var momentVersion = moment3.version.split("."), major = +momentVersion[0], minor = +momentVersion[1];
      if (major < 2 || major === 2 && minor < 6) {
        logError("Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js " + moment3.version + ". See momentjs.com");
      }
      function charCodeToInt(charCode) {
        if (charCode > 96) {
          return charCode - 87;
        } else if (charCode > 64) {
          return charCode - 29;
        }
        return charCode - 48;
      }
      function unpackBase60(string) {
        var i = 0, parts = string.split("."), whole = parts[0], fractional = parts[1] || "", multiplier = 1, num, out = 0, sign2 = 1;
        if (string.charCodeAt(0) === 45) {
          i = 1;
          sign2 = -1;
        }
        for (i; i < whole.length; i++) {
          num = charCodeToInt(whole.charCodeAt(i));
          out = 60 * out + num;
        }
        for (i = 0; i < fractional.length; i++) {
          multiplier = multiplier / 60;
          num = charCodeToInt(fractional.charCodeAt(i));
          out += num * multiplier;
        }
        return out * sign2;
      }
      function arrayToInt(array) {
        for (var i = 0; i < array.length; i++) {
          array[i] = unpackBase60(array[i]);
        }
      }
      function intToUntil(array, length) {
        for (var i = 0; i < length; i++) {
          array[i] = Math.round((array[i - 1] || 0) + array[i] * 6e4);
        }
        array[length - 1] = Infinity;
      }
      function mapIndices(source, indices) {
        var out = [], i;
        for (i = 0; i < indices.length; i++) {
          out[i] = source[indices[i]];
        }
        return out;
      }
      function unpack(string) {
        var data2 = string.split("|"), offsets = data2[2].split(" "), indices = data2[3].split(""), untils = data2[4].split(" ");
        arrayToInt(offsets);
        arrayToInt(indices);
        arrayToInt(untils);
        intToUntil(untils, indices.length);
        return {
          name: data2[0],
          abbrs: mapIndices(data2[1].split(" "), indices),
          offsets: mapIndices(offsets, indices),
          untils,
          population: data2[5] | 0
        };
      }
      function Zone(packedString) {
        if (packedString) {
          this._set(unpack(packedString));
        }
      }
      function closest(num, arr) {
        var len = arr.length;
        if (num < arr[0]) {
          return 0;
        } else if (len > 1 && arr[len - 1] === Infinity && num >= arr[len - 2]) {
          return len - 1;
        } else if (num >= arr[len - 1]) {
          return -1;
        }
        var mid;
        var lo = 0;
        var hi = len - 1;
        while (hi - lo > 1) {
          mid = Math.floor((lo + hi) / 2);
          if (arr[mid] <= num) {
            lo = mid;
          } else {
            hi = mid;
          }
        }
        return hi;
      }
      Zone.prototype = {
        _set: function(unpacked) {
          this.name = unpacked.name;
          this.abbrs = unpacked.abbrs;
          this.untils = unpacked.untils;
          this.offsets = unpacked.offsets;
          this.population = unpacked.population;
        },
        _index: function(timestamp) {
          var target = +timestamp, untils = this.untils, i;
          i = closest(target, untils);
          if (i >= 0) {
            return i;
          }
        },
        countries: function() {
          var zone_name = this.name;
          return Object.keys(countries).filter(function(country_code) {
            return countries[country_code].zones.indexOf(zone_name) !== -1;
          });
        },
        parse: function(timestamp) {
          var target = +timestamp, offsets = this.offsets, untils = this.untils, max2 = untils.length - 1, offset2, offsetNext, offsetPrev, i;
          for (i = 0; i < max2; i++) {
            offset2 = offsets[i];
            offsetNext = offsets[i + 1];
            offsetPrev = offsets[i ? i - 1 : i];
            if (offset2 < offsetNext && tz.moveAmbiguousForward) {
              offset2 = offsetNext;
            } else if (offset2 > offsetPrev && tz.moveInvalidForward) {
              offset2 = offsetPrev;
            }
            if (target < untils[i] - offset2 * 6e4) {
              return offsets[i];
            }
          }
          return offsets[max2];
        },
        abbr: function(mom) {
          return this.abbrs[this._index(mom)];
        },
        offset: function(mom) {
          logError("zone.offset has been deprecated in favor of zone.utcOffset");
          return this.offsets[this._index(mom)];
        },
        utcOffset: function(mom) {
          return this.offsets[this._index(mom)];
        }
      };
      function Country(country_name, zone_names) {
        this.name = country_name;
        this.zones = zone_names;
      }
      function OffsetAt(at) {
        var timeString = at.toTimeString();
        var abbr = timeString.match(/\([a-z ]+\)/i);
        if (abbr && abbr[0]) {
          abbr = abbr[0].match(/[A-Z]/g);
          abbr = abbr ? abbr.join("") : void 0;
        } else {
          abbr = timeString.match(/[A-Z]{3,5}/g);
          abbr = abbr ? abbr[0] : void 0;
        }
        if (abbr === "GMT") {
          abbr = void 0;
        }
        this.at = +at;
        this.abbr = abbr;
        this.offset = at.getTimezoneOffset();
      }
      function ZoneScore(zone) {
        this.zone = zone;
        this.offsetScore = 0;
        this.abbrScore = 0;
      }
      ZoneScore.prototype.scoreOffsetAt = function(offsetAt) {
        this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
        if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, "") !== offsetAt.abbr) {
          this.abbrScore++;
        }
      };
      function findChange(low, high) {
        var mid, diff2;
        while (diff2 = ((high.at - low.at) / 12e4 | 0) * 6e4) {
          mid = new OffsetAt(new Date(low.at + diff2));
          if (mid.offset === low.offset) {
            low = mid;
          } else {
            high = mid;
          }
        }
        return low;
      }
      function userOffsets() {
        var startYear = (/* @__PURE__ */ new Date()).getFullYear() - 2, last2 = new OffsetAt(new Date(startYear, 0, 1)), lastOffset = last2.offset, offsets = [last2], change, next, nextOffset, i;
        for (i = 1; i < 48; i++) {
          nextOffset = new Date(startYear, i, 1).getTimezoneOffset();
          if (nextOffset !== lastOffset) {
            next = new OffsetAt(new Date(startYear, i, 1));
            change = findChange(last2, next);
            offsets.push(change);
            offsets.push(new OffsetAt(new Date(change.at + 6e4)));
            last2 = next;
            lastOffset = nextOffset;
          }
        }
        for (i = 0; i < 4; i++) {
          offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
          offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
        }
        return offsets;
      }
      function sortZoneScores(a, b) {
        if (a.offsetScore !== b.offsetScore) {
          return a.offsetScore - b.offsetScore;
        }
        if (a.abbrScore !== b.abbrScore) {
          return a.abbrScore - b.abbrScore;
        }
        if (a.zone.population !== b.zone.population) {
          return b.zone.population - a.zone.population;
        }
        return b.zone.name.localeCompare(a.zone.name);
      }
      function addToGuesses(name, offsets) {
        var i, offset2;
        arrayToInt(offsets);
        for (i = 0; i < offsets.length; i++) {
          offset2 = offsets[i];
          guesses[offset2] = guesses[offset2] || {};
          guesses[offset2][name] = true;
        }
      }
      function guessesForUserOffsets(offsets) {
        var offsetsLength = offsets.length, filteredGuesses = {}, out = [], checkedOffsets = {}, i, j, offset2, guessesOffset;
        for (i = 0; i < offsetsLength; i++) {
          offset2 = offsets[i].offset;
          if (checkedOffsets.hasOwnProperty(offset2)) {
            continue;
          }
          guessesOffset = guesses[offset2] || {};
          for (j in guessesOffset) {
            if (guessesOffset.hasOwnProperty(j)) {
              filteredGuesses[j] = true;
            }
          }
          checkedOffsets[offset2] = true;
        }
        for (i in filteredGuesses) {
          if (filteredGuesses.hasOwnProperty(i)) {
            out.push(names[i]);
          }
        }
        return out;
      }
      function rebuildGuess() {
        try {
          var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
          if (intlName && intlName.length > 3) {
            var name = names[normalizeName(intlName)];
            if (name) {
              return name;
            }
            logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
          }
        } catch (e) {
        }
        var offsets = userOffsets(), offsetsLength = offsets.length, guesses2 = guessesForUserOffsets(offsets), zoneScores = [], zoneScore, i, j;
        for (i = 0; i < guesses2.length; i++) {
          zoneScore = new ZoneScore(getZone(guesses2[i]), offsetsLength);
          for (j = 0; j < offsetsLength; j++) {
            zoneScore.scoreOffsetAt(offsets[j]);
          }
          zoneScores.push(zoneScore);
        }
        zoneScores.sort(sortZoneScores);
        return zoneScores.length > 0 ? zoneScores[0].zone.name : void 0;
      }
      function guess(ignoreCache) {
        if (!cachedGuess || ignoreCache) {
          cachedGuess = rebuildGuess();
        }
        return cachedGuess;
      }
      function normalizeName(name) {
        return (name || "").toLowerCase().replace(/\//g, "_");
      }
      function addZone(packed) {
        var i, name, split, normalized;
        if (typeof packed === "string") {
          packed = [packed];
        }
        for (i = 0; i < packed.length; i++) {
          split = packed[i].split("|");
          name = split[0];
          normalized = normalizeName(name);
          zones[normalized] = packed[i];
          names[normalized] = name;
          addToGuesses(normalized, split[2].split(" "));
        }
      }
      function getZone(name, caller) {
        name = normalizeName(name);
        var zone = zones[name];
        var link;
        if (zone instanceof Zone) {
          return zone;
        }
        if (typeof zone === "string") {
          zone = new Zone(zone);
          zones[name] = zone;
          return zone;
        }
        if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
          zone = zones[name] = new Zone();
          zone._set(link);
          zone.name = names[name];
          return zone;
        }
        return null;
      }
      function getNames() {
        var i, out = [];
        for (i in names) {
          if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
            out.push(names[i]);
          }
        }
        return out.sort();
      }
      function getCountryNames() {
        return Object.keys(countries);
      }
      function addLink(aliases2) {
        var i, alias, normal0, normal1;
        if (typeof aliases2 === "string") {
          aliases2 = [aliases2];
        }
        for (i = 0; i < aliases2.length; i++) {
          alias = aliases2[i].split("|");
          normal0 = normalizeName(alias[0]);
          normal1 = normalizeName(alias[1]);
          links[normal0] = normal1;
          names[normal0] = alias[0];
          links[normal1] = normal0;
          names[normal1] = alias[1];
        }
      }
      function addCountries(data2) {
        var i, country_code, country_zones, split;
        if (!data2 || !data2.length)
          return;
        for (i = 0; i < data2.length; i++) {
          split = data2[i].split("|");
          country_code = split[0].toUpperCase();
          country_zones = split[1].split(" ");
          countries[country_code] = new Country(
            country_code,
            country_zones
          );
        }
      }
      function getCountry(name) {
        name = name.toUpperCase();
        return countries[name] || null;
      }
      function zonesForCountry(country, with_offset) {
        country = getCountry(country);
        if (!country)
          return null;
        var zones2 = country.zones.sort();
        if (with_offset) {
          return zones2.map(function(zone_name) {
            var zone = getZone(zone_name);
            return {
              name: zone_name,
              offset: zone.utcOffset(/* @__PURE__ */ new Date())
            };
          });
        }
        return zones2;
      }
      function loadData(data2) {
        addZone(data2.zones);
        addLink(data2.links);
        addCountries(data2.countries);
        tz.dataVersion = data2.version;
      }
      function zoneExists(name) {
        if (!zoneExists.didShowError) {
          zoneExists.didShowError = true;
          logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
        }
        return !!getZone(name);
      }
      function needsOffset(m3) {
        var isUnixTimestamp = m3._f === "X" || m3._f === "x";
        return !!(m3._a && m3._tzm === void 0 && !isUnixTimestamp);
      }
      function logError(message) {
        if (typeof console !== "undefined" && typeof console.error === "function") {
          console.error(message);
        }
      }
      function tz(input) {
        var args = Array.prototype.slice.call(arguments, 0, -1), name = arguments[arguments.length - 1], out = moment3.utc.apply(null, args), zone;
        if (!moment3.isMoment(input) && needsOffset(out) && (zone = getZone(name))) {
          out.add(zone.parse(out), "minutes");
        }
        out.tz(name);
        return out;
      }
      tz.version = VERSION;
      tz.dataVersion = "";
      tz._zones = zones;
      tz._links = links;
      tz._names = names;
      tz._countries = countries;
      tz.add = addZone;
      tz.link = addLink;
      tz.load = loadData;
      tz.zone = getZone;
      tz.zoneExists = zoneExists;
      tz.guess = guess;
      tz.names = getNames;
      tz.Zone = Zone;
      tz.unpack = unpack;
      tz.unpackBase60 = unpackBase60;
      tz.needsOffset = needsOffset;
      tz.moveInvalidForward = true;
      tz.moveAmbiguousForward = false;
      tz.countries = getCountryNames;
      tz.zonesForCountry = zonesForCountry;
      var fn = moment3.fn;
      moment3.tz = tz;
      moment3.defaultZone = null;
      moment3.updateOffset = function(mom, keepTime) {
        var zone = moment3.defaultZone, offset2;
        if (mom._z === void 0) {
          if (zone && needsOffset(mom) && !mom._isUTC && mom.isValid()) {
            mom._d = moment3.utc(mom._a)._d;
            mom.utc().add(zone.parse(mom), "minutes");
          }
          mom._z = zone;
        }
        if (mom._z) {
          offset2 = mom._z.utcOffset(mom);
          if (Math.abs(offset2) < 16) {
            offset2 = offset2 / 60;
          }
          if (mom.utcOffset !== void 0) {
            var z = mom._z;
            mom.utcOffset(-offset2, keepTime);
            mom._z = z;
          } else {
            mom.zone(offset2, keepTime);
          }
        }
      };
      fn.tz = function(name, keepTime) {
        if (name) {
          if (typeof name !== "string") {
            throw new Error("Time zone name must be a string, got " + name + " [" + typeof name + "]");
          }
          this._z = getZone(name);
          if (this._z) {
            moment3.updateOffset(this, keepTime);
          } else {
            logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
          }
          return this;
        }
        if (this._z) {
          return this._z.name;
        }
      };
      function abbrWrap(old) {
        return function() {
          if (this._z) {
            return this._z.abbr(this);
          }
          return old.call(this);
        };
      }
      function resetZoneWrap(old) {
        return function() {
          this._z = null;
          return old.apply(this, arguments);
        };
      }
      function resetZoneWrap2(old) {
        return function() {
          if (arguments.length > 0)
            this._z = null;
          return old.apply(this, arguments);
        };
      }
      fn.zoneName = abbrWrap(fn.zoneName);
      fn.zoneAbbr = abbrWrap(fn.zoneAbbr);
      fn.utc = resetZoneWrap(fn.utc);
      fn.local = resetZoneWrap(fn.local);
      fn.utcOffset = resetZoneWrap2(fn.utcOffset);
      moment3.tz.setDefault = function(name) {
        if (major < 2 || major === 2 && minor < 9) {
          logError("Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js " + moment3.version + ".");
        }
        moment3.defaultZone = name ? getZone(name) : null;
        return moment3;
      };
      var momentProperties2 = moment3.momentProperties;
      if (Object.prototype.toString.call(momentProperties2) === "[object Array]") {
        momentProperties2.push("_z");
        momentProperties2.push("_a");
      } else if (momentProperties2) {
        momentProperties2._z = null;
      }
      return moment3;
    });
  }
});

// node_modules/moment-timezone/data/packed/latest.json
var require_latest = __commonJS({
  "node_modules/moment-timezone/data/packed/latest.json"(exports, module2) {
    module2.exports = {
      version: "2025b",
      zones: [
        "Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
        "Africa/Nairobi|LMT +0230 EAT +0245|-2r.g -2u -30 -2J|012132|-2ua2r.g N6nV.g 3Fbu h1cu dzbJ|47e5",
        "Africa/Algiers|LMT PMT WET WEST CET CEST|-c.c -9.l 0 -10 -10 -20|01232323232323232454542423234542324|-3bQ0c.c MDA2.P cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
        "Africa/Lagos|LMT GMT +0030 WAT|-d.z 0 -u -10|01023|-2B40d.z 7iod.z dnXK.p dLzH.z|17e6",
        "Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
        "Africa/Maputo|LMT CAT|-2a.i -20|01|-2sw2a.i|26e5",
        "Africa/Cairo|LMT EET EEST|-25.9 -20 -30||-2MBC5.9 1AQM5.9 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0 kSp0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1a10 1fz0|15e6",
        "Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|32e5",
        "Africa/Ceuta|LMT WET WEST CET CEST|l.g 0 -10 -10 -20|0121212121212121212121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2M0M0 GdX0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|85e3",
        "Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|20e4",
        "Africa/Johannesburg|LMT SAST SAST SAST|-1Q -1u -20 -30|0123232|-39EpQ qTcm 1Ajdu 1cL0 1cN0 1cL0|84e5",
        "Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|012121212121212121212121212121212131|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 PeX0|",
        "Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
        "Africa/Monrovia|LMT MMT MMT GMT|H.8 H.8 I.u 0|0123|-3ygng.Q 1usM0 28G01.m|11e5",
        "Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
        "Africa/Sao_Tome|LMT LMT GMT WAT|-q.U A.J 0 -10|01232|-3tooq.U 18aoq.U 4i6N0 2q00|",
        "Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
        "Africa/Tunis|LMT PMT CET CEST|-E.I -9.l -10 -20|01232323232323232323232323232323232|-3zO0E.I 1cBAv.n 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
        "Africa/Windhoek|LMT +0130 SAST SAST CAT WAT|-18.o -1u -20 -30 -20 -10|012324545454545454545454545454545454545454545454545454|-39Ep8.o qTbC.o 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
        "America/Adak|LMT LMT NST NWT NPT BST BDT AHST HST HDT|-cd.m bK.C b0 a0 a0 b0 a0 a0 a0 90||-48Pzs.L 1jVzf.p 1EX1d.m 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
        "America/Anchorage|LMT LMT AST AWT APT AHST AHDT YST AKST AKDT|-e0.o 9X.A a0 90 90 a0 90 90 90 80|01234256565656565656565656565656565678989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898|-48Pzs.L 1jVxs.n 1EX20.o 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
        "America/Puerto_Rico|LMT AST AWT APT|4o.p 40 30 30|01231|-2Qi7z.z 1IUbz.z 7XT0 iu0|24e5",
        "America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
        "America/Argentina/Buenos_Aires|LMT CMT -04 -03 -02|3R.M 4g.M 40 30 20|012323232323232323232323232323232323232323234343434343434343|-331U6.c 125cn pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
        "America/Argentina/Catamarca|LMT CMT -04 -03 -02|4n.8 4g.M 40 30 20|012323232323232323232323232323232323232323234343434243432343|-331TA.Q 125bR.E pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
        "America/Argentina/Cordoba|LMT CMT -04 -03 -02|4g.M 4g.M 40 30 20|012323232323232323232323232323232323232323234343434243434343|-331TH.c 125c0 pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
        "America/Argentina/Jujuy|LMT CMT -04 -03 -02|4l.c 4g.M 40 30 20|0123232323232323232323232323232323232323232343434232434343|-331TC.M 125bT.A pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|",
        "America/Argentina/La_Rioja|LMT CMT -04 -03 -02|4r.o 4g.M 40 30 20|0123232323232323232323232323232323232323232343434342343432343|-331Tw.A 125bN.o pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
        "America/Argentina/Mendoza|LMT CMT -04 -03 -02|4z.g 4g.M 40 30 20|012323232323232323232323232323232323232323234343423232432343|-331To.I 125bF.w pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|",
        "America/Argentina/Rio_Gallegos|LMT CMT -04 -03 -02|4A.Q 4g.M 40 30 20|012323232323232323232323232323232323232323234343434343432343|-331Tn.8 125bD.U pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
        "America/Argentina/Salta|LMT CMT -04 -03 -02|4l.E 4g.M 40 30 20|0123232323232323232323232323232323232323232343434342434343|-331TC.k 125bT.8 pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|",
        "America/Argentina/San_Juan|LMT CMT -04 -03 -02|4y.4 4g.M 40 30 20|0123232323232323232323232323232323232323232343434342343432343|-331Tp.U 125bG.I pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|",
        "America/Argentina/San_Luis|LMT CMT -04 -03 -02|4p.o 4g.M 40 30 20|0123232323232323232323232323232323232323232343434232323432323|-331Ty.A 125bP.o pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|",
        "America/Argentina/Tucuman|LMT CMT -04 -03 -02|4k.Q 4g.M 40 30 20|01232323232323232323232323232323232323232323434343424343234343|-331TD.8 125bT.U pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|",
        "America/Argentina/Ushuaia|LMT CMT -04 -03 -02|4x.c 4g.M 40 30 20|012323232323232323232323232323232323232323234343434343432343|-331Tq.M 125bH.A pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|",
        "America/Asuncion|LMT AMT -04 -03|3O.E 3O.E 40 30|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-3eLw9.k 1FGo0 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0|28e5",
        "America/Panama|LMT CMT EST|5i.8 5j.A 50|012|-3eLuF.Q Iy01.s|15e5",
        "America/Bahia_Banderas|LMT MST CST MDT CDT|71 70 60 60 50|01213121313131313131313131313131313142424242424242424242424242|-1UQF0 deo0 8lz0 16p0 11z0 1dd0 otX0 2bmP0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|84e3",
        "America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
        "America/Barbados|LMT AST ADT -0330|3W.t 40 30 3u|0121213121212121|-2m4k1.v 1eAN1.v RB0 1Bz0 Op0 1rb0 11d0 1jJc0 IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
        "America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
        "America/Belize|LMT CST -0530 CWT CPT CDT|5Q.M 60 5u 50 50 50|012121212121212121212121212121212121212121212121213412121212121212121212121212121212121212121215151|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu Rcu 7Bt0 Ni0 4nd0 Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu e9Au qn0 lxB0 mn0|57e3",
        "America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
        "America/Bogota|LMT BMT -05 -04|4U.g 4U.g 50 40|01232|-3sTv3.I 1eIo0 38yo3.I 1PX0|90e5",
        "America/Boise|LMT PST PDT MST MWT MPT MDT|7I.N 80 70 70 60 60 60|01212134536363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-3tFE0 1nEe0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
        "America/Cambridge_Bay|-00 MST MWT MPT MDT CST CDT EST|0 70 60 60 60 60 50 50||-21Jc0 RO90 8x20 ix0 14HB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
        "America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
        "America/Cancun|LMT CST EST CDT EDT|5L.4 60 50 50 40|01213132431313131313131313131313131313131312|-1UQG0 2q3C0 2tx0 wgP0 1lb0 14p0 1lb0 14o0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
        "America/Caracas|LMT CMT -0430 -04|4r.I 4r.E 4u 40|012323|-3eLvw.g ROnX.U 28KM2.k 1IwOu kqo0|29e5",
        "America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
        "America/Chicago|LMT CST CDT EST CWT CPT|5O.A 60 50 50 50 50||-3tFG0 1nEe0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
        "America/Chihuahua|LMT MST CST MDT CDT|74.k 70 60 60 50|0121312424231313131313131313131313131313131313131313131313132|-1UQF0 deo0 8lz0 16p0 11z0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|81e4",
        "America/Ciudad_Juarez|LMT MST CST MDT CDT|75.U 70 60 60 50||-1UQF0 deo0 8lz0 16p0 11z0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1wn0 cm0 EP0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Costa_Rica|LMT SJMT CST CDT|5A.d 5A.d 60 50|01232323232|-3eLun.L 1fyo0 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
        "America/Coyhaique|LMT SMT -05 -04 -03|4M.g 4G.J 50 40 30|012131323232323232323434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-3eLvb.I MJbS.t fJAh.f 5knG.J 1Vzh.f jRAG.J 1pbh.f 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 11B0 1qL0 11B0|",
        "America/Phoenix|LMT MST MDT MWT|7s.i 70 60 60|012121313121|-3tFF0 1nEe0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
        "America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
        "America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
        "America/Dawson_Creek|LMT PST PDT PWT PPT MST|80.U 80 70 70 70 70|01213412121212121212121212121212121212121212121212121212125|-3tofX.4 1nspX.4 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
        "America/Dawson|LMT YST YDT YWT YPT YDDT PST PDT MST|9h.E 90 80 80 80 70 80 70 70|0121213415167676767676767676767676767676767676767676767676767676767676767676767676767676767678|-2MSeG.k GWpG.k 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|13e2",
        "America/Denver|LMT MST MDT MWT MPT|6X.U 70 60 60 60||-3tFF0 1nEe0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
        "America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
        "America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60||-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
        "America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
        "America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
        "America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70||-1UQF0 4Q00 8mp0 8lz0 SN0 1cL0 pHB0 83r0 AU0 5MN0 1Rz0 38N0 Wn0 1qP0 11z0 1o10 11z0 3NA0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
        "America/Fort_Nelson|LMT PST PDT PWT PPT MST|8a.L 80 70 70 70 70|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121215|-3tofN.d 1nspN.d 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
        "America/Fort_Wayne|LMT CST CDT CWT CPT EST EDT|5I.C 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
        "America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30||-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
        "America/Godthab|LMT -03 -02 -01|3q.U 30 20 10||-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 2so0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|17e3",
        "America/Goose_Bay|LMT NST NDT NST NDT NWT NPT AST ADT ADDT|41.E 3u.Q 2u.Q 3u 2u 2u 2u 40 30 20||-3tojW.k 1nspt.c 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
        "America/Grand_Turk|LMT KMT EST EDT AST|4I.w 57.a 50 40 40||-3eLvf.s RK0m.C 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 7jA0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
        "America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
        "America/Guayaquil|LMT QMT -05 -04|5j.k 5e 50 40|01232|-3eLuE.E 1DNzS.E 2uILK rz0|27e5",
        "America/Guyana|LMT -04 -0345 -03|3Q.D 40 3J 30|01231|-2mf87.l 8Hc7.l 2r7bJ Ey0f|80e4",
        "America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30||-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
        "America/Havana|LMT HMT CST CDT|5t.s 5t.A 50 40||-3eLuu.w 1qx00.8 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
        "America/Hermosillo|LMT MST CST MDT|7n.Q 70 60 60|01213121313131|-1UQF0 deo0 8lz0 16p0 11z0 1dd0 otX0 2bmP0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
        "America/Indiana/Knox|LMT CST CDT CWT CPT EST|5K.u 60 50 50 50 50||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Indiana/Marengo|LMT CST CDT CWT CPT EST EDT|5J.n 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Indiana/Petersburg|LMT CST CDT CWT CPT EST EDT|5N.7 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Indiana/Tell_City|LMT CST CDT CWT CPT EST EDT|5L.3 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Indiana/Vevay|LMT CST CDT CWT CPT EST EDT|5E.g 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Indiana/Vincennes|LMT CST CDT CWT CPT EST EDT|5O.7 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Indiana/Winamac|LMT CST CDT CWT CPT EST EDT|5K.p 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Inuvik|-00 PST PDT MDT MST|0 80 70 60 70||-FnA0 L3K0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
        "America/Iqaluit|-00 EWT EPT EST EDT CST CDT|0 40 40 50 40 60 50||-16K00 7nX0 iv0 14HB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
        "America/Jamaica|LMT KMT EST EDT|57.a 57.a 50 40|01232323232323232323232|-3eLuQ.O RK00 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
        "America/Juneau|LMT LMT PST PWT PPT PDT YDT YST AKST AKDT|-f2.j 8V.F 80 70 70 70 80 90 90 80|0123425252525252525252525252625252578989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898|-48Pzs.L 1jVwq.s 1EX12.j 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
        "America/Kentucky/Louisville|LMT CST CDT CWT CPT EST EDT|5H.2 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Kentucky/Monticello|LMT CST CDT CWT CPT EST EDT|5D.o 60 50 50 50 50 40||-3tFG0 1nEe0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/La_Paz|LMT CMT BST -04|4w.A 4w.A 3w.A 40|0123|-3eLvr.o 1FIo0 13b0|19e5",
        "America/Lima|LMT LMT -05 -04|58.c 58.A 50 40|01232323232323232|-3eLuP.M JcM0.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
        "America/Los_Angeles|LMT PST PDT PWT PPT|7Q.W 80 70 70 70||-3tFE0 1nEe0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
        "America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
        "America/Managua|LMT MMT CST EST CDT|5J.8 5J.c 60 50 50|01232424232324242|-3eLue.Q 1Mhc0.4 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
        "America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
        "America/Martinique|LMT FFMT AST ADT|44.k 44.k 40 30|01232|-3eLvT.E PTA0 2LPbT.E 19X0|39e4",
        "America/Matamoros|LMT CST CDT|6u 60 50||-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
        "America/Mazatlan|LMT MST CST MDT|75.E 70 60 60|01213121313131313131313131313131313131313131313131313131313131|-1UQF0 deo0 8lz0 16p0 11z0 1dd0 otX0 2bmP0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|44e4",
        "America/Menominee|LMT CST CDT CWT CPT EST|5O.r 60 50 50 50 50||-3pdG9.x 1jce9.x 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
        "America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131|-1UQG0 2q3C0 24n0 wG10 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|11e5",
        "America/Metlakatla|LMT LMT PST PWT PPT PDT AKST AKDT|-fd.G 8K.i 80 70 70 70 90 80||-48Pzs.L 1jVwf.5 1EX1d.G 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
        "America/Mexico_City|LMT MST CST MDT CDT CWT|6A.A 70 60 60 50 50|012131242425242424242424242424242424242424242424242424242424242424242|-1UQF0 deo0 8lz0 16p0 11z0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|20e6",
        "America/Miquelon|LMT AST -03 -02|3I.E 40 30 20||-2mxUf.k 2LHcf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
        "America/Moncton|LMT EST AST ADT AWT APT|4j.8 50 40 30 30 30||-3txvE.Q J4ME.Q CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
        "America/Monterrey|LMT MST CST MDT CDT|6F.g 70 60 60 50|012131242424242424242424242424242424242424242424242424242424242|-1UQG0 dep0 8lz0 16p0 11z0 1dd0 2gmp0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|41e5",
        "America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
        "America/Toronto|LMT EST EDT EWT EPT|5h.w 50 40 40 40||-32B6G.s UFdG.s 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1qL0 11B0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
        "America/New_York|LMT EST EDT EWT EPT|4U.2 50 40 40 40|012121212121212121212121212121212121212121212121213412121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-3tFH0 1nEe0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
        "America/Nome|LMT LMT NST NWT NPT BST BDT YST AKST AKDT|-cW.m b1.C b0 a0 a0 b0 a0 90 90 80||-48Pzs.L 1jVyu.p 1EX1W.m 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
        "America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
        "America/North_Dakota/Beulah|LMT MST MDT MWT MPT CST CDT|6L.7 70 60 60 60 60 50||-3tFF0 1nEe0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/North_Dakota/Center|LMT MST MDT MWT MPT CST CDT|6J.c 70 60 60 60 60 50||-3tFF0 1nEe0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/North_Dakota/New_Salem|LMT MST MDT MWT MPT CST CDT|6J.D 70 60 60 60 60 50||-3tFF0 1nEe0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
        "America/Ojinaga|LMT MST CST MDT CDT|6V.E 70 60 60 50||-1UQF0 deo0 8lz0 16p0 11z0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1wn0 Rc0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
        "America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
        "America/Port-au-Prince|LMT PPMT EST EDT|4N.k 4N 50 40||-3eLva.E 15RLX.E 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
        "America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
        "America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
        "America/Punta_Arenas|LMT SMT -05 -04 -03|4H.E 4G.J 50 40 30|01213132323232323232343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-3eLvg.k MJbX.5 fJAh.f 5knG.J 1Vzh.f jRAG.J 1pbh.f 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|",
        "America/Winnipeg|LMT CST CDT CWT CPT|6s.A 60 50 50 50||-3kLtv.o 1a3bv.o WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
        "America/Rankin_Inlet|-00 CST CDT EST|0 60 50 50||-vDc0 Bjk0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
        "America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
        "America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
        "America/Resolute|-00 CST CDT EST|0 60 50 50|01212121212121212121212121212121212121212121212121212121212321212121212321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-SnA0 103I0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
        "America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
        "America/Santiago|LMT SMT -05 -04 -03|4G.J 4G.J 50 40 30||-3eLvh.f MJc0 fJAh.f 5knG.J 1Vzh.f jRAG.J 1pbh.f 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 hX0 1q10 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0|62e5",
        "America/Santo_Domingo|LMT SDMT EST EDT -0430 AST|4D.A 4E 50 40 4u 40|012324242424242525|-3eLvk.o 1Jic0.o 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
        "America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
        "America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0||-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 2pA0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|452",
        "America/Sitka|LMT LMT PST PWT PPT PDT YST AKST AKDT|-eW.L 91.d 80 70 70 70 90 90 80||-48Pzs.L 1jVwu 1EX0W.L 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
        "America/St_Johns|LMT NST NDT NST NDT NWT NPT NDDT|3u.Q 3u.Q 2u.Q 3u 2u 2u 2u 1u||-3tokt.8 1l020 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
        "America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
        "America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
        "America/Thule|LMT AST ADT|4z.8 40 30||-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
        "America/Vancouver|LMT PST PDT PWT PPT|8c.s 80 70 70 70||-3tofL.w 1nspL.w 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
        "America/Whitehorse|LMT YST YDT YWT YPT YDDT PST PDT MST|90.c 90 80 80 80 70 80 70 70|0121213415167676767676767676767676767676767676767676767676767676767676767676767676767676767678|-2MSeX.M GWpX.M 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 LA0 ytd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|23e3",
        "America/Yakutat|LMT LMT YST YWT YPT YDT AKST AKDT|-eF.5 9i.T 90 80 80 80 90 80||-48Pzs.L 1jVwL.G 1EX1F.5 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
        "Antarctica/Casey|-00 +08 +11|0 -80 -b0|012121212121212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10 1o30 14k0 1kr0 12l0 1o01 14kX 1lf1 14kX 1lf1 13bX|10",
        "Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
        "Pacific/Port_Moresby|LMT PMMT +10|-9M.E -9M.w -a0|012|-3D8VM.E AvA0.8|25e4",
        "Antarctica/Macquarie|-00 AEST AEDT|0 -a0 -b0||-2OPc0 Fb40 1a00 4SK0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 3Co0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|1",
        "Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
        "Pacific/Auckland|LMT NZMT NZST NZST NZDT|-bD.4 -bu -cu -c0 -d0||-46jLD.4 2nEO9.4 Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00|14e5",
        "Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
        "Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
        "Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
        "Antarctica/Troll|-00 +00 +02|0 0 -20||1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|40",
        "Antarctica/Vostok|-00 +07 +05|0 -70 -50|01012|-tjA0 1rWh0 1Nj0 1aTv0|25",
        "Europe/Berlin|LMT CET CEST CEMT|-R.s -10 -20 -30||-36RcR.s UbWR.s 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|41e5",
        "Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|0123232323232323232323212323232323232323232323232321|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 L4m0|15e5",
        "Asia/Amman|LMT EET EEST +03|-2n.I -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212123|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 LA0 1C00|25e5",
        "Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
        "Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
        "Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
        "Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
        "Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
        "Asia/Baghdad|LMT BMT +03 +04|-2V.E -2V.A -30 -40|0123232323232323232323232323232323232323232323232323232|-3eLCV.E 18ao0.4 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
        "Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
        "Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
        "Asia/Bangkok|LMT BMT +07|-6G.4 -6G.4 -70|012|-3D8SG.4 1C000|15e6",
        "Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|",
        "Asia/Beirut|LMT EET EEST|-2m -20 -30||-3D8Om 1BWom 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0|22e5",
        "Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
        "Asia/Brunei|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|42e4",
        "Asia/Kolkata|LMT HMT MMT IST +0630|-5R.s -5R.k -5l.a -5u -6u|01234343|-4Fg5R.s BKo0.8 1rDcw.a 1r2LP.a 1un0 HB0 7zX0|15e6",
        "Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
        "Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
        "Asia/Shanghai|LMT CST CDT|-85.H -80 -90|012121212121212121212121212121|-2M0U5.H Iuo5.H 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
        "Asia/Colombo|LMT MMT +0530 +06 +0630|-5j.o -5j.w -5u -60 -6u|012342432|-3D8Rj.o 13inX.Q 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
        "Asia/Dhaka|LMT HMT +0630 +0530 +06 +07|-61.E -5R.k -6u -5u -60 -70|01232454|-3eLG1.E 26008.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
        "Asia/Damascus|LMT EET EEST +03|-2p.c -20 -30 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212123|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0|26e5",
        "Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le80 1dnX0 1nfA0 Xld0|19e4",
        "Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
        "Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
        "Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30||-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|",
        "Asia/Gaza|LMT EET EEST IST IDT|-2h.Q -20 -30 -20 -30||-2MBCh.Q 1Azeh.Q MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qo0 XA0 1qp0 1cN0 1cL0 1a10 1fz0 17d0 1in0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1lb0 14p0 1in0 17d0 1cL0 1cN0 19X0 1fB0 14n0 jB0 2L0 11B0 WL0 gN0 8n0 11B0 TX0 gN0 bb0 11B0 On0 jB0 dX0 11B0 Lz0 gN0 mn0 WN0 IL0 gN0 pb0 WN0 Db0 jB0 rX0 11B0 xz0 gN0 xz0 11B0 rX0 jB0 An0 11B0 pb0 gN0 IL0 WN0 mn0 gN0 Lz0 WN0 gL0 jB0 On0 11B0 bb0 gN0 TX0 11B0 5z0 jB0 WL0 11B0 2L0 jB0 11z0 1ip0 19X0 1cN0 1cL0 17d0 1in0 14p0 1lb0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1nX0 14p0 1in0 17d0 1fz0 1a10 19X0 1fB0 17b0 gN0 2L0 WN0 14n0 gN0 5z0 WN0 WL0 jB0 8n0 11B0 Rb0 gN0 dX0 11B0 Lz0 jB0 gL0 11B0 IL0 jB0 mn0 WN0 FX0 gN0 rX0 WN0 An0 jB0 uL0 11B0 uL0 gN0 An0 11B0 rX0 gN0 Db0 11B0 mn0 jB0 FX0 11B0 jz0 gN0 On0 WN0 dX0 jB0 Rb0 WN0 bb0 jB0 TX0 11B0 5z0 gN0 11z0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0|18e5",
        "Asia/Hebron|LMT EET EEST IST IDT|-2k.n -20 -30 -20 -30|012121212121212121212121212121212123434343434343434343434343434343121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2MBCk.n 1Azek.n MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qo0 XA0 1qp0 1cN0 1cL0 1a10 1fz0 17d0 1in0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1lb0 14p0 1in0 17d0 1cL0 1cN0 19X0 1fB0 14n0 jB0 2L0 11B0 WL0 gN0 8n0 11B0 TX0 gN0 bb0 11B0 On0 jB0 dX0 11B0 Lz0 gN0 mn0 WN0 IL0 gN0 pb0 WN0 Db0 jB0 rX0 11B0 xz0 gN0 xz0 11B0 rX0 jB0 An0 11B0 pb0 gN0 IL0 WN0 mn0 gN0 Lz0 WN0 gL0 jB0 On0 11B0 bb0 gN0 TX0 11B0 5z0 jB0 WL0 11B0 2L0 jB0 11z0 1ip0 19X0 1cN0 1cL0 17d0 1in0 14p0 1lb0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1nX0 14p0 1in0 17d0 1fz0 1a10 19X0 1fB0 17b0 gN0 2L0 WN0 14n0 gN0 5z0 WN0 WL0 jB0 8n0 11B0 Rb0 gN0 dX0 11B0 Lz0 jB0 gL0 11B0 IL0 jB0 mn0 WN0 FX0 gN0 rX0 WN0 An0 jB0 uL0 11B0 uL0 gN0 An0 11B0 rX0 gN0 Db0 11B0 mn0 jB0 FX0 11B0 jz0 gN0 On0 WN0 dX0 jB0 Rb0 WN0 bb0 jB0 TX0 11B0 5z0 gN0 11z0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0|25e4",
        "Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.u -76.u -70 -80 -90|0123423232|-2yC76.u bK00 1h7b6.u 5lz0 18o0 3Oq0 k5c0 aVX0 BAM0|90e5",
        "Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
        "Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
        "Asia/Irkutsk|LMT IMT +07 +08 +09|-6V.5 -6V.5 -70 -80 -90|012343434343434343434343234343434343434343434343434343434343434343|-3D8SV.5 1Bxc0 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
        "Europe/Istanbul|LMT IMT EET EEST +03 +04|-1T.Q -1U.U -20 -30 -30 -40|01232323232323232323232323232323232323232323232345423232323232323232323232323232323232323232323232323232323232323234|-3D8NT.Q 1ePXW.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
        "Asia/Jakarta|LMT BMT +0720 +0730 +09 +08 WIB|-77.c -77.c -7k -7u -90 -80 -70|012343536|-49jH7.c 2hiLL.c luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
        "Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
        "Asia/Jerusalem|LMT JMT IST IDT IDDT|-2k.S -2k.E -20 -30 -40||-3D8Ok.S 1wvA0.e SyOk.E MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 3LA0 Eo0 oo0 1co0 1dA0 16o0 10M0 1jc0 1tA0 14o0 1cM0 1a00 11A0 1Nc0 Ao0 1Nc0 Ao0 1Ko0 LA0 1o00 WM0 EQK0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0|81e4",
        "Asia/Kabul|LMT +04 +0430|-4A.M -40 -4u|012|-3eLEA.M 2dTcA.M|46e5",
        "Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
        "Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
        "Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
        "Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
        "Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
        "Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
        "Asia/Kuala_Lumpur|LMT SMT +07 +0720 +0730 +09 +08|-6T.p -6T.p -70 -7k -7u -90 -80|01234546|-2M0ST.p aIM0 17anT.p l5XE 17bO 8Fyu 1so10|71e5",
        "Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
        "Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
        "Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
        "Asia/Manila|LMT LMT PST PDT JST|fU.8 -83.Q -80 -90 -90|012323432323232|-54m83.Q 2d8A3.Q 1urM0 un0 bW10 nb0 7qo0 1MM0 klB0 lz0 TwN0 1bb0 uNB0 rz0|24e6",
        "Asia/Nicosia|LMT EET EEST|-2d.s -20 -30||-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|32e4",
        "Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
        "Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
        "Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
        "Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
        "Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
        "Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
        "Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 Mv90|",
        "Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
        "Asia/Rangoon|LMT RMT +0630 +09|-6o.L -6o.L -6u -90|01232|-3D8So.L 1BnA0 SmnS.L 7j9u|48e5",
        "Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
        "Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
        "Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
        "Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
        "Asia/Taipei|LMT CST JST CDT|-86 -80 -90 -90|012131313131313131313131313131313131313131|-30bk6 1FDc6 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
        "Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
        "Asia/Tbilisi|LMT TBMT +03 +04 +05|-2X.b -2X.b -30 -40 -50|01234343434343434343434323232343434343434343434323|-3D8OX.b 1LUM0 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
        "Asia/Tehran|LMT TMT +0330 +0430 +04 +05|-3p.I -3p.I -3u -4u -40 -50|012345423232323232323232323232323232323232323232323232323232323232323232|-2btDp.I Llc0 1FHaT.I 1pc0 120u Rc0 Dc0 1iMu JX0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0|14e6",
        "Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
        "Asia/Tokyo|LMT JST JDT|-9i.X -90 -a0|0121212121|-3jE90 2qSo0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6",
        "Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
        "Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
        "Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
        "Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
        "Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
        "Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
        "Atlantic/Azores|LMT HMT -02 -01 +00 WET WEST|1G.E 1S.w 20 10 0 0 -10||-3tomh.k 18aoh.k aPX0 Sp0 M00 1vb0 SN0 1vb0 SN0 1vb0 Td0 1vb0 SN0 1vb0 6600 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1uo0 1c00 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 CT90 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 Ap0 An0 wo0 Eo0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|25e4",
        "Atlantic/Bermuda|LMT BMT BST AST ADT|4j.i 4j.i 3j.i 40 30||-3eLvE.G 16mo0 1bb0 1i10 11X0 ru30 thbE.G 1PX0 11B0 1tz0 Rd0 1zb0 Op0 1zb0 3I10 Lz0 1EN0 FX0 1HB0 FX0 1Kp0 Db0 1Kp0 Db0 1Kp0 FX0 93d0 11z0 GAp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
        "Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10||-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|54e4",
        "Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
        "Atlantic/Faroe|LMT WET WEST|r.4 0 -10||-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|49e3",
        "Atlantic/Madeira|LMT FMT -01 +00 +01 WET WEST|17.A 17.A 10 0 -10 0 -10||-3tomQ.o 18anQ.o aPX0 Sp0 M00 1vb0 SN0 1vb0 SN0 1vb0 Td0 1vb0 SN0 1vb0 6600 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1uo0 1c00 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 BJ90 1a00 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e4",
        "Atlantic/South_Georgia|LMT -02|2q.8 20|01|-3eLxx.Q|30",
        "Atlantic/Stanley|LMT SMT -04 -03 -02|3P.o 3P.o 40 30 20|0123232323232323434323232323232323232323232323232323232323232323232323|-3eLw8.A S200 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
        "Australia/Sydney|LMT AEST AEDT|-a4.Q -a0 -b0||-32oW4.Q RlC4.Q xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|40e5",
        "Australia/Adelaide|LMT ACST ACST ACDT|-9e.k -90 -9u -au||-32oVe.k ak0e.k H1Bu xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|11e5",
        "Australia/Brisbane|LMT AEST AEDT|-ac.8 -a0 -b0|012121212121212121|-32Bmc.8 Ry2c.8 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
        "Australia/Broken_Hill|LMT AEST ACST ACST ACDT|-9p.M -a0 -90 -9u -au||-32oVp.M 3Lzp.M 6wp0 H1Bu xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|18e3",
        "Australia/Hobart|LMT AEST AEDT|-9N.g -a0 -b0|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-3109N.g Pk1N.g 1a00 1qM0 Oo0 1zc0 Oo0 TAo0 yM0 1cM0 1cM0 1fA0 1a00 VfA0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|21e4",
        "Australia/Darwin|LMT ACST ACST ACDT|-8H.k -90 -9u -au|01232323232|-32oUH.k ajXH.k H1Bu xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00|12e4",
        "Australia/Eucla|LMT +0845 +0945|-8z.s -8J -9J|01212121212121212121|-30nIz.s PkpO.s xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
        "Australia/Lord_Howe|LMT AEST +1030 +1130 +11|-aA.k -a0 -au -bu -b0|01232323232424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424|-32oWA.k 3tzAA.k 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu|347",
        "Australia/Lindeman|LMT AEST AEDT|-9T.U -a0 -b0|0121212121212121212121|-32BlT.U Ry1T.U xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
        "Australia/Melbourne|LMT AEST AEDT|-9D.Q -a0 -b0||-32oVD.Q RlBD.Q xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|39e5",
        "Australia/Perth|LMT AWST AWDT|-7H.o -80 -90|01212121212121212121|-30nHH.o PkpH.o xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
        "Europe/Brussels|LMT BMT WET CET CEST WEST|-h.u -h.u 0 -10 -20 -10||-3D8Mh.u u1Ah.u SO00 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|21e5",
        "Pacific/Easter|LMT EMT -07 -06 -05|7h.s 7h.s 70 60 50||-3eLsG.w 1HRc0 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0|30e2",
        "Europe/Athens|LMT AMT EET EEST CEST CET|-1y.Q -1y.Q -20 -30 -20 -10||-30SNy.Q OMM1 CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|35e5",
        "Europe/Dublin|LMT DMT IST GMT BST IST|p.l p.l -y.D 0 -10 -10||-3BHby.D 1ra20 Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|12e5",
        "Etc/GMT-0|GMT|0|0||",
        "Etc/GMT-1|+01|-10|0||",
        "Etc/GMT-10|+10|-a0|0||",
        "Etc/GMT-11|+11|-b0|0||",
        "Etc/GMT-12|+12|-c0|0||",
        "Etc/GMT-13|+13|-d0|0||",
        "Etc/GMT-14|+14|-e0|0||",
        "Etc/GMT-2|+02|-20|0||",
        "Etc/GMT-3|+03|-30|0||",
        "Etc/GMT-4|+04|-40|0||",
        "Etc/GMT-5|+05|-50|0||",
        "Etc/GMT-6|+06|-60|0||",
        "Etc/GMT-7|+07|-70|0||",
        "Etc/GMT-8|+08|-80|0||",
        "Etc/GMT-9|+09|-90|0||",
        "Etc/GMT+1|-01|10|0||",
        "Etc/GMT+10|-10|a0|0||",
        "Etc/GMT+11|-11|b0|0||",
        "Etc/GMT+12|-12|c0|0||",
        "Etc/GMT+2|-02|20|0||",
        "Etc/GMT+3|-03|30|0||",
        "Etc/GMT+4|-04|40|0||",
        "Etc/GMT+5|-05|50|0||",
        "Etc/GMT+6|-06|60|0||",
        "Etc/GMT+7|-07|70|0||",
        "Etc/GMT+8|-08|80|0||",
        "Etc/GMT+9|-09|90|0||",
        "Etc/UTC|UTC|0|0||",
        "Europe/Andorra|LMT WET CET CEST|-6.4 0 -10 -20||-2M0M6.4 1Pnc6.4 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|79e3",
        "Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
        "Europe/London|LMT GMT BST BDST|1.f 0 -10 -20|01212121212121212121212121212121212121212121212121232323232321212321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-4VgnW.J 2KHdW.J Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|10e6",
        "Europe/Belgrade|LMT CET CEST|-1m -10 -20||-3topm 2juLm 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|12e5",
        "Europe/Prague|LMT PMT CET CEST GMT|-V.I -V.I -10 -20 0|0123232323232323232423232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-4QbAV.I 1FDc0 XPaV.I 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|13e5",
        "Europe/Bucharest|LMT BMT EET EEST|-1I.o -1I.o -20 -30||-3awpI.o 1AU00 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|19e5",
        "Europe/Budapest|LMT CET CEST|-1g.k -10 -20||-3cK1g.k 124Lg.k 11d0 1iO0 11A0 1o00 11A0 1oo0 11c0 1lc0 17c0 O1V0 3Nf0 WM0 1fA0 1cM0 1cM0 1oJ0 1dd0 1020 1fX0 1cp0 1cM0 1cM0 1cM0 1fA0 1a00 bhy0 Rb0 1wr0 Rc0 1C00 LA0 1C00 LA0 SNW0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cO0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|17e5",
        "Europe/Zurich|LMT BMT CET CEST|-y.8 -t.K -10 -20||-4HyMy.8 1Dw04.m 1SfAt.K 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|38e4",
        "Europe/Chisinau|LMT CMT BMT EET EEST CEST CET MSK MSD|-1T.k -1T -1I.o -20 -30 -20 -10 -30 -40||-3D8NT.k 1wNA0.k wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|67e4",
        "Europe/Gibraltar|LMT GMT BST BDST CET CEST|l.o 0 -10 -20 -10 -20||-3BHbC.A 1ra1C.A Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|30e3",
        "Europe/Helsinki|LMT HMT EET EEST|-1D.N -1D.N -20 -30||-3H0ND.N 1Iu00 OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|12e5",
        "Europe/Kaliningrad|LMT CET CEST EET EEST MSK MSD +03|-1m -10 -20 -20 -30 -30 -40 -30|012121212121212343565656565656565654343434343434343434343434343434343434343434373|-36Rdm UbXm 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
        "Europe/Kiev|LMT KMT EET MSK CEST CET MSD EEST|-22.4 -22.4 -20 -30 -20 -10 -40 -30||-3D8O2.4 1LUM0 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o10 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|34e5",
        "Europe/Kirov|LMT +03 +04 +05 MSD MSK MSK|-3i.M -30 -40 -50 -40 -30 -40|0123232323232323232454524545454545454545454545454545454545454565|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 2pz0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
        "Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121212124121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 M00 1vb0 SN0 1vb0 SN0 1vb0 Td0 1vb0 SN0 1vb0 6600 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1uo0 1c00 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 oiK0 1cM0 1cM0 1fB0 1cM0 1cM0 1cM0 1fA0 1a00 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
        "Europe/Madrid|LMT WET WEST WEMT CET CEST|e.I 0 -10 -20 -10 -20||-2M0M0 G5z0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|62e5",
        "Europe/Malta|LMT CET CEST|-W.4 -10 -20||-35rcW.4 SXzW.4 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|42e4",
        "Europe/Minsk|LMT MMT EET MSK CEST CET MSD EEST +03|-1O.g -1O -20 -30 -20 -10 -40 -30 -30|012345454363636363636363636372727272727272727272727272727272727272728|-3D8NO.g 1LUM0.g eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
        "Europe/Paris|LMT PMT WET WEST CEST CET WEMT|-9.l -9.l 0 -10 -20 -10 -20||-3bQ09.l MDA0 cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|11e6",
        "Europe/Moscow|LMT MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|01232434565756865656565656565656565698656565656565656565656565656565656565656a6|-3D8Ou.h 1sQM0 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
        "Europe/Riga|LMT RMT LST EET MSK CEST CET MSD EEST|-1A.y -1A.y -2A.y -20 -30 -20 -10 -40 -30||-3D8NA.y 1xde0 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|64e4",
        "Europe/Rome|LMT RMT CET CEST|-N.U -N.U -10 -20||-4aU0N.U 15snN.U T000 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|39e5",
        "Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
        "Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|",
        "Europe/Simferopol|LMT SMT EET MSK CEST CET MSD EEST MSK|-2g.o -2g -20 -30 -20 -10 -40 -30 -40|0123454543636363636363636363272727636363727272727272727272727272727272727283|-3D8Og.o 1LUM0.o eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eN0 1cM0 1cM0 1cM0 1cM0 dV0 WO0 1cM0 1cM0 1fy0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
        "Europe/Sofia|LMT IMT EET CET CEST EEST|-1x.g -1U.U -20 -10 -20 -30|0123434325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-3D8Nx.g AiLA.k 1UFeU.U WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|12e5",
        "Europe/Tallinn|LMT TMT CET CEST EET MSK MSD EEST|-1D -1D -10 -20 -20 -30 -40 -30|0123214532323565656565656565657474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474|-3D8ND 1wI00 teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|41e4",
        "Europe/Tirane|LMT CET CEST|-1j.k -10 -20||-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|42e4",
        "Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
        "Europe/Vienna|LMT CET CEST|-15.l -10 -20||-36Rd5.l UbX5.l 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|18e5",
        "Europe/Vilnius|LMT WMT KMT CET EET MSK CEST MSD EEST|-1F.g -1o -1z.A -10 -20 -30 -20 -40 -30||-3D8NF.g 1u5Ah.g 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|54e4",
        "Europe/Volgograd|LMT +03 +04 +05 MSD MSK MSK|-2V.E -30 -40 -50 -40 -30 -40|012323232323232324545452454545454545454545454545454545454545456525|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1fA0 1cM0 2pz0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0 5gn0|10e5",
        "Europe/Warsaw|LMT WMT CET CEST EET EEST|-1o -1o -10 -20 -20 -30||-3D8No 1qDA0 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|17e5",
        "Pacific/Honolulu|LMT HST HDT HWT HPT HST|av.q au 9u 9u 9u a0|01213415|-3061s.y 1uMdW.y 8x0 lef0 8wWu iAu 46p0|37e4",
        "Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
        "Indian/Maldives|LMT MMT +05|-4S -4S -50|012|-3D8QS 3eLA0|35e4",
        "Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
        "Pacific/Kwajalein|LMT +11 +10 +09 -12 +12|-b9.k -b0 -a0 -90 c0 -c0|0123145|-2M0X9.k 1rDA9.k akp0 6Up0 12ry0 Wan0|14e3",
        "Pacific/Chatham|LMT +1215 +1245 +1345|-cd.M -cf -cJ -dJ||-46jMd.M 37RbW.M 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00|600",
        "Pacific/Apia|LMT LMT -1130 -11 -10 +14 +13|-cx.4 bq.U bu b0 a0 -e0 -d0|012343456565656565656565656|-38Fox.4 J1A0 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0|37e3",
        "Pacific/Bougainville|LMT PMMT +10 +09 +11|-am.g -9M.w -a0 -90 -b0|012324|-3D8Wm.g AvAx.I 1TCLM.w 7CN0 2MQp0|18e4",
        "Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|012121212121212121212121|-2l9nd.g 2uNXd.g Dc0 n610 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
        "Pacific/Enderbury|-00 -12 -11 +13|0 c0 b0 -d0|0123|-1iIo0 1GsA0 B7X0|1",
        "Pacific/Fakaofo|LMT -11 +13|bo.U b0 -d0|012|-2M0Az.4 4ufXz.4|483",
        "Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|012121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 2hc0 bc0|88e4",
        "Pacific/Tarawa|LMT +12|-bw.4 -c0|01|-2M0Xw.4|29e3",
        "Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
        "Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
        "Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
        "Pacific/Guam|LMT LMT GST +09 GDT ChST|el -9D -a0 -90 -b0 -a0|0123242424242424242425|-54m9D 2glc0 1DFbD 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
        "Pacific/Kiritimati|LMT -1040 -10 +14|at.k aE a0 -e0|0123|-2M0Bu.E 3bIMa.E B7Xk|51e2",
        "Pacific/Kosrae|LMT LMT +11 +09 +10 +12|d8.4 -aP.U -b0 -90 -a0 -c0|0123243252|-54maP.U 2glc0 xsnP.U axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
        "Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
        "Pacific/Pago_Pago|LMT LMT SST|-cB.c bm.M b0|012|-38FoB.c J1A0|37e2",
        "Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
        "Pacific/Niue|LMT -1120 -11|bj.E bk b0|012|-FScE.k suo0.k|12e2",
        "Pacific/Norfolk|LMT +1112 +1130 +1230 +11 +12|-bb.Q -bc -bu -cu -b0 -c0||-2M0Xb.Q 21ILX.Q W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|25e4",
        "Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
        "Pacific/Palau|LMT LMT +09|f2.4 -8V.U -90|012|-54m8V.U 2glc0|21e3",
        "Pacific/Pitcairn|LMT -0830 -08|8E.k 8u 80|012|-2M0Dj.E 3UVXN.E|56",
        "Pacific/Rarotonga|LMT LMT -1030 -0930 -10|-dk.U aD.4 au 9u a0|01234343434343434343434343434|-2Otpk.U 28zc0 13tbO.U IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
        "Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
        "Pacific/Tongatapu|LMT +1220 +13 +14|-cj.c -ck -d0 -e0|01232323232|-XbMj.c BgLX.c 1yndk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3"
      ],
      links: [
        "Africa/Abidjan|Africa/Accra",
        "Africa/Abidjan|Africa/Bamako",
        "Africa/Abidjan|Africa/Banjul",
        "Africa/Abidjan|Africa/Conakry",
        "Africa/Abidjan|Africa/Dakar",
        "Africa/Abidjan|Africa/Freetown",
        "Africa/Abidjan|Africa/Lome",
        "Africa/Abidjan|Africa/Nouakchott",
        "Africa/Abidjan|Africa/Ouagadougou",
        "Africa/Abidjan|Africa/Timbuktu",
        "Africa/Abidjan|Atlantic/Reykjavik",
        "Africa/Abidjan|Atlantic/St_Helena",
        "Africa/Abidjan|Iceland",
        "Africa/Cairo|Egypt",
        "Africa/Johannesburg|Africa/Maseru",
        "Africa/Johannesburg|Africa/Mbabane",
        "Africa/Lagos|Africa/Bangui",
        "Africa/Lagos|Africa/Brazzaville",
        "Africa/Lagos|Africa/Douala",
        "Africa/Lagos|Africa/Kinshasa",
        "Africa/Lagos|Africa/Libreville",
        "Africa/Lagos|Africa/Luanda",
        "Africa/Lagos|Africa/Malabo",
        "Africa/Lagos|Africa/Niamey",
        "Africa/Lagos|Africa/Porto-Novo",
        "Africa/Maputo|Africa/Blantyre",
        "Africa/Maputo|Africa/Bujumbura",
        "Africa/Maputo|Africa/Gaborone",
        "Africa/Maputo|Africa/Harare",
        "Africa/Maputo|Africa/Kigali",
        "Africa/Maputo|Africa/Lubumbashi",
        "Africa/Maputo|Africa/Lusaka",
        "Africa/Nairobi|Africa/Addis_Ababa",
        "Africa/Nairobi|Africa/Asmara",
        "Africa/Nairobi|Africa/Asmera",
        "Africa/Nairobi|Africa/Dar_es_Salaam",
        "Africa/Nairobi|Africa/Djibouti",
        "Africa/Nairobi|Africa/Kampala",
        "Africa/Nairobi|Africa/Mogadishu",
        "Africa/Nairobi|Indian/Antananarivo",
        "Africa/Nairobi|Indian/Comoro",
        "Africa/Nairobi|Indian/Mayotte",
        "Africa/Tripoli|Libya",
        "America/Adak|America/Atka",
        "America/Adak|US/Aleutian",
        "America/Anchorage|US/Alaska",
        "America/Argentina/Buenos_Aires|America/Buenos_Aires",
        "America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
        "America/Argentina/Catamarca|America/Catamarca",
        "America/Argentina/Cordoba|America/Cordoba",
        "America/Argentina/Cordoba|America/Rosario",
        "America/Argentina/Jujuy|America/Jujuy",
        "America/Argentina/Mendoza|America/Mendoza",
        "America/Chicago|CST6CDT",
        "America/Chicago|US/Central",
        "America/Denver|America/Shiprock",
        "America/Denver|MST7MDT",
        "America/Denver|Navajo",
        "America/Denver|US/Mountain",
        "America/Detroit|US/Michigan",
        "America/Edmonton|America/Yellowknife",
        "America/Edmonton|Canada/Mountain",
        "America/Fort_Wayne|America/Indiana/Indianapolis",
        "America/Fort_Wayne|America/Indianapolis",
        "America/Fort_Wayne|US/East-Indiana",
        "America/Godthab|America/Nuuk",
        "America/Halifax|Canada/Atlantic",
        "America/Havana|Cuba",
        "America/Indiana/Knox|America/Knox_IN",
        "America/Indiana/Knox|US/Indiana-Starke",
        "America/Iqaluit|America/Pangnirtung",
        "America/Jamaica|Jamaica",
        "America/Kentucky/Louisville|America/Louisville",
        "America/Los_Angeles|PST8PDT",
        "America/Los_Angeles|US/Pacific",
        "America/Manaus|Brazil/West",
        "America/Mazatlan|Mexico/BajaSur",
        "America/Mexico_City|Mexico/General",
        "America/New_York|EST5EDT",
        "America/New_York|US/Eastern",
        "America/Noronha|Brazil/DeNoronha",
        "America/Panama|America/Atikokan",
        "America/Panama|America/Cayman",
        "America/Panama|America/Coral_Harbour",
        "America/Panama|EST",
        "America/Phoenix|America/Creston",
        "America/Phoenix|MST",
        "America/Phoenix|US/Arizona",
        "America/Puerto_Rico|America/Anguilla",
        "America/Puerto_Rico|America/Antigua",
        "America/Puerto_Rico|America/Aruba",
        "America/Puerto_Rico|America/Blanc-Sablon",
        "America/Puerto_Rico|America/Curacao",
        "America/Puerto_Rico|America/Dominica",
        "America/Puerto_Rico|America/Grenada",
        "America/Puerto_Rico|America/Guadeloupe",
        "America/Puerto_Rico|America/Kralendijk",
        "America/Puerto_Rico|America/Lower_Princes",
        "America/Puerto_Rico|America/Marigot",
        "America/Puerto_Rico|America/Montserrat",
        "America/Puerto_Rico|America/Port_of_Spain",
        "America/Puerto_Rico|America/St_Barthelemy",
        "America/Puerto_Rico|America/St_Kitts",
        "America/Puerto_Rico|America/St_Lucia",
        "America/Puerto_Rico|America/St_Thomas",
        "America/Puerto_Rico|America/St_Vincent",
        "America/Puerto_Rico|America/Tortola",
        "America/Puerto_Rico|America/Virgin",
        "America/Regina|Canada/Saskatchewan",
        "America/Rio_Branco|America/Porto_Acre",
        "America/Rio_Branco|Brazil/Acre",
        "America/Santiago|Chile/Continental",
        "America/Sao_Paulo|Brazil/East",
        "America/St_Johns|Canada/Newfoundland",
        "America/Tijuana|America/Ensenada",
        "America/Tijuana|America/Santa_Isabel",
        "America/Tijuana|Mexico/BajaNorte",
        "America/Toronto|America/Montreal",
        "America/Toronto|America/Nassau",
        "America/Toronto|America/Nipigon",
        "America/Toronto|America/Thunder_Bay",
        "America/Toronto|Canada/Eastern",
        "America/Vancouver|Canada/Pacific",
        "America/Whitehorse|Canada/Yukon",
        "America/Winnipeg|America/Rainy_River",
        "America/Winnipeg|Canada/Central",
        "Asia/Ashgabat|Asia/Ashkhabad",
        "Asia/Bangkok|Asia/Phnom_Penh",
        "Asia/Bangkok|Asia/Vientiane",
        "Asia/Bangkok|Indian/Christmas",
        "Asia/Brunei|Asia/Kuching",
        "Asia/Dhaka|Asia/Dacca",
        "Asia/Dubai|Asia/Muscat",
        "Asia/Dubai|Indian/Mahe",
        "Asia/Dubai|Indian/Reunion",
        "Asia/Ho_Chi_Minh|Asia/Saigon",
        "Asia/Hong_Kong|Hongkong",
        "Asia/Jerusalem|Asia/Tel_Aviv",
        "Asia/Jerusalem|Israel",
        "Asia/Kathmandu|Asia/Katmandu",
        "Asia/Kolkata|Asia/Calcutta",
        "Asia/Kuala_Lumpur|Asia/Singapore",
        "Asia/Kuala_Lumpur|Singapore",
        "Asia/Macau|Asia/Macao",
        "Asia/Makassar|Asia/Ujung_Pandang",
        "Asia/Nicosia|Europe/Nicosia",
        "Asia/Qatar|Asia/Bahrain",
        "Asia/Rangoon|Asia/Yangon",
        "Asia/Rangoon|Indian/Cocos",
        "Asia/Riyadh|Antarctica/Syowa",
        "Asia/Riyadh|Asia/Aden",
        "Asia/Riyadh|Asia/Kuwait",
        "Asia/Seoul|ROK",
        "Asia/Shanghai|Asia/Chongqing",
        "Asia/Shanghai|Asia/Chungking",
        "Asia/Shanghai|Asia/Harbin",
        "Asia/Shanghai|PRC",
        "Asia/Taipei|ROC",
        "Asia/Tehran|Iran",
        "Asia/Thimphu|Asia/Thimbu",
        "Asia/Tokyo|Japan",
        "Asia/Ulaanbaatar|Asia/Choibalsan",
        "Asia/Ulaanbaatar|Asia/Ulan_Bator",
        "Asia/Urumqi|Asia/Kashgar",
        "Atlantic/Faroe|Atlantic/Faeroe",
        "Australia/Adelaide|Australia/South",
        "Australia/Brisbane|Australia/Queensland",
        "Australia/Broken_Hill|Australia/Yancowinna",
        "Australia/Darwin|Australia/North",
        "Australia/Hobart|Australia/Currie",
        "Australia/Hobart|Australia/Tasmania",
        "Australia/Lord_Howe|Australia/LHI",
        "Australia/Melbourne|Australia/Victoria",
        "Australia/Perth|Australia/West",
        "Australia/Sydney|Australia/ACT",
        "Australia/Sydney|Australia/Canberra",
        "Australia/Sydney|Australia/NSW",
        "Etc/GMT-0|Etc/GMT",
        "Etc/GMT-0|Etc/GMT+0",
        "Etc/GMT-0|Etc/GMT0",
        "Etc/GMT-0|Etc/Greenwich",
        "Etc/GMT-0|GMT",
        "Etc/GMT-0|GMT+0",
        "Etc/GMT-0|GMT-0",
        "Etc/GMT-0|GMT0",
        "Etc/GMT-0|Greenwich",
        "Etc/UTC|Etc/UCT",
        "Etc/UTC|Etc/Universal",
        "Etc/UTC|Etc/Zulu",
        "Etc/UTC|UCT",
        "Etc/UTC|UTC",
        "Etc/UTC|Universal",
        "Etc/UTC|Zulu",
        "Europe/Athens|EET",
        "Europe/Belgrade|Europe/Ljubljana",
        "Europe/Belgrade|Europe/Podgorica",
        "Europe/Belgrade|Europe/Sarajevo",
        "Europe/Belgrade|Europe/Skopje",
        "Europe/Belgrade|Europe/Zagreb",
        "Europe/Berlin|Arctic/Longyearbyen",
        "Europe/Berlin|Atlantic/Jan_Mayen",
        "Europe/Berlin|Europe/Copenhagen",
        "Europe/Berlin|Europe/Oslo",
        "Europe/Berlin|Europe/Stockholm",
        "Europe/Brussels|CET",
        "Europe/Brussels|Europe/Amsterdam",
        "Europe/Brussels|Europe/Luxembourg",
        "Europe/Brussels|MET",
        "Europe/Chisinau|Europe/Tiraspol",
        "Europe/Dublin|Eire",
        "Europe/Helsinki|Europe/Mariehamn",
        "Europe/Istanbul|Asia/Istanbul",
        "Europe/Istanbul|Turkey",
        "Europe/Kiev|Europe/Kyiv",
        "Europe/Kiev|Europe/Uzhgorod",
        "Europe/Kiev|Europe/Zaporozhye",
        "Europe/Lisbon|Portugal",
        "Europe/Lisbon|WET",
        "Europe/London|Europe/Belfast",
        "Europe/London|Europe/Guernsey",
        "Europe/London|Europe/Isle_of_Man",
        "Europe/London|Europe/Jersey",
        "Europe/London|GB",
        "Europe/London|GB-Eire",
        "Europe/Moscow|W-SU",
        "Europe/Paris|Europe/Monaco",
        "Europe/Prague|Europe/Bratislava",
        "Europe/Rome|Europe/San_Marino",
        "Europe/Rome|Europe/Vatican",
        "Europe/Warsaw|Poland",
        "Europe/Zurich|Europe/Busingen",
        "Europe/Zurich|Europe/Vaduz",
        "Indian/Maldives|Indian/Kerguelen",
        "Pacific/Auckland|Antarctica/McMurdo",
        "Pacific/Auckland|Antarctica/South_Pole",
        "Pacific/Auckland|NZ",
        "Pacific/Chatham|NZ-CHAT",
        "Pacific/Easter|Chile/EasterIsland",
        "Pacific/Enderbury|Pacific/Kanton",
        "Pacific/Guadalcanal|Pacific/Pohnpei",
        "Pacific/Guadalcanal|Pacific/Ponape",
        "Pacific/Guam|Pacific/Saipan",
        "Pacific/Honolulu|HST",
        "Pacific/Honolulu|Pacific/Johnston",
        "Pacific/Honolulu|US/Hawaii",
        "Pacific/Kwajalein|Kwajalein",
        "Pacific/Pago_Pago|Pacific/Midway",
        "Pacific/Pago_Pago|Pacific/Samoa",
        "Pacific/Pago_Pago|US/Samoa",
        "Pacific/Port_Moresby|Antarctica/DumontDUrville",
        "Pacific/Port_Moresby|Pacific/Chuuk",
        "Pacific/Port_Moresby|Pacific/Truk",
        "Pacific/Port_Moresby|Pacific/Yap",
        "Pacific/Tarawa|Pacific/Funafuti",
        "Pacific/Tarawa|Pacific/Majuro",
        "Pacific/Tarawa|Pacific/Wake",
        "Pacific/Tarawa|Pacific/Wallis"
      ],
      countries: [
        "AD|Europe/Andorra",
        "AE|Asia/Dubai",
        "AF|Asia/Kabul",
        "AG|America/Puerto_Rico America/Antigua",
        "AI|America/Puerto_Rico America/Anguilla",
        "AL|Europe/Tirane",
        "AM|Asia/Yerevan",
        "AO|Africa/Lagos Africa/Luanda",
        "AQ|Antarctica/Casey Antarctica/Davis Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Troll Antarctica/Vostok Pacific/Auckland Pacific/Port_Moresby Asia/Riyadh Asia/Singapore Antarctica/McMurdo Antarctica/DumontDUrville Antarctica/Syowa",
        "AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia",
        "AS|Pacific/Pago_Pago",
        "AT|Europe/Vienna",
        "AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla Asia/Tokyo",
        "AW|America/Puerto_Rico America/Aruba",
        "AX|Europe/Helsinki Europe/Mariehamn",
        "AZ|Asia/Baku",
        "BA|Europe/Belgrade Europe/Sarajevo",
        "BB|America/Barbados",
        "BD|Asia/Dhaka",
        "BE|Europe/Brussels",
        "BF|Africa/Abidjan Africa/Ouagadougou",
        "BG|Europe/Sofia",
        "BH|Asia/Qatar Asia/Bahrain",
        "BI|Africa/Maputo Africa/Bujumbura",
        "BJ|Africa/Lagos Africa/Porto-Novo",
        "BL|America/Puerto_Rico America/St_Barthelemy",
        "BM|Atlantic/Bermuda",
        "BN|Asia/Kuching Asia/Brunei",
        "BO|America/La_Paz",
        "BQ|America/Puerto_Rico America/Kralendijk",
        "BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco",
        "BS|America/Toronto America/Nassau",
        "BT|Asia/Thimphu",
        "BW|Africa/Maputo Africa/Gaborone",
        "BY|Europe/Minsk",
        "BZ|America/Belize",
        "CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Toronto America/Iqaluit America/Winnipeg America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Inuvik America/Dawson_Creek America/Fort_Nelson America/Whitehorse America/Dawson America/Vancouver America/Panama America/Puerto_Rico America/Phoenix America/Blanc-Sablon America/Atikokan America/Creston",
        "CC|Asia/Yangon Indian/Cocos",
        "CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
        "CF|Africa/Lagos Africa/Bangui",
        "CG|Africa/Lagos Africa/Brazzaville",
        "CH|Europe/Zurich",
        "CI|Africa/Abidjan",
        "CK|Pacific/Rarotonga",
        "CL|America/Santiago America/Coyhaique America/Punta_Arenas Pacific/Easter",
        "CM|Africa/Lagos Africa/Douala",
        "CN|Asia/Shanghai Asia/Urumqi",
        "CO|America/Bogota",
        "CR|America/Costa_Rica",
        "CU|America/Havana",
        "CV|Atlantic/Cape_Verde",
        "CW|America/Puerto_Rico America/Curacao",
        "CX|Asia/Bangkok Indian/Christmas",
        "CY|Asia/Nicosia Asia/Famagusta",
        "CZ|Europe/Prague",
        "DE|Europe/Zurich Europe/Berlin Europe/Busingen",
        "DJ|Africa/Nairobi Africa/Djibouti",
        "DK|Europe/Berlin Europe/Copenhagen",
        "DM|America/Puerto_Rico America/Dominica",
        "DO|America/Santo_Domingo",
        "DZ|Africa/Algiers",
        "EC|America/Guayaquil Pacific/Galapagos",
        "EE|Europe/Tallinn",
        "EG|Africa/Cairo",
        "EH|Africa/El_Aaiun",
        "ER|Africa/Nairobi Africa/Asmara",
        "ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
        "ET|Africa/Nairobi Africa/Addis_Ababa",
        "FI|Europe/Helsinki",
        "FJ|Pacific/Fiji",
        "FK|Atlantic/Stanley",
        "FM|Pacific/Kosrae Pacific/Port_Moresby Pacific/Guadalcanal Pacific/Chuuk Pacific/Pohnpei",
        "FO|Atlantic/Faroe",
        "FR|Europe/Paris",
        "GA|Africa/Lagos Africa/Libreville",
        "GB|Europe/London",
        "GD|America/Puerto_Rico America/Grenada",
        "GE|Asia/Tbilisi",
        "GF|America/Cayenne",
        "GG|Europe/London Europe/Guernsey",
        "GH|Africa/Abidjan Africa/Accra",
        "GI|Europe/Gibraltar",
        "GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule",
        "GM|Africa/Abidjan Africa/Banjul",
        "GN|Africa/Abidjan Africa/Conakry",
        "GP|America/Puerto_Rico America/Guadeloupe",
        "GQ|Africa/Lagos Africa/Malabo",
        "GR|Europe/Athens",
        "GS|Atlantic/South_Georgia",
        "GT|America/Guatemala",
        "GU|Pacific/Guam",
        "GW|Africa/Bissau",
        "GY|America/Guyana",
        "HK|Asia/Hong_Kong",
        "HN|America/Tegucigalpa",
        "HR|Europe/Belgrade Europe/Zagreb",
        "HT|America/Port-au-Prince",
        "HU|Europe/Budapest",
        "ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
        "IE|Europe/Dublin",
        "IL|Asia/Jerusalem",
        "IM|Europe/London Europe/Isle_of_Man",
        "IN|Asia/Kolkata",
        "IO|Indian/Chagos",
        "IQ|Asia/Baghdad",
        "IR|Asia/Tehran",
        "IS|Africa/Abidjan Atlantic/Reykjavik",
        "IT|Europe/Rome",
        "JE|Europe/London Europe/Jersey",
        "JM|America/Jamaica",
        "JO|Asia/Amman",
        "JP|Asia/Tokyo",
        "KE|Africa/Nairobi",
        "KG|Asia/Bishkek",
        "KH|Asia/Bangkok Asia/Phnom_Penh",
        "KI|Pacific/Tarawa Pacific/Kanton Pacific/Kiritimati",
        "KM|Africa/Nairobi Indian/Comoro",
        "KN|America/Puerto_Rico America/St_Kitts",
        "KP|Asia/Pyongyang",
        "KR|Asia/Seoul",
        "KW|Asia/Riyadh Asia/Kuwait",
        "KY|America/Panama America/Cayman",
        "KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral",
        "LA|Asia/Bangkok Asia/Vientiane",
        "LB|Asia/Beirut",
        "LC|America/Puerto_Rico America/St_Lucia",
        "LI|Europe/Zurich Europe/Vaduz",
        "LK|Asia/Colombo",
        "LR|Africa/Monrovia",
        "LS|Africa/Johannesburg Africa/Maseru",
        "LT|Europe/Vilnius",
        "LU|Europe/Brussels Europe/Luxembourg",
        "LV|Europe/Riga",
        "LY|Africa/Tripoli",
        "MA|Africa/Casablanca",
        "MC|Europe/Paris Europe/Monaco",
        "MD|Europe/Chisinau",
        "ME|Europe/Belgrade Europe/Podgorica",
        "MF|America/Puerto_Rico America/Marigot",
        "MG|Africa/Nairobi Indian/Antananarivo",
        "MH|Pacific/Tarawa Pacific/Kwajalein Pacific/Majuro",
        "MK|Europe/Belgrade Europe/Skopje",
        "ML|Africa/Abidjan Africa/Bamako",
        "MM|Asia/Yangon",
        "MN|Asia/Ulaanbaatar Asia/Hovd",
        "MO|Asia/Macau",
        "MP|Pacific/Guam Pacific/Saipan",
        "MQ|America/Martinique",
        "MR|Africa/Abidjan Africa/Nouakchott",
        "MS|America/Puerto_Rico America/Montserrat",
        "MT|Europe/Malta",
        "MU|Indian/Mauritius",
        "MV|Indian/Maldives",
        "MW|Africa/Maputo Africa/Blantyre",
        "MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Chihuahua America/Ciudad_Juarez America/Ojinaga America/Mazatlan America/Bahia_Banderas America/Hermosillo America/Tijuana",
        "MY|Asia/Kuching Asia/Singapore Asia/Kuala_Lumpur",
        "MZ|Africa/Maputo",
        "NA|Africa/Windhoek",
        "NC|Pacific/Noumea",
        "NE|Africa/Lagos Africa/Niamey",
        "NF|Pacific/Norfolk",
        "NG|Africa/Lagos",
        "NI|America/Managua",
        "NL|Europe/Brussels Europe/Amsterdam",
        "NO|Europe/Berlin Europe/Oslo",
        "NP|Asia/Kathmandu",
        "NR|Pacific/Nauru",
        "NU|Pacific/Niue",
        "NZ|Pacific/Auckland Pacific/Chatham",
        "OM|Asia/Dubai Asia/Muscat",
        "PA|America/Panama",
        "PE|America/Lima",
        "PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
        "PG|Pacific/Port_Moresby Pacific/Bougainville",
        "PH|Asia/Manila",
        "PK|Asia/Karachi",
        "PL|Europe/Warsaw",
        "PM|America/Miquelon",
        "PN|Pacific/Pitcairn",
        "PR|America/Puerto_Rico",
        "PS|Asia/Gaza Asia/Hebron",
        "PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
        "PW|Pacific/Palau",
        "PY|America/Asuncion",
        "QA|Asia/Qatar",
        "RE|Asia/Dubai Indian/Reunion",
        "RO|Europe/Bucharest",
        "RS|Europe/Belgrade",
        "RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Volgograd Europe/Astrakhan Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr",
        "RW|Africa/Maputo Africa/Kigali",
        "SA|Asia/Riyadh",
        "SB|Pacific/Guadalcanal",
        "SC|Asia/Dubai Indian/Mahe",
        "SD|Africa/Khartoum",
        "SE|Europe/Berlin Europe/Stockholm",
        "SG|Asia/Singapore",
        "SH|Africa/Abidjan Atlantic/St_Helena",
        "SI|Europe/Belgrade Europe/Ljubljana",
        "SJ|Europe/Berlin Arctic/Longyearbyen",
        "SK|Europe/Prague Europe/Bratislava",
        "SL|Africa/Abidjan Africa/Freetown",
        "SM|Europe/Rome Europe/San_Marino",
        "SN|Africa/Abidjan Africa/Dakar",
        "SO|Africa/Nairobi Africa/Mogadishu",
        "SR|America/Paramaribo",
        "SS|Africa/Juba",
        "ST|Africa/Sao_Tome",
        "SV|America/El_Salvador",
        "SX|America/Puerto_Rico America/Lower_Princes",
        "SY|Asia/Damascus",
        "SZ|Africa/Johannesburg Africa/Mbabane",
        "TC|America/Grand_Turk",
        "TD|Africa/Ndjamena",
        "TF|Asia/Dubai Indian/Maldives Indian/Kerguelen",
        "TG|Africa/Abidjan Africa/Lome",
        "TH|Asia/Bangkok",
        "TJ|Asia/Dushanbe",
        "TK|Pacific/Fakaofo",
        "TL|Asia/Dili",
        "TM|Asia/Ashgabat",
        "TN|Africa/Tunis",
        "TO|Pacific/Tongatapu",
        "TR|Europe/Istanbul",
        "TT|America/Puerto_Rico America/Port_of_Spain",
        "TV|Pacific/Tarawa Pacific/Funafuti",
        "TW|Asia/Taipei",
        "TZ|Africa/Nairobi Africa/Dar_es_Salaam",
        "UA|Europe/Simferopol Europe/Kyiv",
        "UG|Africa/Nairobi Africa/Kampala",
        "UM|Pacific/Pago_Pago Pacific/Tarawa Pacific/Midway Pacific/Wake",
        "US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu",
        "UY|America/Montevideo",
        "UZ|Asia/Samarkand Asia/Tashkent",
        "VA|Europe/Rome Europe/Vatican",
        "VC|America/Puerto_Rico America/St_Vincent",
        "VE|America/Caracas",
        "VG|America/Puerto_Rico America/Tortola",
        "VI|America/Puerto_Rico America/St_Thomas",
        "VN|Asia/Bangkok Asia/Ho_Chi_Minh",
        "VU|Pacific/Efate",
        "WF|Pacific/Tarawa Pacific/Wallis",
        "WS|Pacific/Apia",
        "YE|Asia/Riyadh Asia/Aden",
        "YT|Africa/Nairobi Indian/Mayotte",
        "ZA|Africa/Johannesburg",
        "ZM|Africa/Maputo Africa/Lusaka",
        "ZW|Africa/Maputo Africa/Harare"
      ]
    };
  }
});

// node_modules/moment-timezone/index.js
var require_moment_timezone2 = __commonJS({
  "node_modules/moment-timezone/index.js"(exports, module2) {
    var moment3 = module2.exports = require_moment_timezone();
    moment3.tz.load(require_latest());
  }
});

// node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/deepmerge/dist/cjs.js"(exports, module2) {
    "use strict";
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
    }
    var canUseSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge2(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge2;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge2;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return Object.propertyIsEnumerable.call(target, symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }
      getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        }
      });
      return destination;
    }
    function deepmerge2(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge2.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge2(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge2;
    module2.exports = deepmerge_1;
  }
});

// node_modules/jalaali-js/index.js
var require_jalaali_js = __commonJS({
  "node_modules/jalaali-js/index.js"(exports, module2) {
    module2.exports = {
      toJalaali: toJalaali2,
      toGregorian: toGregorian2,
      isValidJalaaliDate,
      isLeapJalaaliYear,
      jalaaliMonthLength,
      jalCal,
      j2d,
      d2j,
      g2d,
      d2g,
      jalaaliToDateObject,
      jalaaliWeek
    };
    var breaks = [
      -61,
      9,
      38,
      199,
      426,
      686,
      756,
      818,
      1111,
      1181,
      1210,
      1635,
      2060,
      2097,
      2192,
      2262,
      2324,
      2394,
      2456,
      3178
    ];
    function toJalaali2(gy, gm, gd) {
      if (Object.prototype.toString.call(gy) === "[object Date]") {
        gd = gy.getDate();
        gm = gy.getMonth() + 1;
        gy = gy.getFullYear();
      }
      return d2j(g2d(gy, gm, gd));
    }
    function toGregorian2(jy, jm, jd) {
      return d2g(j2d(jy, jm, jd));
    }
    function isValidJalaaliDate(jy, jm, jd) {
      return jy >= -61 && jy <= 3177 && jm >= 1 && jm <= 12 && jd >= 1 && jd <= jalaaliMonthLength(jy, jm);
    }
    function isLeapJalaaliYear(jy) {
      return jalCalLeap(jy) === 0;
    }
    function jalaaliMonthLength(jy, jm) {
      if (jm <= 6)
        return 31;
      if (jm <= 11)
        return 30;
      if (isLeapJalaaliYear(jy))
        return 30;
      return 29;
    }
    function jalCalLeap(jy) {
      var bl = breaks.length, jp = breaks[0], jm, jump, leap, n, i;
      if (jy < jp || jy >= breaks[bl - 1])
        throw new Error("Invalid Jalaali year " + jy);
      for (i = 1; i < bl; i += 1) {
        jm = breaks[i];
        jump = jm - jp;
        if (jy < jm)
          break;
        jp = jm;
      }
      n = jy - jp;
      if (jump - n < 6)
        n = n - jump + div(jump + 4, 33) * 33;
      leap = mod2(mod2(n + 1, 33) - 1, 4);
      if (leap === -1) {
        leap = 4;
      }
      return leap;
    }
    function jalCal(jy, withoutLeap) {
      var bl = breaks.length, gy = jy + 621, leapJ = -14, jp = breaks[0], jm, jump, leap, leapG, march3, n, i;
      if (jy < jp || jy >= breaks[bl - 1])
        throw new Error("Invalid Jalaali year " + jy);
      for (i = 1; i < bl; i += 1) {
        jm = breaks[i];
        jump = jm - jp;
        if (jy < jm)
          break;
        leapJ = leapJ + div(jump, 33) * 8 + div(mod2(jump, 33), 4);
        jp = jm;
      }
      n = jy - jp;
      leapJ = leapJ + div(n, 33) * 8 + div(mod2(n, 33) + 3, 4);
      if (mod2(jump, 33) === 4 && jump - n === 4)
        leapJ += 1;
      leapG = div(gy, 4) - div((div(gy, 100) + 1) * 3, 4) - 150;
      march3 = 20 + leapJ - leapG;
      if (withoutLeap)
        return { gy, march: march3 };
      if (jump - n < 6)
        n = n - jump + div(jump + 4, 33) * 33;
      leap = mod2(mod2(n + 1, 33) - 1, 4);
      if (leap === -1) {
        leap = 4;
      }
      return {
        leap,
        gy,
        march: march3
      };
    }
    function j2d(jy, jm, jd) {
      var r = jalCal(jy, true);
      return g2d(r.gy, 3, r.march) + (jm - 1) * 31 - div(jm, 7) * (jm - 7) + jd - 1;
    }
    function d2j(jdn) {
      var gy = d2g(jdn).gy, jy = gy - 621, r = jalCal(jy, false), jdn1f = g2d(gy, 3, r.march), jd, jm, k;
      k = jdn - jdn1f;
      if (k >= 0) {
        if (k <= 185) {
          jm = 1 + div(k, 31);
          jd = mod2(k, 31) + 1;
          return {
            jy,
            jm,
            jd
          };
        } else {
          k -= 186;
        }
      } else {
        jy -= 1;
        k += 179;
        if (r.leap === 1)
          k += 1;
      }
      jm = 7 + div(k, 30);
      jd = mod2(k, 30) + 1;
      return {
        jy,
        jm,
        jd
      };
    }
    function g2d(gy, gm, gd) {
      var d3 = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod2(gm + 9, 12) + 2, 5) + gd - 34840408;
      d3 = d3 - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;
      return d3;
    }
    function d2g(jdn) {
      var j, i, gd, gm, gy;
      j = 4 * jdn + 139361631;
      j = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;
      i = div(mod2(j, 1461), 4) * 5 + 308;
      gd = div(mod2(i, 153), 5) + 1;
      gm = mod2(div(i, 153), 12) + 1;
      gy = div(j, 1461) - 100100 + div(8 - gm, 6);
      return {
        gy,
        gm,
        gd
      };
    }
    function jalaaliWeek(jy, jm, jd) {
      var dayOfWeek = jalaaliToDateObject(jy, jm, jd).getDay();
      var startDayDifference = dayOfWeek == 6 ? 0 : -(dayOfWeek + 1);
      var endDayDifference = 6 + startDayDifference;
      return {
        saturday: d2j(j2d(jy, jm, jd + startDayDifference)),
        friday: d2j(j2d(jy, jm, jd + endDayDifference))
      };
    }
    function jalaaliToDateObject(jy, jm, jd, h, m3, s2, ms) {
      var gregorianCalenderDate = toGregorian2(jy, jm, jd);
      return new Date(
        gregorianCalenderDate.gy,
        gregorianCalenderDate.gm - 1,
        gregorianCalenderDate.gd,
        h || 0,
        m3 || 0,
        s2 || 0,
        ms || 0
      );
    }
    function div(a, b) {
      return ~~(a / b);
    }
    function mod2(a, b) {
      return a - ~~(a / b) * b;
    }
  }
});

// node_modules/caldate/src/CalDate.js
var import_moment_timezone = __toESM(require_moment_timezone2(), 1);

// node_modules/caldate/src/utils.js
function objectToString(o) {
  return Object.prototype.toString.call(o);
}
function isObject2(arg) {
  return typeof arg === "object" && arg !== null;
}
function isDate2(d3) {
  return isObject2(d3) && objectToString(d3) === "[object Date]";
}
function pad0(number, len) {
  len = len || 2;
  number = Array(len).join("0") + number.toString();
  return number.substr(number.length - len, len);
}
function toNumber(str) {
  const num = parseInt(str, 10);
  if (!isNaN(num)) {
    return num;
  }
}
function toYear(year) {
  if (!year) {
    year = (/* @__PURE__ */ new Date()).getFullYear();
  } else if (isDate2(year)) {
    year = year.getFullYear();
  } else if (typeof year === "string") {
    year = toNumber(year);
  }
  return year;
}

// node_modules/caldate/src/CalDate.js
var PROPS = ["year", "month", "day", "hour", "minute", "second"];
var CalDate = class _CalDate {
  /**
   * constructs a new CalDate instance
   * @param {Object|Date} [opts] - See `set(opts)`
   * @example
   * const CalDate = require('caldate')
   * const caldate = new CalDate('2000-01-01 12:00:00')
   * caldate.year
   * //> 2000
   * caldate.month
   * //> 1
   */
  constructor(opts) {
    this.set(opts);
  }
  static toYear(year) {
    return toYear(year);
  }
  /**
   * set calendar date
   * @param {Object|Date} [opts] - defaults to `1900-01-01`
   * @param {String} opts.year
   * @param {String} opts.month - January equals to 1, December to 12
   * @param {String} opts.day
   * @param {String} opts.hour
   * @param {String} opts.minute
   * @param {String} opts.second
   * @param {String} opts.duration - defaults to 24 hours
   */
  set(opts) {
    opts = opts || { year: 1900, month: 1, day: 1 };
    if (isDate2(opts)) {
      this.year = opts.getFullYear();
      this.month = opts.getMonth() + 1;
      this.day = opts.getDate();
      this.hour = opts.getHours();
      this.minute = opts.getMinutes();
      this.second = opts.getSeconds();
    } else {
      PROPS.forEach((p3) => {
        this[p3] = toNumber(opts[p3]) || 0;
      });
      this.month = this.month || 1;
      this.day = this.day || 1;
    }
    this.duration = opts.duration || 24;
    return this;
  }
  /**
   * checks if Date is equal to `calDate`
   * @param {CalDate} calDate
   * @return {Boolean} true if date matches
   */
  isEqualDate(calDate) {
    let res = true;
    this.update();
    ["year", "month", "day"].forEach((p3) => {
      res &= this[p3] === calDate[p3];
    });
    return !!res;
  }
  /**
   * get day of week
   * @return {Number} day of week 0=sunday, 1=monday, ...
   */
  getDay() {
    return this.toDate().getDay();
  }
  /**
   * set offset per unit
   * @param {Number} number
   * @param {String} [unit='d'] - Unit in days `d`, hours `h, minutes `m`
   * @return {Object} this
   */
  setOffset(number, unit) {
    if (number) {
      if (typeof number === "object") {
        unit = number.unit;
        number = number.number;
      }
      unit = unit || "d";
      number = parseFloat(number, 10);
      if (isNaN(number)) {
        throw new Error("Number required");
      }
      const o = { day: 0 };
      if (unit === "d") {
        o.day = number | 0;
        number -= o.day;
        number *= 24;
      }
      if (unit === "d" || unit === "h") {
        o.hour = number % 24 | 0;
        number -= o.hour;
        number *= 60;
      }
      o.minute = number % 60 | 0;
      number -= o.minute;
      number *= 60;
      o.second = number % 60 | 0;
      this.day += o.day;
      this.hour += o.hour;
      this.minute += o.minute;
      this.second += o.second;
    }
    this.update();
    return this;
  }
  /**
   * set time per hour, minute or second while maintaining duration at midnight
   * @param {Number} [hour]
   * @param {Number} [minute]
   * @param {Number} [second]
   * @return {Object} this
   */
  setTime(hour, minute, second) {
    hour = hour || 0;
    minute = minute || 0;
    second = second || 0;
    this.duration = 24 - (hour + minute / 60 + second / 3600);
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.update();
    return this;
  }
  /**
   * set duration in hours
   * @param {Number} duration in hours
   * @return {Object} this
   */
  setDuration(duration) {
    this.duration = duration;
    return this;
  }
  /**
   * update internal data to real date
   * @return {Object} this
   */
  update() {
    if (this.year) {
      const d3 = new _CalDate(this.toDate());
      PROPS.forEach((p3) => {
        this[p3] = d3[p3];
      });
    }
    return this;
  }
  /**
   * get end date of calendar date
   * @return {CalDate}
   */
  toEndDate() {
    const d3 = new _CalDate(this.toDate());
    d3.minute += this.duration * 60 | 0;
    d3.update();
    return d3;
  }
  /**
   * move internal date to a date in `timezone`
   * @param {String} timezone - e.g. 'America/New_York'
   * @return {Date}
   */
  toTimezone(timezone) {
    if (timezone) {
      return new Date(import_moment_timezone.default.tz(this.toString(), timezone).format());
    } else {
      return this.toDate();
    }
  }
  /**
   * set date from a given `timezone`
   * @param {Date} dateUTC - date in UTC
   * @param {String} [timezone] - timezone of dateUTC, e.g. 'America/New_York'
   * @return {CalDate} self
   */
  fromTimezone(dateUTC, timezone) {
    if (timezone) {
      const m3 = import_moment_timezone.default.tz(dateUTC, timezone);
      this.year = m3.year();
      this.month = m3.month() + 1;
      this.day = m3.date();
      this.hour = m3.hours();
      this.minute = m3.minutes();
      this.second = m3.seconds();
    } else {
      this.set(dateUTC);
    }
    return this;
  }
  /**
   * convert to Date
   * @return {Date}
   */
  toDate() {
    return new Date(
      this.year,
      this.month - 1,
      this.day,
      this.hour,
      this.minute,
      this.second,
      0
    );
  }
  /**
   * get Date in ISO format
   */
  toISOString() {
    return this.toString(true);
  }
  /**
   * get Date as String `YYYY-MM-DD HH:MM:SS`
   */
  toString(iso) {
    const d3 = new _CalDate(this.toDate());
    return pad0(d3.year, 4) + "-" + pad0(d3.month) + "-" + pad0(d3.day) + (iso ? "T" : " ") + pad0(d3.hour) + ":" + pad0(d3.minute) + ":" + pad0(d3.second) + (iso ? "Z" : "");
  }
};

// node_modules/date-holidays-parser/src/utils.js
var import_deepmerge = __toESM(require_cjs(), 1);
var get2 = (obj, keys2 = [], def) => {
  let o = obj;
  if (typeof keys2 === "string")
    keys2 = keys2.split(".");
  for (const key of keys2) {
    if (o && o[key]) {
      o = o[key];
    } else {
      return def;
    }
  }
  return o;
};
var set2 = (obj, keys2 = [], value) => {
  let key;
  let ref;
  let o = obj;
  for (key of keys2) {
    ref = o;
    if (toString.call(o[key]) !== "[object Object]")
      o[key] = {};
    o = o[key];
  }
  ref[key] = value;
  return obj;
};
var omit = (object, props = []) => Object.keys(object).filter((p3) => !~props.indexOf(p3)).reduce((o, p3) => {
  p3 in object && (o[p3] = object[p3]);
  return o;
}, {});
var merge = (...args) => import_deepmerge.default.all(args);
var toNumber2 = (num, def) => {
  const _num = Number(num);
  return isNaN(_num) ? def : _num;
};
var utils_default = {
  get: get2,
  set: set2,
  omit,
  merge
};

// node_modules/date-holidays-parser/src/internal/utils.js
var DAYS = function() {
  const o = {};
  "sunday|monday|tuesday|wednesday|thursday|friday|saturday".split("|").forEach((name, idx) => {
    o[name] = idx;
    o[idx] = name;
  });
  return o;
}();
function objectToString2(o) {
  return Object.prototype.toString.call(o);
}
function isObject3(arg) {
  return typeof arg === "object" && arg !== null;
}
function isDate3(d3) {
  return isObject3(d3) && objectToString2(d3) === "[object Date]";
}
var isNil = (v) => v === null || v === void 0;
function toNumber3(str) {
  const num = parseInt(str, 10);
  if (!isNaN(num)) {
    return num;
  }
}
function toYear2(year) {
  if (!year) {
    year = (/* @__PURE__ */ new Date()).getFullYear();
  } else if (year instanceof Date) {
    year = year.getFullYear();
  } else if (typeof year === "string") {
    year = toNumber3(year);
  }
  return year;
}
function toDate2(str, isUTC) {
  const m3 = /^(\d{4})(?:-(\d{2})(?:-(\d{2}))?)?.*$/.exec((str || "").toString());
  if (m3) {
    m3.shift();
    const [year, month, day] = m3.map((num) => parseInt(num || 1, 10));
    if (isUTC) {
      return new Date(Date.UTC(year, month - 1, day));
    } else {
      return new Date(year, month - 1, day);
    }
  }
}

// node_modules/date-holidays-parser/src/Data.js
var Data = class _Data {
  constructor(data2, country, state, region) {
    this.opts = _Data.splitName(country, state, region) || {};
    this.data = data2 || {};
  }
  /**
   * get all countries from the data
   * @param {String} lang - Iso-639 shortcode
   * @return {Object} shortcode-name value pairs. E.g. `{ AT: 'Österreich', ... }`
   */
  getCountries(lang2) {
    const o = {};
    const countries = utils_default.get(this.data, "holidays", {});
    Object.keys(countries).forEach((country) => {
      o[country] = this._name(countries, country, lang2, { country });
    });
    return o;
  }
  /**
   * get all states for a given country from the data
   * @param {String|Object} country
   * @param {String} [lang] - Iso-639 shortcode
   * @return {Object} shortcode-name value pairs. E.g. `{ b: 'Burgenland', ... }`
   */
  getStates(country, lang2) {
    const opts = Object.assign({}, _Data.splitName(country));
    const states = utils_default.get(this.data, ["holidays", opts.country, "states"]) || utils_default.get(this.data, ["holidays", opts.country, "regions"]);
    if (states) {
      const o = {};
      Object.keys(states).forEach((state) => {
        opts.state = state;
        o[state] = this._name(states, state, lang2, opts);
      });
      return o;
    }
  }
  /**
   * get all regions for a given country/ state from the data
   * @param {String} country
   * @param {String} state
   * @param {String} [lang] - Iso-639 shortcode
   * @return {Object} shortcode-name value pairs.
   */
  getRegions(country, state, lang2) {
    const opts = Object.assign({}, _Data.splitName(country, state));
    const regions = utils_default.get(this.data, ["holidays", opts.country, "states", opts.state, "regions"]);
    if (regions) {
      const o = {};
      Object.keys(regions).forEach((region) => {
        opts.region = region;
        o[region] = this._name(regions, region, lang2, opts);
      });
      return o;
    }
  }
  /**
   * @private
   */
  _name(obj, key, lang2, opts) {
    const names = obj[key].names;
    const _lang = lang2 || this.getLanguages(opts)[0] || Object.keys(names)[0];
    const mlang = _Data.majorLang(_lang);
    const name = obj[key].name || names[_lang] || names[mlang] || names[Object.keys(names)[0]];
    return name;
  }
  /**
   * get languages for selected country, state, region
   * @return {Array} containing ISO 639-1 language shortcodes
   */
  getLanguages(opts) {
    return this._getValue("langs", opts) || [];
  }
  /**
   * get default day off as weekday
   * @return {String} weekday of day off
   */
  getDayOff() {
    return this._getValue("dayoff");
  }
  /**
   * get timezones for country, state, region
   * @return {Array} of {String}s containing the timezones
   */
  getTimezones() {
    return this._getValue("zones") || [];
  }
  /**
   * get list of raw holiday rules for country/ state/ region
   * @param {Object|String} [country]
   * @param {String} [state]
   * @param {String} [region]
   * @return {Object} holidayname <-> unparsed rule or date pairs
   */
  getRules(country, state, region) {
    const rules = {};
    const opts = _Data.splitName(country, state, region) || this.opts;
    if (!(opts && opts.country)) {
      return rules;
    }
    country = opts.country.toUpperCase();
    state = opts.state;
    region = opts.region;
    let tmp = utils_default.get(this.data, ["holidays", country]);
    if (tmp) {
      this._assign(rules, tmp);
      if (state && tmp.regions && (tmp = tmp.regions[state]) || state && tmp.states && (tmp = tmp.states[state])) {
        this._assign(rules, tmp);
        if (region && tmp.regions && (tmp = tmp.regions[region])) {
          this._assign(rules, tmp);
        }
      }
      Object.keys(rules).forEach((key) => {
        const _name = rules[key]._name;
        if (_name && this.data.names[_name]) {
          delete rules[key]._name;
          rules[key] = utils_default.merge({}, this.data.names[_name], rules[key]);
        }
      });
    }
    return rules;
  }
  /**
   * get name for substitute name
   * @return {Object} translations of substitute day names
   */
  getSubstitueNames() {
    return utils_default.get(this.data, ["names", "substitutes", "name"]);
  }
  /**
   * helper to assign objects based on properties
   * @private
   * @param {Object} out - object where obj gets assigned into
   * @param {Object} obj - input obj
   * @return {Object}
   */
  _assign(out, obj) {
    let days2 = {};
    if (obj._days) {
      const path = ["holidays"].concat(obj._days, "days");
      const ref = utils_default.get(this.data, path);
      if (!ref)
        throw new Error("unknown path for _days: " + path.join("."));
      days2 = Object.assign({}, ref);
    }
    if (days2 || obj.days) {
      days2 = Object.assign(days2, obj.days);
      Object.keys(days2).forEach(function(p3) {
        if (days2[p3] === false) {
          if (out[p3]) {
            delete out[p3];
          }
          return;
        }
        out[p3] = Object.assign({}, out[p3], days2[p3]);
        if (!days2[p3].type) {
          out[p3].type = "public";
        }
      });
    }
    return out;
  }
  /**
   * get a object from the data tree
   * @private
   * @param {String} key - key to look at
   * @return {Object} return object
   */
  _getValue(key, opts = this.opts) {
    return utils_default.get(this.data, ["holidays", opts.country, "states", opts.state, "regions", opts.regions, key]) || utils_default.get(this.data, ["holidays", opts.country, "states", opts.state, key]) || utils_default.get(this.data, ["holidays", opts.country, key]);
  }
};
Data.splitName = function(country, state, region) {
  if (typeof country === "object" && country.country) {
    return toUpperCase(country);
  } else if (typeof country === "string") {
    const a = country.split(/[.-]/);
    const o = {
      country: a.shift(),
      state: a.shift() || state,
      region: a.shift() || region
    };
    return toUpperCase(o);
  }
};
Data.majorLang = function(lang2) {
  return (lang2 || "").split(/-/)[0];
};
function toUpperCase(obj) {
  ;
  ["country", "state", "region"].forEach((key) => {
    if (typeof obj[key] === "string") {
      obj[key] = obj[key].toUpperCase();
    }
  });
  return obj;
}

// node_modules/date-holidays-parser/src/Parser.js
var WEEKDAYS = "Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday".split("|");
var lowerCaseWeekday = (weekday) => WEEKDAYS.includes(weekday) ? weekday.toLowerCase() : weekday;
var lowerCaseWeekdayWithoutDay = (weekday) => weekday === "day" ? void 0 : lowerCaseWeekday(weekday);
var grammar = function() {
  function replace(regex, opt) {
    regex = regex.source;
    opt = opt || "";
    return function self(name, val) {
      if (!name)
        return new RegExp(regex, opt);
      val = val.source || val;
      val = val.replace(/(^|[^[])\^/g, "$1");
      regex = regex.replace(name, val);
      return self;
    };
  }
  const raw = {
    _weekdays: "[Ss]unday|[Mm]onday|[Tt]uesday|[Ww]ednesday|[Tt]hursday|[Ff]riday|[Ss]aturday|day",
    _months: "January|February|March|April|May|June|July|August|September|October|November|December",
    _islamicMonths: "Muharram|Safar|Rabi al-awwal|Rabi al-thani|Jumada al-awwal|Jumada al-thani|Rajab|Shaban|Ramadan|Shawwal|Dhu al-Qidah|Dhu al-Hijjah",
    _hebrewMonths: "Nisan|Iyyar|Sivan|Tamuz|Av|Elul|Tishrei|Cheshvan|Kislev|Tevet|Shvat|AdarII|Adar",
    _jalaaliMonths: "Farvardin|Ordibehesht|Khordad|Tir|Mordad|Shahrivar|Mehr|Aban|Azar|Dey|Bahman|Esfand",
    _days: /(_weekdays)s?/,
    _direction: /(before|after|next|previous|in)/,
    _counts: /(\d+)(?:st|nd|rd|th)?/,
    _count_days: /([-+]?\d{1,2}) ?(?:days?|d)?/,
    _timezone: / in ([^\s]*|[+-]\d{2}:\d{2})/,
    _type: /(public|bank|school|observance|optional)/,
    dateMonth: /^(_months)/,
    date: /^(?:0*(\d{1,4})-)?0?(\d{1,2})-0?(\d{1,2})/,
    time: /^(?:T?0?(\d{1,2}):0?(\d{1,2})|T0?(\d{1,2}))/,
    duration: /^P(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?)?/,
    // follows ISO 8601
    julian: /^julian date/,
    easter: /^(easter|orthodox)(?: _count_days)?/,
    equinox: /^([Mm]arch|[Jj]une|[Ss]eptember|[Dd]ecember) (?:equinox|solstice)(?:_timezone)?/,
    hebrew: /^0?(\d{1,2}) (_hebrewMonths)(?: 0*(\d{1,}))?/,
    islamic: /^0?(\d{1,2}) (_islamicMonths)(?: 0*(\d{1,}))?/,
    jalaali: /^0?(\d{1,2}) (_jalaaliMonths)(?: 0*(\d{1,}))?/,
    chineseLunar: /^(chinese|korean|vietnamese) (?:(\d+)-(\d{1,2})-)?(\d{1,2})-([01])-(\d{1,2})/,
    chineseSolar: /^(chinese|korean|vietnamese) (?:(\d+)-(\d{1,2})-)?(\d{1,2})-(\d{1,2}) solarterm/,
    bengaliRevised: /^(bengali-revised) (?:-?0*(\d{1,4})-)?0?(\d{1,2})-0?(\d{1,2})/,
    modifier: /^(substitutes|and|if equal|then|if)\b/,
    rule_year: /^(?:in (even|odd|leap|non-leap) years|every (\d+) years? since 0*(\d{1,4}))/,
    rule_weekday: /(not )?on ((?:(?:_weekdays)(?:,\s?)?)*)/,
    rule_date_if_then: /^if ((?:(?:_weekdays)(?:,\s?)?)*) then (?:_direction _days)?/,
    rule_day_dir_date: /^(?:_counts )?_days _direction/,
    rule_bridge: /^is (?:_type )?holiday/,
    rule_if_holiday: /^if is (?:_type )?holiday then (?:_counts )?(?:_direction _days)?(?: omit ((?:(?:_weekdays)(?:,\s?)?)*))?/,
    rule_same_day: /^#\d+/,
    rule_active_from: /^since (0*\d{1,4})(?:-0*(\d{1,2})(?:-0*(\d{1,2})|)|)(?: and|)/,
    rule_active_to: /^prior to (0*\d{1,4})(?:-0*(\d{1,2})(?:-0*(\d{1,2})|)|)/,
    // rule_type_if_then: /if ((?:(?:_weekdays)(?:,\s?)?)*) then/,
    // rule_type_dir: /_days _direction$/,
    // rule_type_bridge: / if .* is .* holiday$/,
    space: /^\s+/
  };
  raw._days = replace(raw._days)(/_weekdays/, raw._weekdays)();
  raw.julian = replace(raw.julian, "")(/date/, raw.date)();
  raw.easter = replace(raw.easter, "")(/_count_days/, raw._count_days)();
  raw.equinox = replace(raw.equinox, "")(/_count_days/g, raw._count_days)(/_direction/g, raw._direction)(/_timezone/g, raw._timezone)();
  raw.hebrew = replace(raw.hebrew, "")(/_hebrewMonths/, raw._hebrewMonths)();
  raw.islamic = replace(raw.islamic, "")(/_islamicMonths/, raw._islamicMonths)();
  raw.jalaali = replace(raw.jalaali, "")(/_jalaaliMonths/, raw._jalaaliMonths)();
  raw.dateMonth = replace(raw.dateMonth)(/_months/, raw._months)();
  raw.rule_weekday = replace(raw.rule_weekday, "")(/_weekdays/g, raw._weekdays)();
  raw.rule_date_if_then = replace(raw.rule_date_if_then, "")(/_direction/g, raw._direction)(/_weekdays/g, raw._weekdays)(/_days/g, raw._days)();
  raw.rule_bridge = replace(raw.rule_bridge, "")(/_type/g, raw._type)();
  raw.rule_if_holiday = replace(raw.rule_if_holiday, "")(/_type/g, raw._type)(/_counts/g, raw._counts)(/_direction/g, raw._direction)(/_days/g, raw._days)(/_weekdays/g, raw._weekdays)();
  raw.rule_day_dir_date = replace(raw.rule_day_dir_date, "")(/_counts/, raw._counts)(/_days/g, raw._days)(/_direction/g, raw._direction)();
  let i = 1;
  raw.months = {};
  raw._months.split("|").forEach(function(m3) {
    raw.months[m3] = i++;
  });
  i = 1;
  raw.islamicMonths = {};
  raw._islamicMonths.split("|").forEach(function(m3) {
    raw.islamicMonths[m3] = i++;
  });
  i = 1;
  raw.hebrewMonths = {};
  raw._hebrewMonths.split("|").forEach(function(m3) {
    raw.hebrewMonths[m3] = i++;
  });
  raw.hebrewMonths.Adar = 12;
  raw.hebrewMonths.AdarII = 13;
  i = 1;
  raw.jalaaliMonths = {};
  raw._jalaaliMonths.split("|").forEach(function(m3) {
    raw.jalaaliMonths[m3] = i++;
  });
  return raw;
}();
var Parser = class _Parser {
  constructor(fns) {
    this.fns = fns || [
      "_julian",
      "_date",
      "_easter",
      "_islamic",
      "_hebrew",
      "_jalaali",
      "_equinox",
      "_chineseSolar",
      "_chineseLunar",
      "_bengaliRevised",
      "_dateMonth",
      "_ruleDateIfThen",
      "_ruleWeekday",
      "_ruleYear",
      "_ruleDateDir",
      "_ruleIfHoliday",
      "_ruleBridge",
      "_ruleTime",
      "_ruleDuration",
      "_ruleModifier",
      "_ruleSameDay",
      "_ruleActiveFrom",
      "_ruleActiveTo"
    ];
    this.tokens = [];
  }
  parse(rule) {
    this.setup = { str: rule, rule };
    this.error = 0;
    this.tokens = [];
    this._tokenize(this.setup);
    this._reorder();
    return this.tokens;
  }
  /**
   * reorder set of tokens for rule dateDir
   * dateDir: [dateDir2, dateDir1, fn] --> [fn, dateDir1, dateDir2]
   * dateIfThen: [fn, dateIfThen1, dateIfThen2] --> [fn, dateIfThen1, dateIfThen2]
   */
  _reorder() {
    const tmp = [];
    const res = [];
    this.tokens.forEach((token2) => {
      if (token2.rule === "dateDir") {
        tmp.push(token2);
      } else {
        res.push(token2);
        if (tmp.length) {
          while (tmp.length) {
            res.push(tmp.pop());
          }
        }
      }
      if (token2.fn && res[0].modifier) {
        while (res[0].modifier) {
          res.push(res.shift());
        }
      }
    });
    this.tokens = res;
  }
  _tokenize(o) {
    let last2;
    while (o.str) {
      for (let i = 0; i < this.fns.length; i++) {
        if (this[this.fns[i]](o))
          break;
      }
      this._space(o);
      if (last2 === o.str) {
        this.error++;
        break;
      }
      last2 = o.str;
    }
  }
  _shorten(o, cap0) {
    o.str = o.str.substr(cap0.length, o.str.length);
  }
  _date(o) {
    let cap;
    if (cap = grammar.date.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "gregorian",
        year: toNumber3(cap.shift()),
        month: toNumber3(cap.shift()),
        day: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _julian(o) {
    let cap;
    if (cap = grammar.julian.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "julian",
        year: toNumber3(cap.shift()),
        month: toNumber3(cap.shift()),
        day: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _easter(o) {
    let cap;
    if (cap = grammar.easter.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "easter",
        type: cap.shift(),
        offset: toNumber3(cap.shift()) || 0
      };
      this.tokens.push(res);
      return true;
    }
  }
  _equinox(o) {
    let cap;
    if (cap = grammar.equinox.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "equinox",
        season: cap.shift().toLowerCase(),
        timezone: cap.shift() || "GMT"
      };
      this.tokens.push(res);
      return true;
    }
  }
  _hebrew(o) {
    let cap;
    if (cap = grammar.hebrew.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "hebrew",
        day: toNumber3(cap.shift()),
        month: grammar.hebrewMonths[cap.shift()],
        year: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _islamic(o) {
    let cap;
    if (cap = grammar.islamic.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "islamic",
        day: toNumber3(cap.shift()),
        month: grammar.islamicMonths[cap.shift()],
        year: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _jalaali(o) {
    let cap;
    if (cap = grammar.jalaali.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "jalaali",
        day: toNumber3(cap.shift()),
        month: grammar.jalaaliMonths[cap.shift()],
        year: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _chineseSolar(o) {
    let cap;
    if (cap = grammar.chineseSolar.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: cap.shift(),
        cycle: toNumber3(cap.shift()),
        year: toNumber3(cap.shift()),
        solarterm: toNumber3(cap.shift()),
        day: toNumber3(cap.shift()),
        timezone: cap.shift()
      };
      this.tokens.push(res);
      return true;
    }
  }
  _chineseLunar(o) {
    let cap;
    if (cap = grammar.chineseLunar.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: cap.shift(),
        cycle: toNumber3(cap.shift()),
        year: toNumber3(cap.shift()),
        month: toNumber3(cap.shift()),
        leapMonth: !!toNumber3(cap.shift()),
        day: toNumber3(cap.shift()),
        timezone: cap.shift()
      };
      this.tokens.push(res);
      return true;
    }
  }
  _bengaliRevised(o) {
    let cap;
    if (cap = grammar.bengaliRevised.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: cap.shift(),
        year: toNumber3(cap.shift()),
        month: toNumber3(cap.shift()),
        day: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _dateMonth(o) {
    let cap;
    if (cap = grammar.dateMonth.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        fn: "gregorian",
        day: 1,
        month: grammar.months[cap.shift()],
        year: void 0
      };
      this.tokens.push(res);
      return true;
    }
  }
  _space(o) {
    let cap;
    if (cap = grammar.space.exec(o.str)) {
      this._shorten(o, cap[0]);
      return true;
    }
  }
  _ruleSameDay(o) {
    let cap;
    if (cap = grammar.rule_same_day.exec(o.str)) {
      this._shorten(o, cap[0]);
      return true;
    }
  }
  _ruleModifier(o) {
    let cap;
    if (cap = grammar.modifier.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        modifier: cap.shift()
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleTime(o) {
    let cap;
    if (cap = grammar.time.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "time",
        hour: toNumber3(cap.shift()) || 0,
        minute: toNumber3(cap.shift()) || 0
      };
      res.hour = res.hour || toNumber3(cap.shift()) || 0;
      this.tokens.push(res);
      return true;
    }
  }
  _ruleDuration(o) {
    let cap;
    if (cap = grammar.duration.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const tmp = {
        days: toNumber3(cap.shift()) || 0,
        hours: toNumber3(cap.shift()) || 0,
        minutes: toNumber3(cap.shift()) || 0
      };
      const res = {
        rule: "duration",
        // duration is calculated in hours
        duration: tmp.days * 24 + tmp.hours + tmp.minutes / 60
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleDateIfThen(o) {
    let cap;
    if (cap = grammar.rule_date_if_then.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "dateIfThen",
        if: cap.shift().split(/(?:,\s?)/).map(lowerCaseWeekday),
        direction: cap.shift(),
        then: lowerCaseWeekday(cap.shift())
      };
      const p3 = new _Parser(["_ruleTime", "_ruleDuration"]);
      p3.parse(o.str);
      if (p3.tokens.length) {
        res.rules = p3.tokens;
      }
      o.str = " " + p3.setup.str;
      this.tokens.push(res);
      return true;
    }
  }
  _ruleWeekday(o) {
    let cap;
    if (cap = grammar.rule_weekday.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "weekday",
        not: !!cap.shift(),
        if: cap.shift().split(/(?:,\s?)/).map(lowerCaseWeekday)
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleDateDir(o) {
    let cap;
    if (cap = grammar.rule_day_dir_date.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "dateDir",
        count: toNumber3(cap.shift()) || 1,
        weekday: lowerCaseWeekday(cap.shift()),
        direction: cap.shift()
      };
      if (res.direction === "in") {
        res.direction = "after";
      }
      this.tokens.push(res);
      return true;
    }
  }
  _ruleYear(o) {
    let cap;
    if (cap = grammar.rule_year.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "year",
        cardinality: cap.shift(),
        every: toNumber3(cap.shift()),
        since: toNumber3(cap.shift())
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleIfHoliday(o) {
    let cap;
    if (cap = grammar.rule_if_holiday.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "ruleIfHoliday",
        type: cap.shift(),
        count: toNumber3(cap.shift()) || 1,
        direction: cap.shift(),
        weekday: lowerCaseWeekday(cap.shift()),
        omit: (cap.shift() || "").split(/(?:,\s?)/).map(lowerCaseWeekdayWithoutDay).filter(Boolean)
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleBridge(o) {
    let cap;
    if (cap = grammar.rule_bridge.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "bridge",
        type: cap.shift()
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleActiveFrom(o) {
    let cap;
    if (cap = grammar.rule_active_from.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "activeFrom",
        year: toNumber3(cap.shift()),
        month: toNumber3(cap.shift()) || 1,
        day: toNumber3(cap.shift()) || 1
      };
      this.tokens.push(res);
      return true;
    }
  }
  _ruleActiveTo(o) {
    let cap;
    if (cap = grammar.rule_active_to.exec(o.str)) {
      this._shorten(o, cap[0]);
      cap.shift();
      const res = {
        rule: "activeTo",
        year: toNumber3(cap.shift()),
        month: toNumber3(cap.shift()) || 1,
        day: toNumber3(cap.shift()) || 1
      };
      this.tokens.push(res);
      return true;
    }
  }
};

// node_modules/date-holidays-parser/src/Rule.js
var Rule = class {
  /**
  * @param {CalEvent} [calEvent]
   * @param {array} [holidays]
   */
  constructor(calEvent) {
    this.calEvent = calEvent;
  }
  /**
   * @param {CalEvent} calEvent
   */
  setEvent(calEvent) {
    this.calEvent = calEvent;
    return this;
  }
  /**
   * @return {CalEvent}
   */
  getEvent() {
    return this.calEvent;
  }
  /**
   * @param {string} modifier
   */
  setModifier(modifier) {
    this.modifier = modifier;
  }
  /**
   * resolves rule to function
   * @param {object} rule
   */
  resolve(rule) {
    if (rule.rule && typeof this[rule.rule] === "function") {
      this[rule.rule](rule);
    } else if (rule.modifier) {
      this.modifier = rule.modifier;
    }
    return this;
  }
  /**
   * @param {CalEvent} [calEvent]
   * @param {object} rule
   * {
   *   rule: "dateDir",
   *   count: 1,
   *   weekday: "tuesday",
   *   direction: "after",
   *   omit: ['sunday']
   * }
   */
  dateDir(rule) {
    const omitWeekdays = [].concat(rule.omit).map((weekday) => DAYS[weekday]).filter((v) => !isNil(v));
    const isOmitDay = (offset2, weekday) => {
      let wd = offset2 + weekday;
      while (wd < 0) {
        wd += 70;
      }
      return omitWeekdays.includes(wd % 7);
    };
    this.calEvent.dates.forEach((date) => {
      let offset2;
      let count = rule.count - 1;
      const weekday = date.getDay();
      const ruleWeekday = DAYS[rule.weekday];
      const isDirBefore = ["before", "previous"].includes(rule.direction);
      if (rule.direction === "next" && weekday === ruleWeekday) {
        count += 1;
      }
      if (rule.weekday === "day") {
        let i = 0;
        if (isDirBefore) {
          offset2 = (count + 1) * -1;
          while (i++ < 7 && isOmitDay(offset2, weekday)) {
            offset2 -= 1;
          }
        } else {
          offset2 = count + 1;
          while (i++ < 7 && isOmitDay(offset2, weekday)) {
            offset2 += 1;
          }
        }
      } else {
        if (isDirBefore) {
          if (weekday === ruleWeekday) {
            count++;
          }
          offset2 = ((7 + weekday - ruleWeekday) % 7 + count * 7) * -1;
        } else {
          offset2 = (7 - weekday + ruleWeekday) % 7 + count * 7;
        }
      }
      if (offset2) {
        date.setOffset(offset2);
      }
    });
  }
  /**
   * @param {object} rule
   * {
   *   rule: "dateIfThen",
   *   if: ["sunday"],
   *   direction: "next",
   *   then: "sunday"
   * }
   */
  dateIfThen(rule) {
    const dates = [];
    this.calEvent.dates = this.calEvent.dates.map((date) => {
      if (date._lock) {
        return date;
      }
      const weekday = date.getDay();
      if (~rule.if.indexOf(DAYS[weekday])) {
        if (this.modifier === "and") {
          dates.push(new CalDate(date));
          date.substitute = true;
        }
        date._filter = false;
        let offset2 = 0;
        const then = DAYS[rule.then];
        if (rule.then && then !== "undefined") {
          if (rule.direction === "previous") {
            offset2 = -1 * ((7 + weekday - then) % 7);
            if (!offset2) {
              offset2 = -7;
            }
          } else {
            offset2 = (7 - weekday + then) % 7;
            if (!offset2) {
              offset2 = 7;
            }
          }
          date.setOffset(offset2);
          date._lock = true;
          if (this.modifier === "substitutes")
            date.substitute = true;
        }
        (rule.rules || []).forEach((rule2) => {
          switch (rule2.rule) {
            case "time":
              date.setTime(rule2.hour, rule2.minute);
              break;
            case "duration":
              date.duration = rule2.duration;
              break;
          }
        });
      } else if (this.modifier === "substitutes") {
        date._filter = true;
      }
      return date;
    });
    this.calEvent.dates = dates.concat(this.calEvent.dates);
  }
  /**
   * @param {object} rule
   * {
   *   rule: "weekday",
   *   if: ["sunday", "saturday"],
   *   not: false,
   * }
   */
  weekday(rule) {
    this.calEvent.dates = this.calEvent.dates.map((date) => {
      const weekday = date.getDay();
      let match = rule.if.indexOf(DAYS[weekday]) !== -1;
      if (rule.not)
        match = !match;
      if (match)
        return date;
    }).filter((date) => date);
  }
  time(rule) {
    this.calEvent.dates.forEach((date) => {
      date.setTime(rule.hour, rule.minute);
    });
  }
  duration(rule) {
    this.calEvent.dates.forEach((date) => {
      date.duration = rule.duration;
    });
  }
  bridge() {
    return true;
  }
  ruleIfHoliday() {
    return true;
  }
  activeFrom(rule) {
    this.calEvent.setActive({ from: new CalDate(rule).toDate() });
  }
  activeTo(rule) {
    this.calEvent.setActive({ to: new CalDate(rule).toDate() });
  }
  /**
   * @param {object} rule
   * {
   *   rule: "year",
   *   cardinality: "leap",
   *   every: undefined,
   *   since: undefined
   * }
   */
  year(rule) {
    this.calEvent.dates = this.calEvent.dates.map((date) => {
      if (rule.cardinality) {
        if (rule.cardinality === "leap" && this._isLeapYear(date.year)) {
          return date;
        } else if (rule.cardinality === "non-leap" && !this._isLeapYear(date.year)) {
          return date;
        } else if (rule.cardinality === "even" && (date.year + 1) % 2) {
          return date;
        } else if (rule.cardinality === "odd" && date.year % 2) {
          return date;
        }
      } else if (rule.every !== void 0 && rule.since !== void 0) {
        const tmp = (date.year - rule.since) % rule.every;
        if (tmp === 0) {
          return date;
        }
      }
    }).filter((date) => date);
  }
  /**
   * @private
   * @return {Boolean} if true year is a leap year
   */
  _isLeapYear(year) {
    if (year % 400 === 0 || year % 4 === 0 && year % 100 !== 0) {
      return true;
    }
    return false;
  }
};

// node_modules/date-holidays-parser/src/CalEvent.js
var CalEvent = class {
  /**
   * @param {object|Date} opts
   * @param {string} opts.fn function type
   * @param {number} [opts.day]
   * @param {number} [opts.month]
   * @param {number} [opts.year]
   * @param {number} [opts.offset]
   * @param {boolean} [opts.substitute]
   */
  constructor(opts) {
    opts = opts || {};
    this.substitute = opts.substitute;
    this.opts = opts;
    this.offset = opts.offset;
    this.dates = [];
    this.active = void 0;
    if (isDate3(opts)) {
      this.opts = new CalDate(opts);
    }
  }
  /**
   * @param {number} year
   * @returns {this}
   */
  inYear(year) {
    const d3 = new CalDate(this.opts).setOffset(this.offset);
    if (!(d3.year && d3.year !== year)) {
      d3.year = year;
      this.dates.push(d3);
    }
    return this;
  }
  reset() {
    this.dates = [];
  }
  /**
   * @param {CalEvent} calEvent
   * @returns {boolean}
   */
  isEqualDate(calEvent) {
    let res = false;
    for (const thisDate of this.dates) {
      for (const date of calEvent.dates) {
        res |= thisDate.isEqualDate(date);
      }
    }
    return !!res;
  }
  /**
   * Filter out disabled dates
   * @param {number} year
   * @param {number} month
   * @returns {this}
   */
  filterDisabled(year, month) {
    if (!year) {
      return this;
    }
    this.dates = this.dates.filter((date) => {
      const disable = month ? date.year === year && date.month === month : date.year === year;
      return !disable;
    });
    return this;
  }
  /**
   * @param {number} year - year to filter
   * @param {object[]} active - definition of active ranges `{from: {Date}, [to]: {Date}}`
   * @return {this} for chaining
   */
  filterActive(year, active = this.active) {
    this.dates = this.dates.filter((date) => {
      if (!date._filter && isActive(date, year, active)) {
        return date;
      }
    });
    return this;
  }
  /**
   * @param {object} active
   * @param {Date} [active.from ]
   * @param {Date} [active.to]
   * @returns
   */
  setActive(active) {
    const { from: from2, to: to2 } = active;
    let pushIt = true;
    this.active = this.active || [];
    if (to2 && !from2) {
      const last2 = this.active[this.active.length - 1];
      if (last2 && last2.from && !last2.to) {
        last2.to = to2;
        pushIt = false;
      }
    }
    if (pushIt) {
      this.active.push(active);
    }
    return this;
  }
  /**
   * @param {CalEvent} calEvent
   */
  push(calEvent) {
    if (calEvent && Array.isArray(calEvent.dates)) {
      this.dates = this.dates.concat(calEvent.dates);
    }
  }
  /**
   * @param {string} timezone
   * @returns
   */
  get(timezone) {
    const arr = this.dates.map((date) => {
      const cdate = new CalDate(date);
      const o = {
        date: cdate.toString(),
        start: cdate.toTimezone(timezone),
        end: cdate.toEndDate().toTimezone(timezone)
      };
      this._addSubstitute(date, o);
      return o;
    });
    return arr;
  }
  _addSubstitute(date, obj) {
    if (this.substitute || date.substitute)
      obj.substitute = true;
  }
};
function isActive(date, year, active) {
  if (!active) {
    return date.year === year;
  }
  const _date = date.toDate();
  for (const a of active) {
    const { from: from2, to: to2 } = a;
    if (date.year === year && (from2 && to2 && from2 <= _date && to2 > _date || from2 && !to2 && from2 <= _date || !from2 && to2 && to2 > _date)) {
      return true;
    }
  }
}

// node_modules/date-holidays-parser/src/PostRule.js
var PostRule = class {
  /**
   * @param {String} ruleStr
   * @param {Object} opts
   * @param {Array} [holidays]
   */
  constructor(ruleStr, opts, holidays) {
    this.opts = opts;
    this.ruleStr = ruleStr;
    this.ruleSet = holidays && holidays[ruleStr];
    this.holidays = holidays;
    this.events = [];
  }
  push(calEvent) {
    this.events.push(calEvent);
  }
  /**
   * @param {number} year
   * @returns {CalEvent}
   */
  getEvent(year) {
    const active = this.ruleSet && this.ruleSet.active;
    this.disable(year);
    const ev = this.events[0];
    ev.filterActive(year, active);
    return ev;
  }
  /**
   * @param {Array} rule
   * @param {number} year
   */
  resolve(rule, year) {
    if (rule.rule && typeof this[rule.rule] === "function") {
      this[rule.rule](rule, year);
    }
  }
  /**
   * @param {Array} rule
   * @param {number} year
   */
  bridge(rule, year) {
    const found = new Array(this.events.length).fill(false);
    found[0] = true;
    const type = rule.type || "public";
    for (const ruleStr in this.holidays) {
      const dateFn = this.holidays[ruleStr].fn;
      if (dateFn && dateFn.ruleStr !== this.ruleStr) {
        const tmpEv = dateFn.inYear(year);
        const tmpEvType = get2(tmpEv, "opts.type") || "public";
        for (let i = 1; i < this.events.length; i++) {
          if (found[i])
            continue;
          const isEqualDate = tmpEv.event.isEqualDate(this.events[i]);
          if (isEqualDate && tmpEvType === type) {
            found[i] = true;
          }
        }
      }
      if (!~found.indexOf(false)) {
        break;
      }
    }
    if (~found.indexOf(false)) {
      this.events[0].reset();
    }
  }
  ruleIfHoliday(rule, year) {
    const type = rule.type || "public";
    for (const ruleStr in this.holidays) {
      const dateFn = this.holidays[ruleStr].fn;
      if (dateFn && dateFn.ruleStr !== this.ruleStr) {
        const tmpEv = dateFn.inYear(year);
        const tmpEvType = get2(tmpEv, "opts.type") || "public";
        for (let i = 0; i < this.events.length; i++) {
          const isEqualDate = tmpEv.event.isEqualDate(this.events[i]);
          if (isEqualDate && tmpEvType === type) {
            new Rule(this.events[i]).resolve({ ...rule, rule: "dateDir" });
            return;
          }
        }
      }
    }
  }
  /**
   * @param {number} year
   */
  disable(year) {
    const { disable, enable } = this.opts || {};
    if (!disable || !disable.length)
      return;
    const ev = this.events[0];
    let tmpEv = _findEventInYear(year, disable);
    if (tmpEv) {
      if (tmpEv.isEqualDate(ev)) {
        ev.reset();
        tmpEv = _findEventInYear(year, enable);
        if (tmpEv)
          this.events[0] = tmpEv;
      }
      return;
    }
    const [_year, _month] = _findDisabled(year, disable);
    ev.filterDisabled(_year, _month);
  }
};
var isoDate = (isoDateStr) => String(isoDateStr).split("-").map((v) => toNumber2(v));
function _findEventInYear(_year, arr = []) {
  for (const item of arr) {
    const [year, month, day] = isoDate(item);
    if (year === _year && month && day) {
      return new CalEvent({ year, month, day }).inYear(year);
    }
  }
}
function _findDisabled(_year, arr = []) {
  for (const isoDateStr of arr) {
    const [year, month] = isoDate(isoDateStr);
    if (_year === year) {
      return [year, month];
    }
  }
  return [];
}

// node_modules/date-easter/src/index.js
function _toYear(year) {
  if (!year) {
    year = (/* @__PURE__ */ new Date()).getFullYear();
  } else if (year instanceof Date) {
    year = year.getFullYear();
  } else if (typeof year === "string") {
    year = parseInt(year, 10);
  }
  return year;
}
function pre(num, l) {
  l = l || 2;
  const s2 = "0000" + num;
  return s2.substr(s2.length - l, l);
}
var EasterDate = class {
  constructor(year, month, day) {
    this.year = year;
    this.month = month;
    this.day = day;
  }
  toString() {
    return [pre(this.year, 4), pre(this.month), pre(this.day)].join("-");
  }
};
function _easter(year, julian, gregorian) {
  year = _toYear(year);
  const k = Math.floor(year / 100);
  let m3 = 15 + Math.floor((3 * k + 3) / 4) - Math.floor((8 * k + 13) / 25);
  let s2 = 2 - Math.floor((3 * k + 3) / 4);
  if (julian) {
    m3 = 15;
    s2 = 0;
  }
  const a = year % 19;
  const d3 = (19 * a + m3) % 30;
  const r = Math.floor((d3 + a / 11) / 29);
  const og = 21 + d3 - r;
  const sz = 7 - Math.floor(year + year / 4 + s2) % 7;
  const oe = 7 - (og - sz) % 7;
  let os = og + oe;
  if (gregorian) {
    os = os + Math.floor(year / 100) - Math.floor(year / 400) - 2;
  }
  const daysPerMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31];
  let day = os;
  let month;
  for (month = 3; month < 8; month++) {
    if (day <= daysPerMonth[month]) {
      break;
    }
    day -= daysPerMonth[month];
  }
  return new EasterDate(year, month, day);
}
function gregorianEaster(year) {
  return _easter(year);
}
var easter = gregorianEaster;
function julianEaster(year) {
  return _easter(year, true);
}
function orthodoxEaster(year) {
  return _easter(year, true, true);
}
var src_default = {
  easter,
  gregorianEaster,
  julianEaster,
  orthodoxEaster
};

// node_modules/date-holidays-parser/src/Easter.js
var Easter = class extends CalEvent {
  /**
   * @param {object} [opts]
   * @param {string} opts.type - type of eastern (easter|orthodox)
   * @param {number|string} opts.offset - offset in days
   */
  constructor(opts) {
    opts = opts || {};
    super(opts);
    this._fn = src_default.easter;
    if (opts.type === "orthodox") {
      this._fn = src_default.orthodoxEaster;
    }
  }
  inYear(year) {
    const d3 = new CalDate(this._fn(year)).setOffset(this.offset);
    this.dates.push(d3);
    return this;
  }
};

// node_modules/astronomia/src/base.js
var K = 0.01720209895;
var AU = 149597870;
var SOblJ2000 = 0.397777156;
var COblJ2000 = 0.917482062;
function lightTime(dist) {
  return 0.0057755183 * dist;
}
var JMod = 24000005e-1;
var J2000 = 2451545;
var J1900 = 2415020;
var B1900 = 24150203135e-4;
var B1950 = 24332824235e-4;
var JulianYear = 365.25;
var JulianCentury = 36525;
var BesselianYear = 365.2421988;
var meanSiderealYear = 365.25636;
function JulianYearToJDE(jy) {
  return J2000 + JulianYear * (jy - 2e3);
}
function JDEToJulianYear(jde) {
  return 2e3 + (jde - J2000) / JulianYear;
}
function BesselianYearToJDE(by) {
  return B1900 + BesselianYear * (by - 1900);
}
function JDEToBesselianYear(jde) {
  return 1900 + (jde - B1900) / BesselianYear;
}
function J2000Century(jde) {
  return (jde - J2000) / JulianCentury;
}
function illuminated(i) {
  return (1 + Math.cos(i)) * 0.5;
}
var Coord = class {
  /**
   * celestial coordinates in right ascension and declination
   * or ecliptic coordinates in longitude and latitude
   *
   * @param {number} ra - right ascension (or longitude)
   * @param {number} dec - declination (or latitude)
   * @param {number} [range] - distance
   * @param {number} [elongation] - elongation
   */
  constructor(ra, dec, range, elongation) {
    this._ra = ra || 0;
    this._dec = dec || 0;
    this.range = range;
    this.elongation = elongation;
  }
  /**
   * right ascension
   * @return {number}
   */
  get ra() {
    return this._ra;
  }
  set ra(ra) {
    this._ra = ra;
  }
  /**
   * declination
   * @return {number}
   */
  get dec() {
    return this._dec;
  }
  set dec(dec) {
    this._dec = dec;
  }
  /**
   * right ascension (or longitude)
   * @return {number}
   */
  get lon() {
    return this._ra;
  }
  set lon(ra) {
    this._ra = ra;
  }
  /**
   * declination (or latitude)
   * @return {number}
   */
  get lat() {
    return this._dec;
  }
  set lat(dec) {
    this._dec = dec;
  }
};
function limb(equ, appSun) {
  const α = equ.ra;
  const δ = equ.dec;
  const α0 = appSun.ra;
  const δ0 = appSun.dec;
  const sδ = Math.sin(δ);
  const cδ = Math.cos(δ);
  const sδ0 = Math.sin(δ0);
  const cδ0 = Math.cos(δ0);
  const sα0α = Math.sin(α0 - α);
  const cα0α = Math.cos(α0 - α);
  let χ = Math.atan2(cδ0 * sα0α, sδ0 * cδ - cδ0 * sδ * cα0α);
  if (χ < 0) {
    χ += 2 * Math.PI;
  }
  return χ;
}
var SmallAngle = 10 * Math.PI / 180 / 60;
var CosSmallAngle = Math.cos(SmallAngle);
function pmod(x, y) {
  let r = x % y;
  if (r < 0) {
    r += y;
  }
  return r;
}
function horner(x, ...c) {
  if (Array.isArray(c[0])) {
    c = c[0];
  }
  let i = c.length - 1;
  let y = c[i];
  while (i > 0) {
    i--;
    y = y * x + c[i];
  }
  return y;
}
function floorDiv(x, y) {
  const q = x / y;
  return Math.floor(q);
}
function cmp(a, b) {
  if (a < b)
    return -1;
  if (a > b)
    return 1;
  return 0;
}
function sincos(ε) {
  return [Math.sin(ε), Math.cos(ε)];
}
function toRad(deg) {
  return Math.PI / 180 * deg;
}
function toDeg(rad) {
  return 180 / Math.PI * rad;
}
function modf(float) {
  const i = Math.trunc(float);
  const f = Math.abs(float - i);
  return [i, f];
}
function round2(float, precision = 14) {
  return parseFloat(float.toFixed(precision));
}
function errorCode(msg, code) {
  const err = new Error(msg);
  err.code = code;
  return err;
}
var base_default = {
  K,
  AU,
  SOblJ2000,
  COblJ2000,
  lightTime,
  JMod,
  J2000,
  J1900,
  B1900,
  B1950,
  JulianYear,
  JulianCentury,
  BesselianYear,
  meanSiderealYear,
  JulianYearToJDE,
  JDEToJulianYear,
  BesselianYearToJDE,
  JDEToBesselianYear,
  J2000Century,
  illuminated,
  Coord,
  limb,
  SmallAngle,
  CosSmallAngle,
  pmod,
  horner,
  floorDiv,
  cmp,
  sincos,
  toRad,
  toDeg,
  modf,
  round: round2,
  errorCode
};

// node_modules/astronomia/src/interpolation.js
var int = Math.trunc;
var errorNot3 = new Error("Argument y must be length 3");
var errorNot4 = new Error("Argument y must be length 4");
var errorNot5 = new Error("Argument y must be length 5");
var errorNoXRange = new Error("Argument x3 (or x5) cannot equal x1");
var errorNOutOfRange = new Error("Interpolating factor n must be in range -1 to 1");
var errorNoExtremum = new Error("No extremum in table");
var errorExtremumOutside = new Error("Extremum falls outside of table");
var errorZeroOutside = new Error("Zero falls outside of table");
var errorNoConverge = new Error("Failure to converge");
var Len3 = class {
  /**
   * NewLen3 prepares a Len3 object from a table of three rows of x and y values.
   *
   * X values must be equally spaced, so only the first and last are supplied.
   * X1 must not equal to x3.  Y must be a slice of three y values.
   *
   * @throws Error
   * @param {Number} x1 - is the x value corresponding to the first y value of the table.
   * @param {Number} x3 - is the x value corresponding to the last y value of the table.
   * @param {Number[]} y - is all y values in the table. y.length should be >= 3.0
   */
  constructor(x1, x3, y) {
    if (y.length !== 3) {
      throw errorNot3;
    }
    if (x3 === x1) {
      throw errorNoXRange;
    }
    this.x1 = x1;
    this.x3 = x3;
    this.y = y;
    this.a = y[1] - y[0];
    this.b = y[2] - y[1];
    this.c = this.b - this.a;
    this.abSum = this.a + this.b;
    this.xSum = x3 + x1;
    this.xDiff = x3 - x1;
  }
  /**
   * InterpolateX interpolates for a given x value.
   */
  interpolateX(x) {
    const n = (2 * x - this.xSum) / this.xDiff;
    return this.interpolateN(n);
  }
  /**
   * InterpolateXStrict interpolates for a given x value,
   * restricting x to the range x1 to x3 given to the constructor NewLen3.
   */
  interpolateXStrict(x) {
    const n = (2 * x - this.xSum) / this.xDiff;
    const y = this.interpolateNStrict(n);
    return y;
  }
  /**
   * InterpolateN interpolates for (a given interpolating factor n.
   *
   * This is interpolation formula (3.3)
   *
   * @param n - The interpolation factor n is x-x2 in units of the tabular x interval.
   * (See Meeus p. 24.)
   * @return {number} interpolation value
   */
  interpolateN(n) {
    return this.y[1] + n * 0.5 * (this.abSum + n * this.c);
  }
  /**
   * InterpolateNStrict interpolates for (a given interpolating factor n.
   *
   * @param {number} n - n is restricted to the range [-1..1] corresponding to the range x1 to x3
   * given to the constructor of Len3.
   * @return {number} interpolation value
   */
  interpolateNStrict(n) {
    if (n < -1 || n > 1) {
      throw errorNOutOfRange;
    }
    return this.interpolateN(n);
  }
  /**
   * Extremum returns the x and y values at the extremum.
   *
   * Results are restricted to the range of the table given to the constructor
   * new Len3.
   */
  extremum() {
    if (this.c === 0) {
      throw errorNoExtremum;
    }
    const n = this.abSum / (-2 * this.c);
    if (n < -1 || n > 1) {
      throw errorExtremumOutside;
    }
    const x = 0.5 * (this.xSum + this.xDiff * n);
    const y = this.y[1] - this.abSum * this.abSum / (8 * this.c);
    return [x, y];
  }
  /**
   * Len3Zero finds a zero of the quadratic function represented by the table.
   *
   * That is, it returns an x value that yields y=0.
   *
   * Argument strong switches between two strategies for the estimation step.
   * when iterating to converge on the zero.
   *
   * Strong=false specifies a quick and dirty estimate that works well
   * for gentle curves, but can work poorly or fail on more dramatic curves.
   *
   * Strong=true specifies a more sophisticated and thus somewhat more
   * expensive estimate.  However, if the curve has quick changes, This estimate
   * will converge more reliably and in fewer steps, making it a better choice.
   *
   * Results are restricted to the range of the table given to the constructor
   * NewLen3.
   */
  zero(strong) {
    let f;
    if (strong) {
      f = (n02) => {
        return n02 - (2 * this.y[1] + n02 * (this.abSum + this.c * n02)) / (this.abSum + 2 * this.c * n02);
      };
    } else {
      f = (n02) => {
        return -2 * this.y[1] / (this.abSum + this.c * n02);
      };
    }
    const [n0, ok] = iterate(0, f);
    if (!ok) {
      throw errorNoConverge;
    }
    if (n0 > 1 || n0 < -1) {
      throw errorZeroOutside;
    }
    return 0.5 * (this.xSum + this.xDiff * n0);
  }
};
function len3ForInterpolateX(x, x1, xN, y) {
  let y3 = y;
  if (y.length > 3) {
    const interval = (xN - x1) / (y.length - 1);
    if (interval === 0) {
      throw errorNoXRange;
    }
    let nearestX = int((x - x1) / interval + 0.5);
    if (nearestX < 1) {
      nearestX = 1;
    } else if (nearestX > y.length - 2) {
      nearestX = y.length - 2;
    }
    y3 = y.slice(nearestX - 1, nearestX + 2);
    xN = x1 + (nearestX + 1) * interval;
    x1 = x1 + (nearestX - 1) * interval;
  }
  return new Len3(x1, xN, y3);
}
var iterate = function(n0, f) {
  for (let limit = 0; limit < 50; limit++) {
    const n1 = f(n0);
    if (!isFinite(n1) || isNaN(n1)) {
      break;
    }
    if (Math.abs((n1 - n0) / n0) < 1e-15) {
      return [n1, true];
    }
    n0 = n1;
  }
  return [0, false];
};
function len4Half(y) {
  if (y.length !== 4) {
    throw errorNot4;
  }
  return (9 * (y[1] + y[2]) - y[0] - y[3]) / 16;
}
var Len5 = class {
  /**
   * NewLen5 prepares a Len5 object from a table of five rows of x and y values.
   *
   * X values must be equally spaced, so only the first and last are suppliethis.
   * X1 must not equal x5.  Y must be a slice of five y values.
   */
  constructor(x1, x5, y) {
    if (y.length !== 5) {
      throw errorNot5;
    }
    if (x5 === x1) {
      throw errorNoXRange;
    }
    this.x1 = x1;
    this.x5 = x5;
    this.y = y;
    this.y3 = y[2];
    this.a = y[1] - y[0];
    this.b = y[2] - y[1];
    this.c = y[3] - y[2];
    this.d = y[4] - y[3];
    this.e = this.b - this.a;
    this.f = this.c - this.b;
    this.g = this.d - this.c;
    this.h = this.f - this.e;
    this.j = this.g - this.f;
    this.k = this.j - this.h;
    this.xSum = x5 + x1;
    this.xDiff = x5 - x1;
    this.interpCoeff = [
      // (3.8) p. 28
      this.y3,
      (this.b + this.c) / 2 - (this.h + this.j) / 12,
      this.f / 2 - this.k / 24,
      (this.h + this.j) / 12,
      this.k / 24
    ];
  }
  /**
   * InterpolateX interpolates for (a given x value.
   */
  interpolateX(x) {
    const n = (4 * x - 2 * this.xSum) / this.xDiff;
    return this.interpolateN(n);
  }
  /**
   * InterpolateXStrict interpolates for a given x value,
   * restricting x to the range x1 to x5 given to the the constructor NewLen5.
   */
  interpolateXStrict(x) {
    const n = (4 * x - 2 * this.xSum) / this.xDiff;
    const y = this.interpolateNStrict(n);
    return y;
  }
  /**
   * InterpolateN interpolates for (a given interpolating factor n.
   *
   * The interpolation factor n is x-x3 in units of the tabular x interval.
   * (See Meeus p. 28.)
   */
  interpolateN(n) {
    return base_default.horner(n, ...this.interpCoeff);
  }
  /**
   * InterpolateNStrict interpolates for (a given interpolating factor n.
   *
   * N is restricted to the range [-1..1].  This is only half the range given
   * to the constructor NewLen5, but is the recommendation given on p. 31.0
   */
  interpolateNStrict(n) {
    if (n < -1 || n > 1) {
      throw errorNOutOfRange;
    }
    return base_default.horner(n, ...this.interpCoeff);
  }
  /**
   * Extremum returns the x and y values at the extremum.
   *
   * Results are restricted to the range of the table given to the constructor
   * NewLen5.  (Meeus actually recommends restricting the range to one unit of
   * the tabular interval, but that seems a little harsh.)
   */
  extremum() {
    const nCoeff = [
      6 * (this.b + this.c) - this.h - this.j,
      0,
      3 * (this.h + this.j),
      2 * this.k
    ];
    const den = this.k - 12 * this.f;
    if (den === 0) {
      throw errorExtremumOutside;
    }
    const [n0, ok] = iterate(0, function(n02) {
      return base_default.horner(n02, ...nCoeff) / den;
    });
    if (!ok) {
      throw errorNoConverge;
    }
    if (n0 < -2 || n0 > 2) {
      throw errorExtremumOutside;
    }
    const x = 0.5 * this.xSum + 0.25 * this.xDiff * n0;
    const y = base_default.horner(n0, ...this.interpCoeff);
    return [x, y];
  }
  /**
   * Len5Zero finds a zero of the quartic function represented by the table.
   *
   * That is, it returns an x value that yields y=0.
   *
   * Argument strong switches between two strategies for the estimation step.
   * when iterating to converge on the zero.
   *
   * Strong=false specifies a quick and dirty estimate that works well
   * for gentle curves, but can work poorly or fail on more dramatic curves.
   *
   * Strong=true specifies a more sophisticated and thus somewhat more
   * expensive estimate.  However, if the curve has quick changes, This estimate
   * will converge more reliably and in fewer steps, making it a better choice.
   *
   * Results are restricted to the range of the table given to the constructor
   * NewLen5.
   */
  zero(strong) {
    let f;
    if (strong) {
      const M = this.k / 24;
      const N = (this.h + this.j) / 12;
      const P = this.f / 2 - M;
      const Q = (this.b + this.c) / 2 - N;
      const numCoeff = [this.y3, Q, P, N, M];
      const denCoeff = [Q, 2 * P, 3 * N, 4 * M];
      f = function(n02) {
        return n02 - base_default.horner(n02, ...numCoeff) / base_default.horner(n02, ...denCoeff);
      };
    } else {
      const numCoeff = [
        -24 * this.y3,
        0,
        this.k - 12 * this.f,
        -2 * (this.h + this.j),
        -this.k
      ];
      const den = 12 * (this.b + this.c) - 2 * (this.h + this.j);
      f = function(n02) {
        return base_default.horner(n02, ...numCoeff) / den;
      };
    }
    const [n0, ok] = iterate(0, f);
    if (!ok) {
      throw errorNoConverge;
    }
    if (n0 > 2 || n0 < -2) {
      throw errorZeroOutside;
    }
    const x = 0.5 * this.xSum + 0.25 * this.xDiff * n0;
    return x;
  }
};
function lagrange(x, table) {
  let sum2 = 0;
  table.forEach((ti, i) => {
    const xi = ti[0];
    let prod = 1;
    table.forEach((tj, j) => {
      if (i !== j) {
        const xj = tj[0];
        prod *= (x - xj) / (xi - xj);
      }
    });
    sum2 += ti[1] * prod;
  });
  return sum2;
}
function lagrangePoly(table) {
  const sum2 = new Array(table.length).fill(0);
  const prod = new Array(table.length).fill(0);
  const last2 = table.length - 1;
  for (let i = 0; i < table.length; i++) {
    const xi = table[i][0] || table[i].x || 0;
    const yi = table[i][1] || table[i].y || 0;
    prod[last2] = 1;
    let den = 1;
    let n = last2;
    for (let j = 0; j < table.length; j++) {
      if (i !== j) {
        const xj = table[j][0] || table[j].x || 0;
        prod[n - 1] = prod[n] * -xj;
        for (let k = n; k < last2; k++) {
          prod[k] -= prod[k + 1] * xj;
        }
        n--;
        den *= xi - xj;
      }
    }
    prod.forEach((pj, j) => {
      sum2[j] += yi * pj / den;
    });
  }
  return sum2;
}
function linear(x, x1, xN, y) {
  const interval = (xN - x1) / (y.length - 1);
  if (interval === 0) {
    throw errorNoXRange;
  }
  let nearestX = Math.floor((x - x1) / interval);
  if (nearestX < 0) {
    nearestX = 0;
  } else if (nearestX > y.length - 2) {
    nearestX = y.length - 2;
  }
  const y2 = y.slice(nearestX, nearestX + 2);
  const x01 = x1 + nearestX * interval;
  return y2[0] + (y[1] - y[0]) * (x - x01) / interval;
}
var interpolation_default = {
  errorNot3,
  errorNot4,
  errorNot5,
  errorNoXRange,
  errorNOutOfRange,
  errorNoExtremum,
  errorExtremumOutside,
  errorZeroOutside,
  errorNoConverge,
  Len3,
  len3ForInterpolateX,
  iterate,
  len4Half,
  Len5,
  lagrange,
  lagrangePoly,
  linear
};

// node_modules/astronomia/src/angle.js
var { abs: abs2, acos, asin, atan2, cos, hypot, sin, sqrt, tan } = Math;

// node_modules/astronomia/src/sexagesimal.js
var Angle = class {
  /**
  * constructs a new Angle value from sign, degree, minute, and second
  * components.
  * @param {Number|Boolean} angleOrNeg - angle in radians or sign, true if negative (required to attribute -0°30')
  * __Four arguments__
  * @param {Number} [d] - (int) degree
  * @param {Number} [m] - (int) minute
  * @param {Number} [s] - (float) second
  */
  constructor(angleOrNeg, d3, m3, s2) {
    if (arguments.length === 1) {
      this.angle = Number(angleOrNeg);
    } else {
      this.setDMS(!!angleOrNeg, d3, m3, s2);
    }
  }
  /**
   * SetDMS sets the value of an FAngle from sign, degree, minute, and second
   * components.
   * The receiver is returned as a convenience.
   * @param {Boolean} neg - sign, true if negative
   * @param {Number} d - (int) degree
   * @param {Number} m - (int) minute
   * @param {Number} s - (float) second
   * @returns {Angle}
   */
  setDMS(neg = false, d3 = 0, m3 = 0, s2 = 0) {
    this.angle = DMSToDeg(neg, d3, m3, s2) * Math.PI / 180;
    return this;
  }
  /**
   * sets angle
   * @param {Number} angle - (float) angle in radians
   * @returns {Angle}
   */
  setAngle(angle) {
    this.angle = angle;
    return this;
  }
  /**
   * Rad returns the angle in radians.
   * @returns {Number} angle in radians
   */
  rad() {
    return this.angle;
  }
  /**
   * Deg returns the angle in degrees.
   * @returns {Number} angle in degree
   */
  deg() {
    return this.angle * 180 / Math.PI;
  }
  /**
   * toDMS converts to parsed sexagesimal angle component.
   */
  toDMS() {
    return degToDMS(this.deg());
  }
  /**
   * Print angle in degree using `d°m´s.ss″`
   * @param {Number} [precision] - precision of `s.ss`
   * @returns {String}
   */
  toString(precision) {
    let [neg, d3, m3, s2] = this.toDMS();
    s2 = round3(s2, precision).toString().replace(/^0\./, ".");
    const str = (neg ? "-" : "") + (d3 + "°") + (m3 + "′") + (s2 + "″");
    return str;
  }
  /**
   * Print angle in degree using `d°.ff`
   * @param {Number} [precision] - precision of `.ff`
   * @returns {String}
   */
  toDegString(precision) {
    let [i, s2] = modf2(this.deg());
    s2 = round3(s2, precision).toString().replace(/^0\./, ".");
    const str = i + "°" + s2;
    return str;
  }
};
var HourAngle = class extends Angle {
  /**
   * NewHourAngle constructs a new HourAngle value from sign, hour, minute,
   * and second components.
   * @param {Boolean} neg
   * @param {Number} h - (int)
   * @param {Number} m - (int)
   * @param {Number} s - (float)
   * @constructor
   */
  /**
   * SetDMS sets the value of an FAngle from sign, degree, minute, and second
   * components.
   * The receiver is returned as a convenience.
   * @param {Boolean} neg - sign, true if negative
   * @param {Number} h - (int) hour
   * @param {Number} m - (int) minute
   * @param {Number} s - (float) second
   * @returns {Angle}
   */
  setDMS(neg = false, h = 0, m3 = 0, s2 = 0) {
    this.angle = DMSToDeg(neg, h, m3, s2) * 15 * Math.PI / 180;
    return this;
  }
  /**
   * Hour returns the hour angle as hours of time.
   * @returns hour angle
   */
  hour() {
    return this.angle * 12 / Math.PI;
  }
  deg() {
    return this.hour();
  }
  /**
   * Print angle in `HʰMᵐs.ssˢ`
   * @param {Number} precision - precision of `s.ss`
   * @returns {String}
   */
  toString(precision) {
    let [neg, h, m3, s2] = this.toDMS();
    s2 = round3(s2, precision).toString().replace(/^0\./, ".");
    const str = (neg ? "-" : "") + (h + "ʰ") + (m3 + "ᵐ") + (s2 + "ˢ");
    return str;
  }
};
function DMSToDeg(neg, d3, m3, s2) {
  s2 = ((d3 * 60 + m3) * 60 + s2) / 3600;
  if (neg) {
    return -s2;
  }
  return s2;
}
function degToDMS(deg) {
  const neg = deg < 0;
  deg = Math.abs(deg);
  let [d3, s2] = modf2(deg % 360);
  const [m3, s1] = modf2(s2 * 60);
  s2 = round3(s1 * 60);
  return [neg, d3, m3, s2];
}
var RA = class extends HourAngle {
  /**
   * constructs a new RA value from hour, minute, and second components.
   * Negative values are not supported, RA wraps values larger than 24
   * to the range [0,24) hours.
   * @param {Number} h - (int) hour
   * @param {Number} m - (int) minute
   * @param {Number} s - (float) second
   */
  constructor(h = 0, m3 = 0, s2 = 0) {
    super(false, h, m3, s2);
    const args = [].slice.call(arguments);
    if (args.length === 1) {
      this.angle = h;
    } else {
      const hr = DMSToDeg(false, h, m3, s2) % 24;
      this.angle = hr * 15 * Math.PI / 180;
    }
  }
  hour() {
    const h = this.angle * 12 / Math.PI;
    return (24 + h % 24) % 24;
  }
};
var Time = class {
  /**
   * @param {boolean|number} negOrTimeInSecs - set `true` if negative; if type is number than time in seconds
   * @param {number} [h] - (int) hour
   * @param {number} [m] - (int) minute
   * @param {number} [s] - (float) second
   * @example
   * new sexa.Time(SECS_OF_DAY)
   * new sexa.Time(false, 15, 22, 7)
   */
  constructor(negOrTimeInSecs, h, m3, s2) {
    if (typeof negOrTimeInSecs === "number") {
      this.time = negOrTimeInSecs;
    } else {
      this.setHMS(negOrTimeInSecs, h, m3, s2);
    }
  }
  setHMS(neg = false, h = 0, m3 = 0, s2 = 0) {
    s2 += (h * 60 + m3) * 60;
    if (neg) {
      s2 = -s2;
    }
    this.time = s2;
  }
  /**
   * @returns {Number} time in seconds.
   */
  sec() {
    return this.time;
  }
  /**
   * @returns {Number} time in minutes.
   */
  min() {
    return this.time / 60;
  }
  /**
   * @returns {Number} time in hours.
   */
  hour() {
    return this.time / 3600;
  }
  /**
   * @returns {Number} time in days.
   */
  day() {
    return this.time / 3600 / 24;
  }
  /**
   * @returns {Number} time in radians, where 1 day = 2 Pi radians.
   */
  rad() {
    return this.time * Math.PI / 12 / 3600;
  }
  /**
   * convert time to HMS
   * @returns {Array} [neg, h, m, s]
   *  {Boolean} neg - sign, true if negative
   *  {Number} h - (int) hour
   *  {Number} m - (int) minute
   *  {Number} s - (float) second
   */
  toHMS() {
    let t = this.time;
    const neg = t < 0;
    t = neg ? -t : t;
    const h = Math.trunc(t / 3600);
    t = t - h * 3600;
    const m3 = Math.trunc(t / 60);
    const s2 = t - m3 * 60;
    return [neg, h, m3, s2];
  }
  /**
   * Print time using `HʰMᵐsˢ.ss`
   * @param {Number} precision - precision of `.ss`
   * @returns {String}
   */
  toString(precision) {
    const [neg, h, m3, s2] = this.toHMS();
    let [si, sf] = modf2(s2);
    if (precision === 0) {
      si = round3(s2, 0);
      sf = 0;
    } else {
      sf = round3(sf, precision).toString().substr(1);
    }
    const str = (neg ? "-" : "") + (h + "ʰ") + (m3 + "ᵐ") + (si + "ˢ") + (sf || "");
    return str;
  }
};
var angleFromDeg = (deg) => deg * Math.PI / 180;
var angleFromMin = (min2) => min2 / 60 * Math.PI / 180;
var angleFromSec = (sec) => sec / 3600 * Math.PI / 180;
var degFromAngle = (angle) => angle * 180 / Math.PI;
var secFromAngle = (angle) => angle * 3600 * 180 / Math.PI;
var secFromHourAngle = (ha) => ha * 240 * 180 / Math.PI;
function modf2(float) {
  const i = Math.trunc(float);
  const f = Math.abs(float - i);
  return [i, f];
}
function round3(float, precision = 10) {
  return parseFloat(float.toFixed(precision));
}
var sexagesimal_default = {
  Angle,
  HourAngle,
  DMSToDeg,
  degToDMS,
  RA,
  Time,
  angleFromDeg,
  angleFromMin,
  angleFromSec,
  degFromAngle,
  secFromAngle,
  secFromHourAngle
};

// node_modules/astronomia/src/globe.js
var Ellipsoid = class {
  /**
   * @param {number} radius - equatorial radius
   * @param {number} flat - ellipsiod flattening
   */
  constructor(radius2, flat) {
    this.radius = radius2;
    this.flat = flat;
  }
  /** A is a common identifier for equatorial radius. */
  A() {
    return this.radius;
  }
  /** B is a common identifier for polar radius. */
  B() {
    return this.radius * (1 - this.flat);
  }
  /** eccentricity of a meridian. */
  eccentricity() {
    return Math.sqrt((2 - this.flat) * this.flat);
  }
  /**
   * parallaxConstants computes parallax constants ρ sin φ′ and ρ cos φ′.
   *
   * Arguments are geographic latitude φ in radians and height h
   * in meters above the ellipsoid.
   *
   * @param {number} φ - geographic latitude in radians
   * @param {number} h - height in meters above the ellipsoid
   * @return {number[]} [ρ sin φ′, ρ cos φ] parallax constants [ρsφ, ρcφ]
   */
  parallaxConstants(φ, h) {
    const boa = 1 - this.flat;
    const su = Math.sin(Math.atan(boa * Math.tan(φ)));
    const cu = Math.cos(Math.atan(boa * Math.tan(φ)));
    const s2 = Math.sin(φ);
    const c = Math.cos(φ);
    const hoa = h * 1e-3 / this.radius;
    const ρsφ = su * boa + hoa * s2;
    const ρcφ = cu + hoa * c;
    return [ρsφ, ρcφ];
  }
  /**
   * rho is distance from Earth center to a point on the ellipsoid.
   *
   * Result unit is fraction of the equatorial radius.
   * @param {number} φ - geographic latitude in radians
   * @returns {number} // TODO
   */
  rho(φ) {
    return 0.9983271 + 16764e-7 * Math.cos(2 * φ) - 35e-7 * Math.cos(4 * φ);
  }
  /**
   * radiusAtLatitude returns the radius of the circle that is the parallel of
   * latitude at φ.
   *
   * Result unit is Km.
   *
   * @param {number} φ
   * @return {number} radius in km
   */
  radiusAtLatitude(φ) {
    const s2 = Math.sin(φ);
    const c = Math.cos(φ);
    return this.A() * c / Math.sqrt(1 - (2 - this.flat) * this.flat * s2 * s2);
  }
  /**
   * radiusOfCurvature of meridian at latitude φ.
   *
   * Result unit is Km.
   *
   * @param {number} φ
   * @return {number} radius in km
   */
  radiusOfCurvature(φ) {
    const s2 = Math.sin(φ);
    const e2 = (2 - this.flat) * this.flat;
    return this.A() * (1 - e2) / Math.pow(1 - e2 * s2 * s2, 1.5);
  }
  /**
   * distance is distance between two points measured along the surface
   * of an ellipsoid.
   *
   * Accuracy is much better than that of approxAngularDistance or
   * approxLinearDistance.
   *
   * Result unit is Km.
   *
   * @param {Coord} c1
   * @param {Coord} c2
   * @return {number} radius in km
   */
  distance(c1, c2) {
    const [s2f, c2f] = sincos2((c1.lat + c2.lat) / 2);
    const [s2g, c2g] = sincos2((c1.lat - c2.lat) / 2);
    const [s2λ, c2λ] = sincos2((c1.lon - c2.lon) / 2);
    const s2 = s2g * c2λ + c2f * s2λ;
    const c = c2g * c2λ + s2f * s2λ;
    const ω = Math.atan(Math.sqrt(s2 / c));
    const r = Math.sqrt(s2 * c) / ω;
    const d3 = 2 * ω * this.radius;
    const h1 = (3 * r - 1) / (2 * c);
    const h2 = (3 * r + 1) / (2 * s2);
    return d3 * (1 + this.flat * (h1 * s2f * c2g - h2 * c2f * s2g));
  }
};
var Earth76 = new Ellipsoid(6378.14, 1 / 298.257);
function sincos2(x) {
  const s2 = Math.sin(x);
  const c = Math.cos(x);
  return [s2 * s2, c * c];
}

// node_modules/astronomia/src/coord.js
var Ecliptic = class {
  /**
   * IMPORTANT: Longitudes are measured *positively* westwards
   * e.g. Washington D.C. +77°04; Vienna -16°23'
   * @param {Number|LonLat} [lon] - Longitude (λ) in radians
   * @param {Number} [lat] - Latitude (β) in radians
   */
  constructor(lon, lat) {
    if (typeof lon === "object") {
      lat = lon.lat;
      lon = lon.lon;
    }
    this.lon = lon || 0;
    this.lat = lat || 0;
  }
  /**
   * converts ecliptic coordinates to equatorial coordinates.
   * @param {Number} ε - Obliquity
   * @returns {Equatorial}
   */
  toEquatorial(ε) {
    const [εsin, εcos] = base_default.sincos(ε);
    const [sβ, cβ] = base_default.sincos(this.lat);
    const [sλ, cλ] = base_default.sincos(this.lon);
    let ra = Math.atan2(sλ * εcos - sβ / cβ * εsin, cλ);
    if (ra < 0) {
      ra += 2 * Math.PI;
    }
    const dec = Math.asin(sβ * εcos + cβ * εsin * sλ);
    return new Equatorial(ra, dec);
  }
};
var Equatorial = class {
  /**
   * @param {Number} ra - (float) Right ascension (α) in radians
   * @param {Number} dec - (float) Declination (δ) in radians
   */
  constructor(ra = 0, dec = 0) {
    this.ra = ra;
    this.dec = dec;
  }
  /**
   * EqToEcl converts equatorial coordinates to ecliptic coordinates.
   * @param {Number} ε - Obliquity
   * @returns {Ecliptic}
   */
  toEcliptic(ε) {
    const [εsin, εcos] = base_default.sincos(ε);
    const [sα, cα] = base_default.sincos(this.ra);
    const [sδ, cδ] = base_default.sincos(this.dec);
    const lon = Math.atan2(sα * εcos + sδ / cδ * εsin, cα);
    const lat = Math.asin(sδ * εcos - cδ * εsin * sα);
    return new Ecliptic(lon, lat);
  }
  /**
   * EqToHz computes Horizontal coordinates from equatorial coordinates.
   *
   * Argument g is the location of the observer on the Earth.  Argument st
   * is the sidereal time at Greenwich.
   *
   * Sidereal time must be consistent with the equatorial coordinates.
   * If coordinates are apparent, sidereal time must be apparent as well.
   *
   * @param {GlobeCoord} g - coordinates of observer on Earth
   * @param {Number} st - sidereal time at Greenwich at time of observation
   * @returns {Horizontal}
   */
  toHorizontal(g, st) {
    const H = new sexagesimal_default.Time(st).rad() - g.lon - this.ra;
    const [sH, cH] = base_default.sincos(H);
    const [sφ, cφ] = base_default.sincos(g.lat);
    const [sδ, cδ] = base_default.sincos(this.dec);
    const azimuth = Math.atan2(sH, cH * sφ - sδ / cδ * cφ);
    const altitude = Math.asin(sφ * sδ + cφ * cδ * cH);
    return new Horizontal(azimuth, altitude);
  }
  /**
   * EqToGal converts equatorial coordinates to galactic coordinates.
   *
   * Equatorial coordinates must be referred to the standard equinox of B1950.0.
   * For conversion to B1950, see package precess and utility functions in
   * package "common".
   *
   * @returns {Galactic}
   */
  toGalactic() {
    const [sdα, cdα] = base_default.sincos(galacticNorth1950.ra - this.ra);
    const [sgδ, cgδ] = base_default.sincos(galacticNorth1950.dec);
    const [sδ, cδ] = base_default.sincos(this.dec);
    const x = Math.atan2(sdα, cdα * sgδ - sδ / cδ * cgδ);
    const lon = (galactic0Lon1950 + 1.5 * Math.PI - x) % (2 * Math.PI);
    const lat = Math.asin(sδ * sgδ + cδ * cgδ * cdα);
    return new Galactic(lon, lat);
  }
};
var Horizontal = class {
  constructor(az = 0, alt = 0) {
    this.az = az;
    this.alt = alt;
  }
  /**
   * transforms horizontal coordinates to equatorial coordinates.
   *
   * Sidereal time must be consistent with the equatorial coordinates.
   * If coordinates are apparent, sidereal time must be apparent as well.
   * @param {GlobeCoord} g - coordinates of observer on Earth (lat, lon)
   * @param {Number} st - sidereal time at Greenwich at time of observation.
   * @returns {Equatorial} (right ascension, declination)
   */
  toEquatorial(g, st) {
    const [sA, cA] = base_default.sincos(this.az);
    const [sh, ch] = base_default.sincos(this.alt);
    const [sφ, cφ] = base_default.sincos(g.lat);
    const H = Math.atan2(sA, cA * sφ + sh / ch * cφ);
    const ra = base_default.pmod(new sexagesimal_default.Time(st).rad() - g.lon - H, 2 * Math.PI);
    const dec = Math.asin(sφ * sh - cφ * ch * cA);
    return new Equatorial(ra, dec);
  }
};
var Galactic = class {
  constructor(lon = 0, lat = 0) {
    this.lon = lon;
    this.lat = lat;
  }
  /**
   * GalToEq converts galactic coordinates to equatorial coordinates.
   *
   * Resulting equatorial coordinates will be referred to the standard equinox of
   * B1950.0.  For subsequent conversion to other epochs, see package precess and
   * utility functions in package meeus.
   *
   * @returns {Equatorial} (right ascension, declination)
   */
  toEquatorial() {
    const [sdLon, cdLon] = base_default.sincos(this.lon - galactic0Lon1950 - Math.PI / 2);
    const [sgδ, cgδ] = base_default.sincos(galacticNorth1950.dec);
    const [sb, cb] = base_default.sincos(this.lat);
    const y = Math.atan2(sdLon, cdLon * sgδ - sb / cb * cgδ);
    const ra = base_default.pmod(y + galacticNorth1950.ra - Math.PI, 2 * Math.PI);
    const dec = Math.asin(sb * sgδ + cb * cgδ * cdLon);
    return new Equatorial(ra, dec);
  }
};
var galacticNorth = new Equatorial(
  new sexagesimal_default.RA(12, 49, 0).rad(),
  27.4 * Math.PI / 180
);
var galacticNorth1950 = galacticNorth;
var galacticLon0 = 33 * Math.PI / 180;
var galactic0Lon1950 = galacticLon0;
var coord_default = {
  Ecliptic,
  Equatorial,
  Horizontal,
  Galactic,
  galacticNorth,
  galacticNorth1950,
  galacticLon0,
  galactic0Lon1950
};

// node_modules/astronomia/src/nutation.js
function nutation(jde) {
  const T = base_default.J2000Century(jde);
  const D = base_default.horner(
    T,
    297.85036,
    445267.11148,
    -19142e-7,
    1 / 189474
  ) * Math.PI / 180;
  const M = base_default.horner(
    T,
    357.52772,
    35999.05034,
    -1603e-7,
    -1 / 3e5
  ) * Math.PI / 180;
  const N = base_default.horner(
    T,
    134.96298,
    477198.867398,
    86972e-7,
    1 / 56250
  ) * Math.PI / 180;
  const F = base_default.horner(
    T,
    93.27191,
    483202.017538,
    -36825e-7,
    1 / 327270
  ) * Math.PI / 180;
  const Ω = base_default.horner(
    T,
    125.04452,
    -1934.136261,
    20708e-7,
    1 / 45e4
  ) * Math.PI / 180;
  let Δψ = 0;
  let Δε = 0;
  for (let i = table22A.length - 1; i >= 0; i--) {
    const row = table22A[i];
    const arg = row.d * D + row.m * M + row.n * N + row.f * F + row.ω * Ω;
    const [s2, c] = base_default.sincos(arg);
    Δψ += s2 * (row.s0 + row.s1 * T);
    Δε += c * (row.c0 + row.c1 * T);
  }
  Δψ *= 1e-4 / 3600 * (Math.PI / 180);
  Δε *= 1e-4 / 3600 * (Math.PI / 180);
  return [Δψ, Δε];
}
function approxNutation(jde) {
  const T = (jde - base_default.J2000) / 36525;
  const Ω = (125.04452 - 1934.136261 * T) * Math.PI / 180;
  const L2 = (280.4665 + 36000.7698 * T) * Math.PI / 180;
  const N = (218.3165 + 481267.8813 * T) * Math.PI / 180;
  const [sΩ, cΩ] = base_default.sincos(Ω);
  const [s2L, c2L] = base_default.sincos(2 * L2);
  const [s2N, c2N] = base_default.sincos(2 * N);
  const [s2Ω, c2Ω] = base_default.sincos(2 * Ω);
  const Δψ = (-17.2 * sΩ - 1.32 * s2L - 0.23 * s2N + 0.21 * s2Ω) / 3600 * (Math.PI / 180);
  const Δε = (9.2 * cΩ + 0.57 * c2L + 0.1 * c2N - 0.09 * c2Ω) / 3600 * (Math.PI / 180);
  return [Δψ, Δε];
}
function meanObliquity(jde) {
  return base_default.horner(
    base_default.J2000Century(jde),
    new sexagesimal_default.Angle(false, 23, 26, 21.448).rad(),
    -46.815 / 3600 * (Math.PI / 180),
    -59e-5 / 3600 * (Math.PI / 180),
    1813e-6 / 3600 * (Math.PI / 180)
  );
}
function meanObliquityLaskar(jde) {
  return base_default.horner(
    base_default.J2000Century(jde) * 0.01,
    new sexagesimal_default.Angle(false, 23, 26, 21.448).rad(),
    -4680.93 / 3600 * (Math.PI / 180),
    -1.55 / 3600 * (Math.PI / 180),
    1999.25 / 3600 * (Math.PI / 180),
    -51.38 / 3600 * (Math.PI / 180),
    -249.67 / 3600 * (Math.PI / 180),
    -39.05 / 3600 * (Math.PI / 180),
    7.12 / 3600 * (Math.PI / 180),
    27.87 / 3600 * (Math.PI / 180),
    5.79 / 3600 * (Math.PI / 180),
    2.45 / 3600 * (Math.PI / 180)
  );
}
function nutationInRA(jde) {
  const [Δψ, Δε] = nutation(jde);
  const ε0 = meanObliquity(jde);
  return Δψ * Math.cos(ε0 + Δε);
}
var table22A = function() {
  const PROPS2 = "d,m,n,f,ω,s0,s1,c0,c1".split(",");
  const tab = [
    [0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9],
    [-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1],
    [0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5],
    [0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5],
    [0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1],
    [0, 0, 1, 0, 0, 712, 0.1, -7, 0],
    [-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6],
    [0, 0, 0, 2, 1, -386, -0.4, 200, 0],
    [0, 0, 1, 2, 2, -301, 0, 129, -0.1],
    [-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3],
    [-2, 0, 1, 0, 0, -158, 0, 0, 0],
    [-2, 0, 0, 2, 1, 129, 0.1, -70, 0],
    [0, 0, -1, 2, 2, 123, 0, -53, 0],
    [2, 0, 0, 0, 0, 63, 0, 0, 0],
    [0, 0, 1, 0, 1, 63, 0.1, -33, 0],
    [2, 0, -1, 2, 2, -59, 0, 26, 0],
    [0, 0, -1, 0, 1, -58, -0.1, 32, 0],
    [0, 0, 1, 2, 1, -51, 0, 27, 0],
    [-2, 0, 2, 0, 0, 48, 0, 0, 0],
    [0, 0, -2, 2, 1, 46, 0, -24, 0],
    [2, 0, 0, 2, 2, -38, 0, 16, 0],
    [0, 0, 2, 2, 2, -31, 0, 13, 0],
    [0, 0, 2, 0, 0, 29, 0, 0, 0],
    [-2, 0, 1, 2, 2, 29, 0, -12, 0],
    [0, 0, 0, 2, 0, 26, 0, 0, 0],
    [-2, 0, 0, 2, 0, -22, 0, 0, 0],
    [0, 0, -1, 2, 1, 21, 0, -10, 0],
    [0, 2, 0, 0, 0, 17, -0.1, 0, 0],
    [2, 0, -1, 0, 1, 16, 0, -8, 0],
    [-2, 2, 0, 2, 2, -16, 0.1, 7, 0],
    [0, 1, 0, 0, 1, -15, 0, 9, 0],
    [-2, 0, 1, 0, 1, -13, 0, 7, 0],
    [0, -1, 0, 0, 1, -12, 0, 6, 0],
    [0, 0, 2, -2, 0, 11, 0, 0, 0],
    [2, 0, -1, 2, 1, -10, 0, 5, 0],
    [2, 0, 1, 2, 2, -8, 0, 3, 0],
    [0, 1, 0, 2, 2, 7, 0, -3, 0],
    [-2, 1, 1, 0, 0, -7, 0, 0, 0],
    [0, -1, 0, 2, 2, -7, 0, 3, 0],
    [2, 0, 0, 2, 1, -7, 0, 3, 0],
    [2, 0, 1, 0, 0, 6, 0, 0, 0],
    [-2, 0, 2, 2, 2, 6, 0, -3, 0],
    [-2, 0, 1, 2, 1, 6, 0, -3, 0],
    [2, 0, -2, 0, 1, -6, 0, 3, 0],
    [2, 0, 0, 0, 1, -6, 0, 3, 0],
    [0, -1, 1, 0, 0, 5, 0, 0, 0],
    [-2, -1, 0, 2, 1, -5, 0, 3, 0],
    [-2, 0, 0, 0, 1, -5, 0, 3, 0],
    [0, 0, 2, 2, 1, -5, 0, 3, 0],
    [-2, 0, 2, 0, 1, 4, 0, 0, 0],
    [-2, 1, 0, 2, 1, 4, 0, 0, 0],
    [0, 0, 1, -2, 0, 4, 0, 0, 0],
    [-1, 0, 1, 0, 0, -4, 0, 0, 0],
    [-2, 1, 0, 0, 0, -4, 0, 0, 0],
    [1, 0, 0, 0, 0, -4, 0, 0, 0],
    [0, 0, 1, 2, 0, 3, 0, 0, 0],
    [0, 0, -2, 2, 2, -3, 0, 0, 0],
    [-1, -1, 1, 0, 0, -3, 0, 0, 0],
    [0, 1, 1, 0, 0, -3, 0, 0, 0],
    [0, -1, 1, 2, 2, -3, 0, 0, 0],
    [2, -1, -1, 2, 2, -3, 0, 0, 0],
    [0, 0, 3, 2, 2, -3, 0, 0, 0],
    [2, -1, 0, 2, 2, -3, 0, 0, 0]
  ];
  return tab.map((row) => {
    const o = {};
    PROPS2.forEach((p3, i) => {
      o[p3] = row[i];
    });
    return o;
  });
}();
var nutation_default = {
  nutation,
  approxNutation,
  meanObliquity,
  meanObliquityLaskar,
  nutationInRA
};

// node_modules/astronomia/src/elementequinox.js
var Elements = class {
  constructor(inc, node2, peri) {
    if (typeof inc === "object") {
      node2 = inc.pode;
      peri = inc.peri;
      inc = inc.inc;
    }
    this.inc = inc || 0;
    this.node = node2 || 0;
    this.peri = peri || 0;
  }
};
var Lp = 4.50001688 * Math.PI / 180;
var L = 5.19856209 * Math.PI / 180;
var J = 651966e-8 * Math.PI / 180;

// node_modules/astronomia/src/precess.js
function approxAnnualPrecession(eqFrom, epochFrom, epochTo) {
  const [m3, na, nd] = mn(epochFrom, epochTo);
  const [sa, ca] = base_default.sincos(eqFrom.ra);
  const Δαs = m3 + na * sa * Math.tan(eqFrom.dec);
  const Δδs = nd * ca;
  const ra = new HourAngle(false, 0, 0, Δαs).rad();
  const dec = new Angle(false, 0, 0, Δδs).rad();
  return { ra, dec };
}
function mn(epochFrom, epochTo) {
  const T = (epochTo - epochFrom) * 0.01;
  const m3 = 3.07496 + 186e-5 * T;
  const na = 1.33621 - 57e-5 * T;
  const nd = 20.0431 - 85e-4 * T;
  return [m3, na, nd];
}
function approxPosition(eqFrom, epochFrom, epochTo, mα, mδ) {
  const { ra, dec } = approxAnnualPrecession(eqFrom, epochFrom, epochTo);
  const dy = epochTo - epochFrom;
  const eqTo = new Equatorial();
  eqTo.ra = eqFrom.ra + (ra + mα) * dy;
  eqTo.dec = eqFrom.dec + (dec + mδ) * dy;
  return eqTo;
}
var d = Math.PI / 180;
var s = d / 3600;
var ζT = [2306.2181 * s, 1.39656 * s, -139e-6 * s];
var zT = [2306.2181 * s, 1.39656 * s, -139e-6 * s];
var θT = [2004.3109 * s, -0.8533 * s, -217e-6 * s];
var ζt = [2306.2181 * s, 0.30188 * s, 0.017998 * s];
var zt = [2306.2181 * s, 1.09468 * s, 0.018203 * s];
var θt = [2004.3109 * s, -0.42665 * s, -0.041833 * s];
var Precessor = class {
  /**
   * constructs a Precessor object and initializes it to precess
   * coordinates from epochFrom to epochTo.
   * @param {Number} epochFrom
   * @param {Number} epochTo
   */
  constructor(epochFrom, epochTo) {
    let ζCoeff = ζt;
    let zCoeff = zt;
    let θCoeff = θt;
    if (epochFrom !== 2e3) {
      const T = (epochFrom - 2e3) * 0.01;
      ζCoeff = [
        base_default.horner(T, ...ζT),
        0.30188 * s - 344e-6 * s * T,
        0.017998 * s
      ];
      zCoeff = [
        base_default.horner(T, ...zT),
        1.09468 * s + 66e-6 * s * T,
        0.018203 * s
      ];
      θCoeff = [
        base_default.horner(T, ...θT),
        -0.42665 * s - 217e-6 * s * T,
        -0.041833 * s
      ];
    }
    const t = (epochTo - epochFrom) * 0.01;
    this.ζ = base_default.horner(t, ...ζCoeff) * t;
    this.z = base_default.horner(t, ...zCoeff) * t;
    const θ = base_default.horner(t, ...θCoeff) * t;
    this.sθ = Math.sin(θ);
    this.cθ = Math.cos(θ);
  }
  /**
   * Precess precesses coordinates eqFrom, leaving result in eqTo.
   *
   * @param {Equatorial} eqFrom
   * @returns {Equatorial} eqTo
   */
  precess(eqFrom) {
    const [sδ, cδ] = base_default.sincos(eqFrom.dec);
    const [sαζ, cαζ] = base_default.sincos(eqFrom.ra + this.ζ);
    const A = cδ * sαζ;
    const B = this.cθ * cδ * cαζ - this.sθ * sδ;
    const C = this.sθ * cδ * cαζ + this.cθ * sδ;
    const eqTo = new Equatorial();
    eqTo.ra = Math.atan2(A, B) + this.z;
    if (C < base_default.CosSmallAngle) {
      eqTo.dec = Math.asin(C);
    } else {
      eqTo.dec = Math.acos(Math.hypot(A, B));
    }
    return eqTo;
  }
};
function position(eqFrom, epochFrom, epochTo, mα, mδ) {
  const p3 = new Precessor(epochFrom, epochTo);
  const t = epochTo - epochFrom;
  const eqTo = new Equatorial();
  eqTo.ra = eqFrom.ra + mα * t;
  eqTo.dec = eqFrom.dec + mδ * t;
  return p3.precess(eqTo);
}
var ηT = [47.0029 * s, -0.06603 * s, 598e-6 * s];
var πT = [174.876384 * d, 3289.4789 * s, 0.60622 * s];
var pT = [5029.0966 * s, 2.22226 * s, -42e-6 * s];
var ηt = [47.0029 * s, -0.03302 * s, 6e-5 * s];
var πt = [174.876384 * d, -869.8089 * s, 0.03536 * s];
var pt = [5029.0966 * s, 1.11113 * s, -6e-6 * s];
var EclipticPrecessor = class {
  /**
   * constructs an EclipticPrecessor object and initializes
   * it to precess coordinates from epochFrom to epochTo.
   * @param {Number} epochFrom
   * @param {Number} epochTo
   */
  constructor(epochFrom, epochTo) {
    let ηCoeff = ηt;
    let πCoeff = πt;
    let pCoeff = pt;
    if (epochFrom !== 2e3) {
      const T = (epochFrom - 2e3) * 0.01;
      ηCoeff = [
        base_default.horner(T, ...ηT),
        -0.03302 * s + 598e-6 * s * T,
        6e-5 * s
      ];
      πCoeff = [
        base_default.horner(T, ...πT),
        -869.8089 * s - 0.50491 * s * T,
        0.03536 * s
      ];
      pCoeff = [
        base_default.horner(T, ...pT),
        1.11113 * s - 42e-6 * s * T,
        -6e-6 * s
      ];
    }
    const t = (epochTo - epochFrom) * 0.01;
    this.π = base_default.horner(t, ...πCoeff);
    this.p = base_default.horner(t, ...pCoeff) * t;
    const η = base_default.horner(t, ...ηCoeff) * t;
    this.sη = Math.sin(η);
    this.cη = Math.cos(η);
  }
  /**
   * EclipticPrecess precesses coordinates eclFrom, leaving result in eclTo.
   *
   * The same struct may be used for eclFrom and eclTo.
   * EclTo is returned for convenience.
   * @param {Ecliptic} eclFrom
   * @returns {Ecliptic} [eclTo]
   */
  precess(eclFrom) {
    const [sβ, cβ] = base_default.sincos(eclFrom.lat);
    const [sd, cd] = base_default.sincos(this.π - eclFrom.lon);
    const A = this.cη * cβ * sd - this.sη * sβ;
    const B = cβ * cd;
    const C = this.cη * sβ + this.sη * cβ * sd;
    const eclTo = new Ecliptic(this.p + this.π - Math.atan2(A, B));
    if (C < base_default.CosSmallAngle) {
      eclTo.lat = Math.asin(C);
    } else {
      eclTo.lat = Math.acos(Math.hypot(A, B));
    }
    return eclTo;
  }
  /**
   * ReduceElements reduces orbital elements of a solar system body from one
   * equinox to another.
   *
   * This function is described in chapter 24, but is located in this
   * package so it can be a method of EclipticPrecessor.
   *
   * @param {Elements} eFrom
   * @returns {Elements} eTo
   */
  reduceElements(eFrom) {
    const ψ = this.π + this.p;
    const [si, ci] = base_default.sincos(eFrom.inc);
    const [snp, cnp] = base_default.sincos(eFrom.node - this.π);
    const eTo = new Elements();
    eTo.inc = Math.acos(ci * this.cη + si * this.sη * cnp);
    eTo.node = Math.atan2(si * snp, this.cη * si * cnp - this.sη * ci) + ψ;
    eTo.peri = Math.atan2(-this.sη * snp, si * this.cη - ci * this.sη * cnp) + eFrom.peri;
    return eTo;
  }
};
function eclipticPosition(eclFrom, epochFrom, epochTo, mα, mδ) {
  const p3 = new EclipticPrecessor(epochFrom, epochTo);
  if (mα && mδ && (mα.rad() !== 0 || mδ.rad() !== 0)) {
    const { lon, lat } = properMotion(mα.rad(), mδ.rad(), epochFrom, eclFrom);
    const t = epochTo - epochFrom;
    eclFrom.lon += lon * t;
    eclFrom.lat += lat * t;
  }
  return p3.precess(eclFrom);
}
function properMotion(mα, mδ, epoch3, ecl) {
  const ε = nutation_default.meanObliquity(base_default.JulianYearToJDE(epoch3));
  const [εsin, εcos] = base_default.sincos(ε);
  const { ra, dec } = ecl.toEquatorial(ε);
  const [sα, cα] = base_default.sincos(ra);
  const [sδ, cδ] = base_default.sincos(dec);
  const cβ = Math.cos(ecl.lat);
  const lon = (mδ * εsin * cα + mα * cδ * (εcos * cδ + εsin * sδ * sα)) / (cβ * cβ);
  const lat = (mδ * (εcos * cδ + εsin * sδ * sα) - mα * εsin * cα * cδ) / cβ;
  return new Ecliptic(lon, lat);
}
function properMotion3D(eqFrom, epochFrom, epochTo, r, mr, mα, mδ) {
  const [sα, cα] = base_default.sincos(eqFrom.ra);
  const [sδ, cδ] = base_default.sincos(eqFrom.dec);
  const x = r * cδ * cα;
  const y = r * cδ * sα;
  const z = r * sδ;
  const mrr = mr / r;
  const zmδ = z * mδ.rad();
  const mx = x * mrr - zmδ * cα - y * mα.rad();
  const my = y * mrr - zmδ * sα + x * mα.rad();
  const mz = z * mrr + r * mδ.rad() * cδ;
  const t = epochTo - epochFrom;
  const xp = x + t * mx;
  const yp = y + t * my;
  const zp = z + t * mz;
  const eqTo = new Equatorial();
  eqTo.ra = Math.atan2(yp, xp);
  eqTo.dec = Math.atan2(zp, Math.hypot(xp, yp));
  return eqTo;
}
var precess_default = {
  approxAnnualPrecession,
  mn,
  approxPosition,
  Precessor,
  position,
  EclipticPrecessor,
  eclipticPosition,
  properMotion,
  properMotion3D
};

// node_modules/astronomia/src/planetposition.js
function sum(t, series) {
  const coeffs = [];
  Object.keys(series).forEach((x) => {
    coeffs[x] = 0;
    let y = series[x].length - 1;
    for (y; y >= 0; y--) {
      const term = {
        a: series[x][y][0],
        b: series[x][y][1],
        c: series[x][y][2]
      };
      coeffs[x] += term.a * Math.cos(term.b + term.c * t);
    }
  });
  const res = base_default.horner(t, ...coeffs);
  return res;
}
var Planet = class {
  /**
   * VSOP87 representation of a Planet
   * @constructs Planet
   * @param {object} planet - planet data series
   * @example
   * ```js
   * // for use in browser
   * import {data} from 'astronomia'
   * const earth = new planetposition.Planet(data.vsop87Bearth)
   * ```
   */
  constructor(planet) {
    if (typeof planet !== "object")
      throw new TypeError("need planet vsop87 data");
    this.name = planet.name;
    this.type = planet.type || "B";
    this.series = planet;
  }
  /**
   * Position2000 returns ecliptic position of planets by full VSOP87 theory.
   *
   * @param {Number} jde - the date for which positions are desired.
   * @returns {Coord} Results are for the dynamical equinox and ecliptic J2000.
   *  {Number} lon - heliocentric longitude in radians.
   *  {Number} lat - heliocentric latitude in radians.
   *  {Number} range - heliocentric range in AU.
   */
  position2000(jde) {
    const T = base_default.J2000Century(jde);
    const τ = T * 0.1;
    const lon = base_default.pmod(sum(τ, this.series.L), 2 * Math.PI);
    const lat = sum(τ, this.series.B);
    const range = sum(τ, this.series.R);
    switch (this.type) {
      case "B":
        return new base_default.Coord(lon, lat, range);
      case "D": {
        const eclFrom = new coord_default.Ecliptic(lon, lat);
        const epochFrom = base_default.JDEToJulianYear(jde);
        const epochTo = 2e3;
        const eclTo = precess_default.eclipticPosition(eclFrom, epochFrom, epochTo);
        return new base_default.Coord(eclTo.lon, eclTo.lat, range);
      }
    }
  }
  /**
   * Position returns ecliptic position of planets at equinox and ecliptic of date.
   *
   * @param {Number} jde - the date for which positions are desired.
   * @returns {Coord} Results are positions consistent with those from Meeus's
   * Apendix III, that is, at equinox and ecliptic of date.
   *  {Number} lon - heliocentric longitude in radians.
   *  {Number} lat - heliocentric latitude in radians.
   *  {Number} range - heliocentric range in AU.
   */
  position(jde) {
    const T = base_default.J2000Century(jde);
    const τ = T * 0.1;
    const lon = base_default.pmod(sum(τ, this.series.L), 2 * Math.PI);
    const lat = sum(τ, this.series.B);
    const range = sum(τ, this.series.R);
    switch (this.type) {
      case "B": {
        const eclFrom = new coord_default.Ecliptic(lon, lat);
        const epochFrom = 2e3;
        const epochTo = base_default.JDEToJulianYear(jde);
        const eclTo = precess_default.eclipticPosition(eclFrom, epochFrom, epochTo);
        return new base_default.Coord(eclTo.lon, eclTo.lat, range);
      }
      case "D":
        return new base_default.Coord(lon, lat, range);
    }
  }
};
function toFK5(lon, lat, jde) {
  const T = base_default.J2000Century(jde);
  const Lp2 = lon - sexagesimal_default.angleFromDeg((1.397 + 31e-5 * T) * T);
  const [sLp, cLp] = base_default.sincos(Lp2);
  const L5 = lon + sexagesimal_default.angleFromSec(-0.09033 + 0.03916 * (cLp + sLp) * Math.tan(lat));
  const B5 = lat + sexagesimal_default.angleFromSec(0.03916 * (cLp - sLp));
  return new base_default.Coord(L5, B5);
}
var planetposition_default = {
  Planet,
  toFK5
};

// node_modules/astronomia/src/solar.js
function trueLongitude(T) {
  const L0 = base_default.horner(T, 280.46646, 36000.76983, 3032e-7) * Math.PI / 180;
  const m3 = meanAnomaly(T);
  const C = (base_default.horner(T, 1.914602, -4817e-6, -14e-6) * Math.sin(m3) + (0.019993 - 101e-6 * T) * Math.sin(2 * m3) + 289e-6 * Math.sin(3 * m3)) * Math.PI / 180;
  const lon = base_default.pmod(L0 + C, 2 * Math.PI);
  const ano = base_default.pmod(m3 + C, 2 * Math.PI);
  return { lon, ano };
}
function meanAnomaly(T) {
  return base_default.horner(T, 357.52911, 35999.05029, -1537e-7) * Math.PI / 180;
}
function eccentricity(T) {
  return base_default.horner(T, 0.016708634, -42037e-9, -1267e-10);
}
function radius(T) {
  const { lon, ano } = trueLongitude(T);
  const e = eccentricity(T);
  return 1.000001018 * (1 - e * e) / (1 + e * Math.cos(ano));
}
function apparentLongitude(T) {
  const Ω = node(T);
  const { lon, ano } = trueLongitude(T);
  return lon - 569e-5 * Math.PI / 180 - 478e-5 * Math.PI / 180 * Math.sin(Ω);
}
function node(T) {
  return 125.04 * Math.PI / 180 - 1934.136 * Math.PI / 180 * T;
}
function true2000(T) {
  let { lon, ano } = trueLongitude(T);
  lon -= 0.01397 * Math.PI / 180 * T * 100;
  return { lon, ano };
}
function trueEquatorial(jde) {
  const { lon, ano } = trueLongitude(base_default.J2000Century(jde));
  const ε = nutation_default.meanObliquity(jde);
  const [ss, cs] = base_default.sincos(lon);
  const [sε, cε] = base_default.sincos(ε);
  const ra = Math.atan2(cε * ss, cs);
  const dec = sε * ss;
  return new base_default.Coord(ra, dec);
}
function apparentEquatorial(jde) {
  const T = base_default.J2000Century(jde);
  const λ = apparentLongitude(T);
  const ε = nutation_default.meanObliquity(jde);
  const [sλ, cλ] = base_default.sincos(λ);
  const [sε, cε] = base_default.sincos(ε + 256e-5 * Math.PI / 180 * Math.cos(node(T)));
  const ra = Math.atan2(cε * sλ, cλ);
  const dec = Math.asin(sε * sλ);
  return new base_default.Coord(ra, dec);
}
function trueVSOP87(planet, jde) {
  let { lon, lat, range } = planet.position(jde);
  const s2 = lon + Math.PI;
  const λp = base_default.horner(
    base_default.J2000Century(jde),
    s2,
    -1.397 * Math.PI / 180,
    -31e-5 * Math.PI / 180
  );
  const [sλp, cλp] = base_default.sincos(λp);
  const Δβ = 0.03916 / 3600 * Math.PI / 180 * (cλp - sλp);
  lon = base_default.pmod(s2 - 0.09033 / 3600 * Math.PI / 180, 2 * Math.PI);
  lat = Δβ - lat;
  return new base_default.Coord(lon, lat, range);
}
function apparentVSOP87(planet, jde) {
  let { lon, lat, range } = trueVSOP87(planet, jde);
  const Δψ = nutation_default.nutation(jde)[0];
  const a = aberration(range);
  lon = lon + Δψ + a;
  return new base_default.Coord(lon, lat, range);
}
function apparentEquatorialVSOP87(planet, jde) {
  const { lon, lat, range } = trueVSOP87(planet, jde);
  const [Δψ, Δε] = nutation_default.nutation(jde);
  const a = aberration(range);
  const λ = lon + Δψ + a;
  const ε = nutation_default.meanObliquity(jde) + Δε;
  const { ra, dec } = new coord_default.Ecliptic(λ, lat).toEquatorial(ε);
  return new Coord(ra, dec, range);
}
function aberration(range) {
  return -20.4898 / 3600 * Math.PI / 180 / range;
}
var solar_default = {
  trueLongitude,
  true: trueLongitude,
  // BACKWARDS-COMPATIBILITY
  meanAnomaly,
  eccentricity,
  radius,
  apparentLongitude,
  true2000,
  trueEquatorial,
  apparentEquatorial,
  trueVSOP87,
  apparentVSOP87,
  apparentEquatorialVSOP87,
  aberration
};

// node_modules/astronomia/src/apparent.js
var { cos: cos2, tan: tan2 } = Math;
var κ = 20.49552 * Math.PI / 180 / 3600;

// node_modules/astronomia/src/apsis.js
var { sin: sin2, cos: cos3 } = Math;
var ck = 1 / 1325.55;
var D2R = Math.PI / 180;

// node_modules/astronomia/src/binary.js
var { atan, atan2: atan22, cos: cos4, sqrt: sqrt2, tan: tan3 } = Math;

// node_modules/astronomia/data/deltat.js
var m = {
  historic: {
    table: [44, 43, 43, 41, 40, 39, 38, 37, 37, 36, 36, 36, 37, 37, 38, 37, 36, 36, 35, 35, 34, 33, 33, 32, 32, 31, 31, 30, 30, 29, 29, 29, 29, 29, 28, 28, 27, 27, 26, 26, 25, 25, 25, 26, 26, 26, 26, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 22, 21, 21, 21, 21, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 20, 20, 20, 20, 19, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21.1, 21, 21, 21, 20.9, 20.8, 20.7, 20.6, 20.4, 20.2, 20, 19.7, 19.4, 19.1, 18.7, 18.3, 17.8, 17.4, 17, 16.8, 16.6, 16.4, 16.1, 15.9, 15.7, 15.5, 15.3, 15, 14.7, 14.5, 14.3, 14.2, 14.1, 14.1, 14.1, 13.9, 13.7, 13.6, 13.5, 13.5, 13.5, 13.5, 13.4, 13.4, 13.4, 13.4, 13.3, 13.3, 13.2, 13.2, 13.2, 13.1, 13.1, 13.1, 13, 13.2, 13.3, 13.4, 13.5, 13.6, 13.7, 13.8, 13.9, 14, 14, 14.1, 14.1, 14.1, 14.1, 14.2, 14.3, 14.4, 14.4, 14.5, 14.6, 14.6, 14.7, 14.7, 14.7, 14.8, 14.8, 14.9, 14.9, 15, 15, 15.1, 15.2, 15.3, 15.4, 15.5, 15.6, 15.6, 15.6, 15.8, 15.9, 15.9, 15.9, 15.8, 15.7, 15.8, 15.7, 15.7, 15.7, 15.8, 15.9, 16.1, 16.1, 16, 15.9, 15.9, 15.7, 15.4, 15.3, 15.4, 15.5, 15.6, 15.6, 15.6, 15.6, 15.6, 15.6, 15.6, 15.5, 15.5, 15.4, 15.3, 15.2, 15.1, 14.9, 14.8, 14.6, 14.4, 14.3, 14.2, 14.1, 14.2, 14.2, 13.9, 13.7, 13.5, 13.3, 13.1, 13, 13.2, 13.2, 13.1, 13.1, 13.2, 13.3, 13.5, 13.5, 13.4, 13.2, 13.2, 13.1, 13.1, 13, 12.8, 12.6, 12.7, 12.6, 12.3, 12, 11.9, 11.8, 11.6, 11.4, 11.2, 11.1, 11.1, 11.1, 11.1, 11.1, 11.2, 11.1, 11.1, 11.2, 11.4, 11.5, 11.3, 11.2, 11.4, 11.7, 11.9, 11.9, 11.9, 11.8, 11.7, 11.8, 11.8, 11.8, 11.7, 11.6, 11.6, 11.5, 11.5, 11.4, 11.4, 11.3, 11.3, 11.13, 11.16, 10.94, 10.72, 10.29, 10.04, 9.94, 9.91, 9.88, 9.86, 9.72, 9.67, 9.66, 9.64, 9.51, 9.4, 9.21, 9, 8.6, 8.29, 7.95, 7.73, 7.59, 7.49, 7.36, 7.26, 7.1, 7, 6.89, 6.82, 6.73, 6.64, 6.39, 6.28, 6.25, 6.27, 6.25, 6.27, 6.22, 6.24, 6.22, 6.27, 6.3, 6.36, 6.35, 6.37, 6.32, 6.33, 6.33, 6.37, 6.37, 6.41, 6.4, 6.44, 6.46, 6.51, 6.48, 6.51, 6.53, 6.58, 6.55, 6.61, 6.69, 6.8, 6.84, 6.94, 7.03, 7.13, 7.15, 7.22, 7.26, 7.3, 7.23, 7.22, 7.21, 7.2, 6.99, 6.98, 7.19, 7.36, 7.35, 7.39, 7.41, 7.45, 7.36, 7.18, 6.95, 6.72, 6.45, 6.24, 5.92, 5.59, 5.15, 4.67, 4.11, 3.52, 2.94, 2.47, 1.97, 1.52, 1.04, 0.6, 0.11, -0.34, -0.82, -1.25, -1.7, -2.08, -2.48, -2.82, -3.19, -3.5, -3.84, -4.14, -4.43, -4.59, -4.79, -4.92, -5.09, -5.24, -5.36, -5.34, -5.37, -5.32, -5.34, -5.33, -5.4, -5.47, -5.58, -5.66, -5.74, -5.68, -5.69, -5.65, -5.67, -5.68, -5.73, -5.72, -5.78, -5.79, -5.86, -5.89, -6.01, -6.13, -6.28, -6.41, -6.53, -6.49, -6.5, -6.45, -6.41, -6.26, -6.11, -5.9, -5.63, -5.13, -4.68, -4.19, -3.72, -3.21, -2.7, -2.09, -1.48, -0.75, -0.08, 0.62, 1.26, 1.95, 2.59, 3.28, 3.92, 4.61, 5.2, 5.73, 6.29, 7, 7.68, 8.45, 9.13, 9.78, 10.38, 10.99, 11.64, 12.47, 13.23, 14, 14.69, 15.38, 16, 16.64, 17.19, 17.72, 18.19, 18.67, 19.13, 19.69, 20.14, 20.54, 20.86, 21.14, 21.41, 21.78, 22.06, 22.3, 22.51, 22.79, 23.01, 23.29, 23.46, 23.55, 23.63, 23.8, 23.95, 24.25, 24.39, 24.42, 24.34, 24.22, 24.1, 24.08, 24.02, 24.04, 23.98, 23.91, 23.89, 23.95, 23.93, 23.92, 23.88, 23.94, 23.91, 23.82, 23.76, 23.87, 23.91, 23.95, 23.96, 24, 24.04, 24.2, 24.35, 24.61, 24.82, 25.09, 25.3, 25.56, 25.77, 26.05, 26.27, 26.54, 26.76, 27.04, 27.27, 27.55, 27.77, 28.03, 28.25, 28.5, 28.7, 28.95, 29.15, 29.38, 29.57, 29.8, 29.97, 30.19, 30.36, 30.57, 30.72, 30.93, 31.07, 31.24, 31.349, 31.516, 31.677, 31.923, 32.166, 32.449, 32.671, 32.919, 33.15, 33.397, 33.584, 33.804, 33.992, 34.24, 34.466, 34.731, 35.03, 35.4, 35.738, 36.147, 36.546, 36.995, 37.429, 37.879, 38.291, 38.753, 39.204, 39.707, 40.182, 40.706, 41.17, 41.686, 42.227, 42.825, 43.373, 43.959, 44.486, 44.997, 45.477, 45.983, 46.458, 46.997, 47.521, 48.034, 48.535, 49.099, 49.589, 50.102, 50.54, 50.975, 51.382, 51.81, 52.168, 52.572, 52.957, 53.434, 53.789, 54.087],
    first: 1657,
    last: 1984.5
  },
  data: {
    table: [43.4724372, 43.5648351, 43.6736863, 43.7782156, 43.8763273, 43.9562443, 44.0314956, 44.1131788, 44.1982187, 44.2951747, 44.3936471, 44.4840562, 44.5646335, 44.6425099, 44.7385767, 44.8370135, 44.9302138, 44.9986146, 45.0583549, 45.1283911, 45.2063835, 45.2980068, 45.3897017, 45.476138, 45.5632485, 45.6450189, 45.7374593, 45.8283721, 45.9132976, 45.9819705, 46.0407484, 46.1067084, 46.1825041, 46.2788561, 46.3713351, 46.4567207, 46.544486, 46.6310899, 46.7302231, 46.8283588, 46.9247443, 46.9969757, 47.0709148, 47.1450515, 47.2361542, 47.3413241, 47.4319364, 47.5213815, 47.6049313, 47.6837388, 47.7781381, 47.8770756, 47.9687104, 48.0348257, 48.0942021, 48.1608205, 48.2460028, 48.3438529, 48.4355405, 48.5344163, 48.6324506, 48.7293718, 48.8365414, 48.9353232, 49.0318781, 49.1013205, 49.1590844, 49.2285534, 49.3069683, 49.4017939, 49.4945263, 49.5861495, 49.6804907, 49.7602264, 49.8555805, 49.9489224, 50.0346777, 50.1018531, 50.1621723, 50.2260014, 50.2967905, 50.3831254, 50.4598772, 50.5387068, 50.6160484, 50.6865941, 50.7658362, 50.8453698, 50.918672, 50.9761148, 51.0278017, 51.084323, 51.1537928, 51.2318645, 51.306308, 51.3807849, 51.4526292, 51.5160394, 51.5985479, 51.680924, 51.7572854, 51.8133335, 51.8532385, 51.9014358, 51.9603433, 52.0328072, 52.0984957, 52.1667826, 52.2316418, 52.2938376, 52.3679897, 52.4465221, 52.5179552, 52.5751485, 52.6178012, 52.666816, 52.7340036, 52.8055792, 52.8792189, 52.9564838, 53.0444971, 53.126769, 53.2196749, 53.3024139, 53.3746645, 53.4335399, 53.4778015, 53.5299937, 53.5845392, 53.6522628, 53.7255844, 53.7882418, 53.8366625, 53.8829665, 53.9442904, 54.0042478, 54.0536342, 54.085644, 54.1084122, 54.1462942, 54.1913988, 54.2452023, 54.2957622, 54.3427024, 54.3910864, 54.4319877, 54.4897699, 54.545636, 54.597741, 54.6354962, 54.6532352, 54.677594, 54.7173643, 54.7740957, 54.8253023, 54.8712512, 54.916146, 54.9580535, 54.9997186, 55.047571, 55.0911778, 55.1132386, 55.132774, 55.1532423, 55.1898003, 55.2415531, 55.283803, 55.3222105, 55.3612676, 55.406262, 55.4628719, 55.5110909, 55.5523777, 55.5811877, 55.6004372, 55.626202, 55.6656271, 55.7167999, 55.7698097, 55.8196609, 55.8615028, 55.9129883, 55.9663474, 56.0220102, 56.0700015, 56.0939035, 56.110463, 56.1313736, 56.1610839, 56.2068432, 56.2582503, 56.3000349, 56.339902, 56.3789995, 56.4282839, 56.4803947, 56.5352164, 56.5697487, 56.5983102, 56.6328326, 56.6738814, 56.7332116, 56.7971596, 56.8552701, 56.9111378, 56.9754725, 57.0470772, 57.1136128, 57.173831, 57.2226068, 57.259731, 57.3072742, 57.3643368, 57.4334281, 57.5015747, 57.5653127, 57.6333396, 57.6972844, 57.7710774, 57.8407427, 57.9057801, 57.9575663, 57.9974929, 58.0425517, 58.1043319, 58.1679128, 58.2389092, 58.3091659, 58.3833021, 58.4536748, 58.5401438, 58.6227714, 58.6916662, 58.7409628, 58.7836189, 58.8405543, 58.898579, 58.9713678, 59.043837, 59.1218414, 59.2002687, 59.274737, 59.3574134, 59.4433827, 59.5242416, 59.5849787, 59.6343497, 59.6927827, 59.758805, 59.8386448, 59.9110567, 59.9844537, 60.056435, 60.123065, 60.2042185, 60.2803745, 60.3530352, 60.4011891, 60.4439959, 60.4900257, 60.5578054, 60.6324446, 60.7058569, 60.7853482, 60.8663504, 60.9386672, 61.0276757, 61.1103448, 61.1870458, 61.2453891, 61.2881024, 61.3377799, 61.4036165, 61.4760366, 61.5524599, 61.6286593, 61.6845819, 61.743306, 61.8132425, 61.8823203, 61.9496762, 61.9968743, 62.0342938, 62.0714108, 62.1202315, 62.1809508, 62.2382046, 62.2950486, 62.3506479, 62.3995381, 62.475395, 62.5463091, 62.6136031, 62.6570739, 62.6941742, 62.7383271, 62.7926305, 62.8566986, 62.9145607, 62.9658689, 63.0216632, 63.0807052, 63.1461718, 63.2052946, 63.2599441, 63.2844088, 63.2961369, 63.3126092, 63.3421622, 63.3871303, 63.4339302, 63.4673369, 63.4978642, 63.5319327, 63.5679441, 63.6104432, 63.6444291, 63.6641815, 63.6739403, 63.692603, 63.7147066, 63.7518055, 63.792717, 63.8285221, 63.8556871, 63.8803854, 63.9075025, 63.9392787, 63.9690744, 63.9798604, 63.9833077, 63.9938011, 64.0093384, 64.0399621, 64.0670429, 64.0907881, 64.1068077, 64.1282125, 64.1584211, 64.1832722, 64.2093975, 64.2116628, 64.2073173, 64.2115565, 64.2222858, 64.2499625, 64.2760973, 64.2998037, 64.3191858, 64.345013, 64.3734584, 64.3943291, 64.4151156, 64.4132064, 64.4118464, 64.4096536, 64.4167832, 64.43292, 64.4510529, 64.4734276, 64.4893377, 64.5053342, 64.5269189, 64.5470942, 64.5596729, 64.5512293, 64.5370906, 64.5359472, 64.5414947, 64.5543634, 64.5654298, 64.5736111, 64.5891142, 64.6014759, 64.6176147, 64.6374397, 64.6548674, 64.6530021, 64.6379271, 64.637161, 64.6399614, 64.6543152, 64.6723164, 64.6876311, 64.7051905, 64.7313433, 64.7575312, 64.7811143, 64.8000929, 64.7994561, 64.7876424, 64.783095, 64.7920604, 64.8096421, 64.8310888, 64.8451826, 64.8597013, 64.8849929, 64.9174991, 64.9480298, 64.9793881, 64.9894772, 65.0028155, 65.0138193, 65.0371432, 65.0772597, 65.112197, 65.1464034, 65.1832638, 65.2145358, 65.2493713, 65.2920645, 65.3279403, 65.3413366, 65.3451881, 65.34964, 65.3711307, 65.3971998, 65.4295547, 65.4573487, 65.486752, 65.5152012, 65.5449916, 65.5780768, 65.612728, 65.6287505, 65.6370091, 65.6493375, 65.6759928, 65.7096966, 65.746092, 65.7768362, 65.8024614, 65.8236695, 65.8595036, 65.8973008, 65.932291, 65.950911, 65.9534105, 65.962833, 65.9838647, 66.0146733, 66.042049, 66.0699217, 66.0961343, 66.1310116, 66.1682713, 66.2071627, 66.2355846, 66.2408549, 66.2335423, 66.2349107, 66.2441095, 66.2751123, 66.3054334, 66.3245568, 66.3405713, 66.3624433, 66.3957101, 66.428903, 66.4618675, 66.4748837, 66.4751281, 66.4828678, 66.5056165, 66.5382912, 66.5705628, 66.6030198, 66.6339689, 66.6569117, 66.6925011, 66.7288729, 66.7578719, 66.7707625, 66.7740427, 66.7846288, 66.810324, 66.840048, 66.8778601, 66.9069091, 66.944259, 66.9762508, 67.0258126, 67.0716286, 67.1100184, 67.1266401, 67.1331391, 67.145797, 67.17174, 67.2091069, 67.2459812, 67.2810383, 67.3136452, 67.3456968, 67.389003, 67.4318433, 67.4666209, 67.4858459, 67.4989147, 67.5110936, 67.5352658, 67.571103, 67.6070253, 67.6439167, 67.6765272, 67.7116693, 67.7590634, 67.8011542, 67.840213, 67.8606318, 67.8821576, 67.9120101, 67.9546462, 68.0054839, 68.051412, 68.1024205, 68.1577127, 68.2043653, 68.2664507, 68.3188171, 68.3703564, 68.3964356, 68.4094472, 68.4304611, 68.4629791, 68.507818, 68.5537018, 68.5927179, 68.6298107, 68.6670627, 68.7135208, 68.7622755, 68.8032843, 68.8244838, 68.8373427, 68.847693, 68.8688567, 68.9005814, 68.9354999, 68.9676423, 68.9875354, 69.0175527, 69.0499081, 69.0823433, 69.1070034, 69.1134027, 69.1141898, 69.1207203, 69.1355578, 69.16459, 69.1964228, 69.2201632, 69.2451564, 69.2732758, 69.3031979, 69.3325675, 69.3540507, 69.3581722, 69.3441594, 69.3376329, 69.3377424, 69.3432191, 69.3540144, 69.3611554, 69.3751703, 69.3889904, 69.4091639, 69.4264662, 69.4386335, 69.4241335, 69.3921241, 69.3693422, 69.3574782, 69.3593242, 69.3630244, 69.359334, 69.3510133, 69.3537917, 69.3582217, 69.367306, 69.3678649, 69.3514228, 69.3273414, 69.3033273, 69.2892463, 69.2880419, 69.2908014, 69.2944974, 69.2913953, 69.286149, 69.2835153, 69.2815422, 69.2806375, 69.2553511, 69.2125426, 69.1847287, 69.17207, 69.1691531, 69.173303, 69.1698064, 69.1589095, 69.1556275, 69.1672253, 69.1771384],
    first: 1973.0849315068492,
    firstYM: [1973, 2],
    last: 2023.3287671232877,
    lastYM: [2023, 5]
  },
  prediction: {
    table: [67.87818, 67.96817999999999, 68.02817999999999, 68.04818, 68.12818, 68.21817999999999, 68.26818, 68.28818, 68.36818, 68.44818, 68.50818, 68.51818, 68.59818, 68.68818, 68.73818, 68.74817999999999, 68.82818, 68.91817999999999, 68.96817999999999, 68.98818, 69.06818, 69.14818, 69.20818, 69.22818, 69.30818, 69.39818, 69.46817999999999, 69.48818, 69.57818, 69.66817999999999, 69.73818, 69.75818, 69.85817999999999, 69.95818, 70.02817999999999, 70.05818, 70.15818, 70.25818, 70.33818, 70.36818, 70.46817999999999],
    first: 2022,
    last: 2032
  }
};
var deltat_default = m;

// node_modules/astronomia/src/deltat.js
function LeapYearGregorian(y) {
  return y % 4 === 0 && y % 100 !== 0 || y % 400 === 0;
}
function deltaT(dyear) {
  let ΔT;
  if (dyear < -500) {
    ΔT = base_default.horner((dyear - 1820) * 0.01, -20, 0, 32);
  } else if (dyear < 500) {
    ΔT = base_default.horner(
      dyear * 0.01,
      10583.6,
      -1014.41,
      33.78311,
      -5.952053,
      -0.1798452,
      0.022174192,
      0.0090316521
    );
  } else if (dyear < 1600) {
    ΔT = base_default.horner(
      (dyear - 1e3) * 0.01,
      1574.2,
      -556.01,
      71.23472,
      0.319781,
      -0.8503463,
      -5050998e-9,
      0.0083572073
    );
  } else if (dyear < deltat_default.historic.first) {
    ΔT = base_default.horner(dyear - 1600, 120, -0.9808, -0.01532, 1 / 7129);
  } else if (dyear < deltat_default.data.first) {
    ΔT = interpolate(dyear, deltat_default.historic);
  } else if (dyear < deltat_default.data.last - 0.25) {
    ΔT = interpolateData(dyear, deltat_default.data);
  } else if (dyear < deltat_default.prediction.last) {
    ΔT = interpolate(dyear, deltat_default.prediction);
  } else if (dyear < 2050) {
    ΔT = base_default.horner((dyear - 2e3) / 100, 62.92, 32.217, 55.89);
  } else if (dyear < 2150) {
    ΔT = base_default.horner((dyear - 1820) / 100, -205.72, 56.28, 32);
  } else {
    const u = (dyear - 1820) / 100;
    ΔT = -20 + 32 * u * u;
  }
  return ΔT;
}
function interpolate(dyear, data2) {
  const d3 = interpolation_default.len3ForInterpolateX(
    dyear,
    data2.first,
    data2.last,
    data2.table
  );
  return d3.interpolateX(dyear);
}
function interpolateData(dyear, data2) {
  const [fyear, fmonth] = data2.firstYM;
  const { year, month, first: first2, last: last2 } = monthOfYear(dyear);
  const pos = 12 * (year - fyear) + (month - fmonth);
  const table = data2.table.slice(pos, pos + 3);
  const d3 = new interpolation_default.Len3(first2, last2, table);
  return d3.interpolateX(dyear);
}
function monthOfYear(dyear) {
  const year = dyear | 0;
  const f = dyear - year;
  const d3 = LeapYearGregorian(year) ? 1 : 0;
  const data2 = monthOfYear.data[d3];
  let month = 12;
  while (month > 0 && data2[month] > f) {
    month--;
  }
  const first2 = year + data2[month];
  const last2 = month < 11 ? year + data2[month + 2] : year + 1 + data2[(month + 2) % 12];
  return { year, month, first: first2, last: last2 };
}
monthOfYear.data = [
  [
    // non leap year
    0,
    0,
    0.08493150684921602,
    0.16164383561635987,
    0.24657534246580326,
    0.3287671232876619,
    0.4136986301368779,
    0.4958904109589639,
    0.5808219178081799,
    0.6657534246576233,
    0.747945205479482,
    0.832876712328698,
    0.915068493150784
  ],
  [
    // leap year
    0,
    0,
    0.08743169398917416,
    0.1639344262296163,
    0.24863387978143692,
    0.3306010928961314,
    0.4153005464481794,
    0.49726775956287383,
    0.5819672131146945,
    0.6666666666667425,
    0.7486338797814369,
    0.8333333333332575,
    0.9153005464481794
  ]
];
var deltat_default2 = {
  deltaT
};

// node_modules/astronomia/src/moonphase.js
var { sin: sin3, cos: cos5 } = Math;
var ck2 = 1 / 1236.85;
var D2R2 = Math.PI / 180;
var meanLunarMonth = 29.530588861;
function mean(T) {
  return base_default.horner(
    T,
    245155009766e-5,
    29.530588861 / ck2,
    15437e-8,
    -15e-8,
    73e-11
  );
}
function snap(y, q) {
  const k = (y - 2e3) * 12.3685;
  return Math.floor(k - q + 0.5) + q;
}
function meanNew(year) {
  return mean(snap(year, 0) * ck2);
}
function meanFirst(year) {
  return mean(snap(year, 0.25) * ck2);
}
function meanFull(year) {
  return mean(snap(year, 0.5) * ck2);
}
function meanLast(year) {
  return mean(snap(year, 0.75) * ck2);
}
function newMoon(year) {
  const m3 = new Mp(year, 0);
  return mean(m3.T) + m3.nfc(nc) + m3.a();
}
function first(year) {
  const m3 = new Mp(year, 0.25);
  return mean(m3.T) + m3.flc() + m3.w() + m3.a();
}
function full(year) {
  const m3 = new Mp(year, 0.5);
  return mean(m3.T) + m3.nfc(fc) + m3.a();
}
function last(year) {
  const m3 = new Mp(year, 0.75);
  return mean(m3.T) + m3.flc() - m3.w() + m3.a();
}
var Mp = class {
  constructor(y, q) {
    this.A = new Array(14);
    const k = this.k = snap(y, q);
    const T = this.T = this.k * ck2;
    this.E = base_default.horner(T, 1, -2516e-6, -74e-7);
    this.M = base_default.horner(
      T,
      2.5534 * D2R2,
      29.1053567 * D2R2 / ck2,
      -14e-7 * D2R2,
      -11e-8 * D2R2
    );
    this.M_ = base_default.horner(
      T,
      201.5643 * D2R2,
      385.81693528 * D2R2 / ck2,
      0.0107582 * D2R2,
      1238e-8 * D2R2,
      -58e-9 * D2R2
    );
    this.F = base_default.horner(
      T,
      160.7108 * D2R2,
      390.67050284 * D2R2 / ck2,
      -16118e-7 * D2R2,
      -227e-8 * D2R2,
      11e-9 * D2R2
    );
    this.Ω = base_default.horner(
      T,
      124.7746 * D2R2,
      -1.56375588 * D2R2 / ck2,
      20672e-7 * D2R2,
      215e-8 * D2R2
    );
    this.A[0] = 299.7 * D2R2 + 0.107408 * D2R2 * k - 9173e-6 * T * T;
    this.A[1] = 251.88 * D2R2 + 0.016321 * D2R2 * k;
    this.A[2] = 251.83 * D2R2 + 26.651886 * D2R2 * k;
    this.A[3] = 349.42 * D2R2 + 36.412478 * D2R2 * k;
    this.A[4] = 84.66 * D2R2 + 18.206239 * D2R2 * k;
    this.A[5] = 141.74 * D2R2 + 53.303771 * D2R2 * k;
    this.A[6] = 207.17 * D2R2 + 2.453732 * D2R2 * k;
    this.A[7] = 154.84 * D2R2 + 7.30686 * D2R2 * k;
    this.A[8] = 34.52 * D2R2 + 27.261239 * D2R2 * k;
    this.A[9] = 207.19 * D2R2 + 0.121824 * D2R2 * k;
    this.A[10] = 291.34 * D2R2 + 1.844379 * D2R2 * k;
    this.A[11] = 161.72 * D2R2 + 24.198154 * D2R2 * k;
    this.A[12] = 239.56 * D2R2 + 25.513099 * D2R2 * k;
    this.A[13] = 331.55 * D2R2 + 3.592518 * D2R2 * k;
  }
  // new or full corrections
  nfc(c) {
    const { M, M_, E, F, Ω } = this;
    return c[0] * sin3(M_) + c[1] * sin3(M) * E + c[2] * sin3(2 * M_) + c[3] * sin3(2 * F) + c[4] * sin3(M_ - M) * E + c[5] * sin3(M_ + M) * E + c[6] * sin3(2 * M) * E * E + c[7] * sin3(M_ - 2 * F) + c[8] * sin3(M_ + 2 * F) + c[9] * sin3(2 * M_ + M) * E + c[10] * sin3(3 * M_) + c[11] * sin3(M + 2 * F) * E + c[12] * sin3(M - 2 * F) * E + c[13] * sin3(2 * M_ - M) * E + c[14] * sin3(Ω) + c[15] * sin3(M_ + 2 * M) + c[16] * sin3(2 * (M_ - F)) + c[17] * sin3(3 * M) + c[18] * sin3(M_ + M - 2 * F) + c[19] * sin3(2 * (M_ + F)) + c[20] * sin3(M_ + M + 2 * F) + c[21] * sin3(M_ - M + 2 * F) + c[22] * sin3(M_ - M - 2 * F) + c[23] * sin3(3 * M_ + M) + c[24] * sin3(4 * M_);
  }
  // first or last corrections
  flc() {
    const { M, M_, E, F, Ω } = this;
    return -0.62801 * sin3(M_) + 0.17172 * sin3(M) * E + -0.01183 * sin3(M_ + M) * E + 862e-5 * sin3(2 * M_) + 804e-5 * sin3(2 * F) + 454e-5 * sin3(M_ - M) * E + 204e-5 * sin3(2 * M) * E * E + -18e-4 * sin3(M_ - 2 * F) + -7e-4 * sin3(M_ + 2 * F) + -4e-4 * sin3(3 * M_) + -34e-5 * sin3(2 * M_ - M) * E + 32e-5 * sin3(M + 2 * F) * E + 32e-5 * sin3(M - 2 * F) * E + -28e-5 * sin3(M_ + 2 * M) * E * E + 27e-5 * sin3(2 * M_ + M) * E + -17e-5 * sin3(Ω) + -5e-5 * sin3(M_ - M - 2 * F) + 4e-5 * sin3(2 * M_ + 2 * F) + -4e-5 * sin3(M_ + M + 2 * F) + 4e-5 * sin3(M_ - 2 * M) + 3e-5 * sin3(M_ + M - 2 * F) + 3e-5 * sin3(3 * M) + 2e-5 * sin3(2 * M_ - 2 * F) + 2e-5 * sin3(M_ - M + 2 * F) + -2e-5 * sin3(3 * M_ + M);
  }
  w() {
    const { M, M_, E, F } = this;
    return 306e-5 - 38e-5 * E * cos5(M) + 26e-5 * cos5(M_) - 2e-5 * (cos5(M_ - M) - cos5(M_ + M) - cos5(2 * F));
  }
  // additional corrections
  a() {
    let a = 0;
    ac.forEach((c, i) => {
      a += c * sin3(this.A[i]);
    });
    return a;
  }
};
var nc = [
  -0.4072,
  0.17241,
  0.01608,
  0.01039,
  739e-5,
  -514e-5,
  208e-5,
  -111e-5,
  -57e-5,
  56e-5,
  -42e-5,
  42e-5,
  38e-5,
  -24e-5,
  -17e-5,
  -7e-5,
  4e-5,
  4e-5,
  3e-5,
  3e-5,
  -3e-5,
  3e-5,
  -2e-5,
  -2e-5,
  2e-5
];
var fc = [
  -0.40614,
  0.17302,
  0.01614,
  0.01043,
  734e-5,
  -515e-5,
  209e-5,
  -111e-5,
  -57e-5,
  56e-5,
  -42e-5,
  42e-5,
  38e-5,
  -24e-5,
  -17e-5,
  -7e-5,
  4e-5,
  4e-5,
  3e-5,
  3e-5,
  -3e-5,
  3e-5,
  -2e-5,
  -2e-5,
  2e-5
];
var ac = [
  325e-6,
  165e-6,
  164e-6,
  126e-6,
  11e-5,
  62e-6,
  6e-5,
  56e-6,
  47e-6,
  42e-6,
  4e-5,
  37e-6,
  35e-6,
  23e-6
];
var moonphase_default = {
  meanLunarMonth,
  meanNew,
  meanFirst,
  meanFull,
  meanLast,
  newMoon,
  new: newMoon,
  // BACKWARDS-COMPATIBILITY
  first,
  full,
  last
};

// node_modules/astronomia/src/elp.js
var SEC2RAD = 1 / 3600 * Math.PI / 180;

// node_modules/astronomia/src/eqtime.js
var { cos: cos6, sin: sin4, tan: tan4 } = Math;

// node_modules/astronomia/src/illum.js
var { toDeg: toDeg2 } = base_default;
var D2R3 = Math.PI / 180;

// node_modules/astronomia/src/julian.js
var int2 = Math.trunc;
var GREGORIAN0JD = 22991605e-1;
var DAYS_OF_YEAR = [0, 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var SECS_OF_DAY = 86400;
var Calendar = class {
  /**
   * @param {number|Date} [year] - If `Date` is given then year, month, day is taken from that. Shortcut to `new Calendar().fromDate(date)`
   * @param {number} [month]
   * @param {number} [day]
   */
  constructor(year, month = 1, day = 1) {
    if (year instanceof Date) {
      this.fromDate(year);
    } else {
      this.year = year;
      this.month = month;
      this.day = day;
    }
  }
  getDate() {
    return {
      year: this.year,
      month: this.month,
      day: Math.floor(this.day)
    };
  }
  getTime() {
    const t = new sexagesimal_default.Time(this.day * SECS_OF_DAY);
    const [neg, h, m3, _s] = t.toHMS();
    let [s2, ms] = base_default.modf(_s);
    ms = Math.trunc(ms * 1e3);
    return {
      hour: h % 24,
      minute: m3,
      second: s2,
      millisecond: ms
    };
  }
  toISOString() {
    const { year, month, day } = this.getDate();
    const { hour, minute, second, millisecond } = this.getTime();
    return `${pad(year, 4)}-${pad(month)}-${pad(day)}T${pad(hour)}:${pad(minute)}:${pad(second)}.${pad(millisecond, 3)}Z`;
  }
  isGregorian() {
    return isCalendarGregorian(this.year, this.month, this.day);
  }
  /**
   * Note: Take care for dates < GREGORIAN0JD as `date` is always within the
   * proleptic Gregorian Calender
   * @param {Date} date - proleptic Gregorian date
   */
  fromDate(date) {
    this.year = date.getUTCFullYear();
    this.month = date.getUTCMonth() + 1;
    const day = date.getUTCDate();
    const hour = date.getUTCHours();
    const minute = date.getUTCMinutes();
    const second = date.getUTCSeconds();
    const ms = date.getMilliseconds();
    this.day = day + (hour + (minute + (second + ms / 1e3) / 60) / 60) / 24;
    return this;
  }
  /**
   * Note: Take care for dates < GREGORIAN0JD as `date` is always within the
   * proleptic Gregorian Calender
   * @returns {Date} proleptic Gregorian date
   */
  toDate() {
    const [day, fhour] = base_default.modf(this.day);
    const [hour, fminute] = base_default.modf(fhour * 24);
    const [minute, fsecond] = base_default.modf(fminute * 60);
    const [second, fms] = base_default.modf(fsecond * 60);
    const date = new Date(Date.UTC(
      this.year,
      this.month - 1,
      day,
      hour,
      minute,
      second,
      Math.round(fms * 1e3)
    ));
    date.setUTCFullYear(this.year);
    return date;
  }
  /**
   * converts a calendar date to decimal year
   * @returns {number} decimal year
   */
  toYear() {
    const [d3, f] = base_default.modf(this.day);
    const n = this.dayOfYear() - 1 + f;
    const days2 = this.isLeapYear() ? 366 : 365;
    const decYear = this.year + n / days2;
    return decYear;
  }
  /**
   * converts a decimal year to a calendar date
   * @param {number} year - decimal year
   */
  fromYear(year) {
    const [y, f] = base_default.modf(year);
    this.year = y;
    const days2 = this.isLeapYear() ? 366 : 365;
    const dayOfYear = base_default.round(f * days2, 5);
    let m3 = 12;
    while (m3 > 0 && DAYS_OF_YEAR[m3] > dayOfYear) {
      m3--;
    }
    this.month = m3;
    this.day = 1 + dayOfYear - DAYS_OF_YEAR[this.month];
    return this;
  }
  isLeapYear() {
    if (this.isGregorian()) {
      return LeapYearGregorian2(this.year);
    } else {
      return LeapYearJulian(this.year);
    }
  }
  toJD() {
    return CalendarToJD(this.year, this.month, this.day, !this.isGregorian());
  }
  fromJD(jd) {
    const isJulian = !isJDCalendarGregorian(jd);
    const { year, month, day } = JDToCalendar(jd, isJulian);
    this.year = year;
    this.month = month;
    this.day = day;
    return this;
  }
  fromJDE(jde) {
    this.fromJD(jde);
    const dT = deltat_default2.deltaT(this.toYear());
    this.day -= dT / 86400;
    return this;
  }
  toJDE() {
    const dT = deltat_default2.deltaT(this.toYear());
    this.day += dT / 86400;
    return this.toJD();
  }
  /**
   * set date to midnight UTC
   */
  midnight() {
    this.day = Math.floor(this.day);
    return this;
  }
  /**
   * set date to noon UTC
   */
  noon() {
    this.day = Math.floor(this.day) + 0.5;
    return this;
  }
  /**
   * @param {Boolean} td - if `true` calendar instance is in TD; date gets converted to UT
   *   true  - `UT = TD - ΔT`
   *   false - `TD = UT + ΔT`
   */
  deltaT(td) {
    const dT = deltat_default2.deltaT(this.toYear());
    if (td) {
      this.day -= dT / 86400;
    } else {
      this.day += dT / 86400;
    }
    return this;
  }
  dayOfWeek() {
    return DayOfWeek(this.toJD());
  }
  dayOfYear() {
    if (this.isGregorian()) {
      return DayOfYearGregorian(this.year, this.month, this.day);
    } else {
      return DayOfYearJulian(this.year, this.month, this.day);
    }
  }
};
var CalendarJulian = class extends Calendar {
  toJD() {
    return CalendarJulianToJD(this.year, this.month, this.day);
  }
  fromJD(jd) {
    const { year, month, day } = JDToCalendarJulian(jd);
    this.year = year;
    this.month = month;
    this.day = day;
    return this;
  }
  isLeapYear() {
    return LeapYearJulian(this.year);
  }
  dayOfYear() {
    return DayOfYearJulian(this.year, this.month, this.day);
  }
  /**
   * toGregorian converts a Julian calendar date to a year, month, and day
   * in the Gregorian calendar.
   * @returns {CalendarGregorian}
   */
  toGregorian() {
    const jd = this.toJD();
    return new CalendarGregorian().fromJD(jd);
  }
};
var CalendarGregorian = class extends Calendar {
  toJD() {
    return CalendarGregorianToJD(this.year, this.month, this.day);
  }
  fromJD(jd) {
    const { year, month, day } = JDToCalendarGregorian(jd);
    this.year = year;
    this.month = month;
    this.day = day;
    return this;
  }
  isLeapYear() {
    return LeapYearGregorian2(this.year);
  }
  dayOfYear() {
    return DayOfYearGregorian(this.year, this.month, this.day);
  }
  /*
  * toJulian converts a Gregorian calendar date to a year, month, and day
  * in the Julian calendar.
  * @returns {CalendarJulian}
  */
  toJulian() {
    const jd = this.toJD();
    return new CalendarJulian().fromJD(jd);
  }
};
function CalendarToJD(y, m3, d3, isJulian) {
  let b = 0;
  if (m3 < 3) {
    y--;
    m3 += 12;
  }
  if (!isJulian) {
    const a = base_default.floorDiv(y, 100);
    b = 2 - a + base_default.floorDiv(a, 4);
  }
  const jd = base_default.floorDiv(36525 * int2(y + 4716), 100) + (base_default.floorDiv(306 * (m3 + 1), 10) + b) + d3 - 1524.5;
  return jd;
}
function CalendarGregorianToJD(y, m3, d3) {
  return CalendarToJD(y, m3, d3, false);
}
function CalendarJulianToJD(y, m3, d3) {
  return CalendarToJD(y, m3, d3, true);
}
function LeapYearJulian(y) {
  return y % 4 === 0;
}
function LeapYearGregorian2(y) {
  return y % 4 === 0 && y % 100 !== 0 || y % 400 === 0;
}
function JDToCalendar(jd, isJulian) {
  const [z, f] = base_default.modf(jd + 0.5);
  let a = z;
  if (!isJulian) {
    const α = base_default.floorDiv(z * 100 - 186721625, 3652425);
    a = z + 1 + α - base_default.floorDiv(α, 4);
  }
  const b = a + 1524;
  const c = base_default.floorDiv(b * 100 - 12210, 36525);
  const d3 = base_default.floorDiv(36525 * c, 100);
  const e = int2(base_default.floorDiv((b - d3) * 1e4, 306001));
  let year;
  let month;
  const day = int2(b - d3) - base_default.floorDiv(306001 * e, 1e4) + f;
  if (e === 14 || e === 15) {
    month = e - 13;
  } else {
    month = e - 1;
  }
  if (month < 3) {
    year = int2(c) - 4715;
  } else {
    year = int2(c) - 4716;
  }
  return { year, month, day };
}
function JDToCalendarGregorian(jd) {
  return JDToCalendar(jd, false);
}
function JDToCalendarJulian(jd) {
  return JDToCalendar(jd, true);
}
function isJDCalendarGregorian(jd) {
  return jd >= GREGORIAN0JD;
}
function isCalendarGregorian(year, month = 1, day = 1) {
  return year > 1582 || year === 1582 && month > 10 || year === 1582 && month === 10 && day >= 15;
}
function JDToDate(jd) {
  return new CalendarGregorian().fromJD(jd).toDate();
}
function DateToJD(date) {
  return new CalendarGregorian().fromDate(date).toJD();
}
function JDEToDate(jde) {
  return new CalendarGregorian().fromJDE(jde).toDate();
}
function DateToJDE(date) {
  return new CalendarGregorian().fromDate(date).toJDE();
}
function MJDToJD(mjd) {
  return mjd + base_default.JMod;
}
function JDToMJD(jd) {
  return jd - base_default.JMod;
}
function DayOfWeek(jd) {
  return int2(jd + 1.5) % 7;
}
function DayOfYearGregorian(y, m3, d3) {
  return DayOfYear(y, m3, int2(d3), LeapYearGregorian2(y));
}
function DayOfYearJulian(y, m3, d3) {
  return DayOfYear(y, m3, int2(d3), LeapYearJulian(y));
}
function DayOfYear(y, m3, d3, leap) {
  let k = 0;
  if (leap && m3 > 1) {
    k = 1;
  }
  return k + DAYS_OF_YEAR[m3] + int2(d3);
}
function DayOfYearToCalendar(n, leap) {
  let month;
  let k = 0;
  if (leap) {
    k = 1;
  }
  for (month = 1; month <= 12; month++) {
    if (k + DAYS_OF_YEAR[month] > n) {
      month = month - 1;
      break;
    }
  }
  const day = n - k - DAYS_OF_YEAR[month];
  return { month, day };
}
function DayOfYearToCalendarGregorian(year, n) {
  const { month, day } = DayOfYearToCalendar(n, LeapYearGregorian2(year));
  return new CalendarGregorian(year, month, day);
}
function DayOfYearToCalendarJulian(year, n) {
  const { month, day } = DayOfYearToCalendar(n, LeapYearJulian(year));
  return new CalendarJulian(year, month, day);
}
function pad(num, len) {
  len = len || 2;
  const neg = num < 0 ? "-" : "";
  num = Math.abs(num);
  const padded = "0000" + num;
  return neg + padded.substr(padded.length - len, len);
}
var julian_default = {
  GREGORIAN0JD,
  Calendar,
  CalendarJulian,
  CalendarGregorian,
  CalendarToJD,
  CalendarGregorianToJD,
  CalendarJulianToJD,
  LeapYearJulian,
  LeapYearGregorian: LeapYearGregorian2,
  JDToCalendar,
  JDToCalendarGregorian,
  JDToCalendarJulian,
  isJDCalendarGregorian,
  isCalendarGregorian,
  JDToDate,
  DateToJD,
  JDEToDate,
  DateToJDE,
  MJDToJD,
  JDToMJD,
  DayOfWeek,
  DayOfYearGregorian,
  DayOfYearJulian,
  DayOfYear,
  DayOfYearToCalendar,
  DayOfYearToCalendarGregorian,
  DayOfYearToCalendarJulian
};

// node_modules/astronomia/src/moonposition.js
var { asin: asin2, sin: sin5 } = Math;
var D2R4 = Math.PI / 180;
var ta = function() {
  const ta2 = [
    [0, 0, 1, 0, 6288774, -20905355],
    [2, 0, -1, 0, 1274027, -3699111],
    [2, 0, 0, 0, 658314, -2955968],
    [0, 0, 2, 0, 213618, -569925],
    [0, 1, 0, 0, -185116, 48888],
    [0, 0, 0, 2, -114332, -3149],
    [2, 0, -2, 0, 58793, 246158],
    [2, -1, -1, 0, 57066, -152138],
    [2, 0, 1, 0, 53322, -170733],
    [2, -1, 0, 0, 45758, -204586],
    [0, 1, -1, 0, -40923, -129620],
    [1, 0, 0, 0, -34720, 108743],
    [0, 1, 1, 0, -30383, 104755],
    [2, 0, 0, -2, 15327, 10321],
    [0, 0, 1, 2, -12528, 0],
    [0, 0, 1, -2, 10980, 79661],
    [4, 0, -1, 0, 10675, -34782],
    [0, 0, 3, 0, 10034, -23210],
    [4, 0, -2, 0, 8548, -21636],
    [2, 1, -1, 0, -7888, 24208],
    [2, 1, 0, 0, -6766, 30824],
    [1, 0, -1, 0, -5163, -8379],
    [1, 1, 0, 0, 4987, -16675],
    [2, -1, 1, 0, 4036, -12831],
    [2, 0, 2, 0, 3994, -10445],
    [4, 0, 0, 0, 3861, -11650],
    [2, 0, -3, 0, 3665, 14403],
    [0, 1, -2, 0, -2689, -7003],
    [2, 0, -1, 2, -2602, 0],
    [2, -1, -2, 0, 2390, 10056],
    [1, 0, 1, 0, -2348, 6322],
    [2, -2, 0, 0, 2236, -9884],
    [0, 1, 2, 0, -2120, 5751],
    [0, 2, 0, 0, -2069, 0],
    [2, -2, -1, 0, 2048, -4950],
    [2, 0, 1, -2, -1773, 4130],
    [2, 0, 0, 2, -1595, 0],
    [4, -1, -1, 0, 1215, -3958],
    [0, 0, 2, 2, -1110, 0],
    [3, 0, -1, 0, -892, 3258],
    [2, 1, 1, 0, -810, 2616],
    [4, -1, -2, 0, 759, -1897],
    [0, 2, -1, 0, -713, -2117],
    [2, 2, -1, 0, -700, 2354],
    [2, 1, -2, 0, 691, 0],
    [2, -1, 0, -2, 596, 0],
    [4, 0, 1, 0, 549, -1423],
    [0, 0, 4, 0, 537, -1117],
    [4, -1, 0, 0, 520, -1571],
    [1, 0, -2, 0, -487, -1739],
    [2, 1, 0, -2, -399, 0],
    [0, 0, 2, -2, -381, -4421],
    [1, 1, 1, 0, 351, 0],
    [3, 0, -2, 0, -340, 0],
    [4, 0, -3, 0, 330, 0],
    [2, -1, 2, 0, 327, 0],
    [0, 2, 1, 0, -323, 1165],
    [1, 1, -1, 0, 299, 0],
    [2, 0, 3, 0, 294, 0],
    [2, 0, -1, -2, 0, 8752]
  ];
  return ta2.map((row) => {
    const o = {};
    const vals = ["d", "m", "m_", "f", "Σl", "Σr"];
    vals.forEach((D2R10, i) => {
      o[D2R10] = row[i];
    });
    return o;
  });
}();
var tb = function() {
  const tb2 = [
    [0, 0, 0, 1, 5128122],
    [0, 0, 1, 1, 280602],
    [0, 0, 1, -1, 277693],
    [2, 0, 0, -1, 173237],
    [2, 0, -1, 1, 55413],
    [2, 0, -1, -1, 46271],
    [2, 0, 0, 1, 32573],
    [0, 0, 2, 1, 17198],
    [2, 0, 1, -1, 9266],
    [0, 0, 2, -1, 8822],
    [2, -1, 0, -1, 8216],
    [2, 0, -2, -1, 4324],
    [2, 0, 1, 1, 4200],
    [2, 1, 0, -1, -3359],
    [2, -1, -1, 1, 2463],
    [2, -1, 0, 1, 2211],
    [2, -1, -1, -1, 2065],
    [0, 1, -1, -1, -1870],
    [4, 0, -1, -1, 1828],
    [0, 1, 0, 1, -1794],
    [0, 0, 0, 3, -1749],
    [0, 1, -1, 1, -1565],
    [1, 0, 0, 1, -1491],
    [0, 1, 1, 1, -1475],
    [0, 1, 1, -1, -1410],
    [0, 1, 0, -1, -1344],
    [1, 0, 0, -1, -1335],
    [0, 0, 3, 1, 1107],
    [4, 0, 0, -1, 1021],
    [4, 0, -1, 1, 833],
    [0, 0, 1, -3, 777],
    [4, 0, -2, 1, 671],
    [2, 0, 0, -3, 607],
    [2, 0, 2, -1, 596],
    [2, -1, 1, -1, 491],
    [2, 0, -2, 1, -451],
    [0, 0, 3, -1, 439],
    [2, 0, 2, 1, 422],
    [2, 0, -3, -1, 421],
    [2, 1, -1, 1, -366],
    [2, 1, 0, 1, -351],
    [4, 0, 0, 1, 331],
    [2, -1, 1, 1, 315],
    [2, -2, 0, -1, 302],
    [0, 0, 1, 3, -283],
    [2, 1, 1, -1, -229],
    [1, 1, 0, -1, 223],
    [1, 1, 0, 1, 223],
    [0, 1, -2, -1, -220],
    [2, 1, -1, -1, -220],
    [1, 0, 1, 1, -185],
    [2, -1, -2, -1, 181],
    [0, 1, 2, 1, -177],
    [4, 0, -2, -1, 176],
    [4, -1, -1, -1, 166],
    [1, 0, 1, -1, -164],
    [4, 0, 1, -1, 132],
    [1, 0, -1, -1, -119],
    [4, -1, 0, -1, 115],
    [2, -2, 0, 1, 107]
  ];
  return tb2.map((row) => {
    const o = {};
    const vals = ["d", "m", "m_", "f", "Σb"];
    vals.forEach((D2R10, i) => {
      o[D2R10] = row[i];
    });
    return o;
  });
}();

// node_modules/astronomia/src/moon.js
var { sin: sin6, cos: cos7, asin: asin3, atan2: atan23 } = Math;
var D2R5 = Math.PI / 180;
var _I = 1.54242 * D2R5;
var [sI, cI] = base_default.sincos(_I);
var lunarCoord = (η, θ) => new base_default.Coord(η * D2R5, θ * D2R5);
var selenographic = {
  archimedes: lunarCoord(-3.9, 29.7),
  aristarchus: lunarCoord(-47.5, 23.7),
  aristillus: lunarCoord(1.2, 33.9),
  aristoteles: lunarCoord(17.3, 50.1),
  arzachel: lunarCoord(-1.9, -17.7),
  autolycus: lunarCoord(1.5, 30.7),
  billy: lunarCoord(-50, -13.8),
  birt: lunarCoord(-8.5, -22.3),
  campanus: lunarCoord(-27.7, -28),
  censorinus: lunarCoord(32.7, -0.4),
  clavius: lunarCoord(-14, -58),
  copernicus: lunarCoord(-20, 9.7),
  delambre: lunarCoord(17.5, -1.9),
  dionysius: lunarCoord(17.3, 2.8),
  endymion: lunarCoord(56.4, 53.6),
  eratosthenes: lunarCoord(-11.3, 14.5),
  eudoxus: lunarCoord(16.3, 44.3),
  fracastorius: lunarCoord(33.2, -21),
  fraMauro: lunarCoord(-17, -6),
  gassendi: lunarCoord(-39.9, -17.5),
  goclenius: lunarCoord(45, -10.1),
  grimaldi: lunarCoord(-68.5, -5.8),
  harpalus: lunarCoord(-43.4, 52.6),
  horrocks: lunarCoord(5.9, -4),
  kepler: lunarCoord(-38, 8.1),
  langrenus: lunarCoord(60.9, -8.9),
  lansberg: lunarCoord(-26.6, -0.3),
  letronne: lunarCoord(-43, -10),
  macrobius: lunarCoord(46, 21.2),
  manilius: lunarCoord(9.1, 14.5),
  menelaus: lunarCoord(16, 16.3),
  messier: lunarCoord(47.6, -1.9),
  petavius: lunarCoord(61, -25),
  pico: lunarCoord(-8.8, 45.8),
  pitatus: lunarCoord(-13.5, -29.8),
  piton: lunarCoord(-0.8, 40.8),
  plato: lunarCoord(-9.2, 51.4),
  plinius: lunarCoord(23.6, 15.3),
  posidonius: lunarCoord(30, 31.9),
  proclus: lunarCoord(46.9, 16.1),
  ptolemeusA: lunarCoord(-0.8, -8.5),
  pytheas: lunarCoord(-20.6, 20.5),
  reinhold: lunarCoord(-22.8, 3.2),
  riccioli: lunarCoord(-74.3, -3.2),
  schickard: lunarCoord(-54.5, -44),
  schiller: lunarCoord(-39, -52),
  tauruntius: lunarCoord(46.5, 5.6),
  theophilus: lunarCoord(26.5, -11.4),
  timocharis: lunarCoord(-13.1, 26.7),
  tycho: lunarCoord(-11, -43.2),
  vitruvius: lunarCoord(31.3, 17.6),
  walter: lunarCoord(1, -33)
};

// node_modules/astronomia/src/moonillum.js
var D2R6 = Math.PI / 180;

// node_modules/astronomia/src/moonmaxdec.js
var p = Math.PI / 180;
var ck3 = 1 / 1336.86;
var nc2 = {
  D: 152.2029 * p,
  m: 14.8591 * p,
  m_: 4.6881 * p,
  f: 325.8867 * p,
  JDE: 24515625897e-4,
  s: 1,
  tc: [
    0.8975,
    -0.4726,
    -0.103,
    -0.0976,
    -0.0462,
    -0.0461,
    -0.0438,
    0.0162,
    -0.0157,
    0.0145,
    0.0136,
    -95e-4,
    -91e-4,
    -89e-4,
    75e-4,
    -68e-4,
    61e-4,
    -47e-4,
    -43e-4,
    -4e-3,
    -37e-4,
    31e-4,
    3e-3,
    -29e-4,
    -29e-4,
    -27e-4,
    24e-4,
    -21e-4,
    19e-4,
    18e-4,
    18e-4,
    17e-4,
    17e-4,
    -14e-4,
    13e-4,
    13e-4,
    12e-4,
    11e-4,
    -11e-4,
    1e-3,
    1e-3,
    -9e-4,
    7e-4,
    -7e-4
  ],
  dc: [
    5.1093 * p,
    0.2658 * p,
    0.1448 * p,
    -0.0322 * p,
    0.0133 * p,
    0.0125 * p,
    -0.0124 * p,
    -0.0101 * p,
    97e-4 * p,
    -87e-4 * p,
    74e-4 * p,
    67e-4 * p,
    63e-4 * p,
    6e-3 * p,
    -57e-4 * p,
    -56e-4 * p,
    52e-4 * p,
    41e-4 * p,
    -4e-3 * p,
    38e-4 * p,
    -34e-4 * p,
    -29e-4 * p,
    29e-4 * p,
    -28e-4 * p,
    -28e-4 * p,
    -23e-4 * p,
    -21e-4 * p,
    19e-4 * p,
    18e-4 * p,
    17e-4 * p,
    15e-4 * p,
    14e-4 * p,
    -12e-4 * p,
    -12e-4 * p,
    -1e-3 * p,
    -1e-3 * p,
    6e-4 * p
  ]
};
var sc = {
  D: 345.6676 * p,
  m: 1.3951 * p,
  m_: 186.21 * p,
  f: 145.1633 * p,
  JDE: 24515489289e-4,
  s: -1,
  tc: [
    -0.8975,
    -0.4726,
    -0.103,
    -0.0976,
    0.0541,
    0.0516,
    -0.0438,
    0.0112,
    0.0157,
    23e-4,
    -0.0136,
    0.011,
    91e-4,
    89e-4,
    75e-4,
    -3e-3,
    -61e-4,
    -47e-4,
    -43e-4,
    4e-3,
    -37e-4,
    -31e-4,
    3e-3,
    29e-4,
    -29e-4,
    -27e-4,
    24e-4,
    -21e-4,
    -19e-4,
    -6e-4,
    -18e-4,
    -17e-4,
    17e-4,
    14e-4,
    -13e-4,
    -13e-4,
    12e-4,
    11e-4,
    11e-4,
    1e-3,
    1e-3,
    -9e-4,
    -7e-4,
    -7e-4
  ],
  dc: [
    -5.1093 * p,
    0.2658 * p,
    -0.1448 * p,
    0.0322 * p,
    0.0133 * p,
    0.0125 * p,
    -15e-4 * p,
    0.0101 * p,
    -97e-4 * p,
    87e-4 * p,
    74e-4 * p,
    67e-4 * p,
    -63e-4 * p,
    -6e-3 * p,
    57e-4 * p,
    -56e-4 * p,
    -52e-4 * p,
    -41e-4 * p,
    -4e-3 * p,
    -38e-4 * p,
    34e-4 * p,
    -29e-4 * p,
    29e-4 * p,
    28e-4 * p,
    -28e-4 * p,
    23e-4 * p,
    21e-4 * p,
    19e-4 * p,
    18e-4 * p,
    -17e-4 * p,
    15e-4 * p,
    14e-4 * p,
    12e-4 * p,
    -12e-4 * p,
    1e-3 * p,
    -1e-3 * p,
    37e-4 * p
  ]
};

// node_modules/astronomia/src/parallax.js
var horPar = 8.794 / 3600 * Math.PI / 180;

// node_modules/astronomia/src/perihelion.js
var planetsEnum = {
  mercury: 0,
  venus: 1,
  earth: 2,
  mars: 3,
  jupiter: 4,
  saturn: 5,
  uranus: 6,
  neptune: 7,
  embary: 8
};
var mercury = planetsEnum.mercury;
var venus = planetsEnum.venus;
var earth = planetsEnum.earth;
var mars = planetsEnum.mars;
var jupiter = planetsEnum.jupiter;
var saturn = planetsEnum.saturn;
var uranus = planetsEnum.uranus;
var neptune = planetsEnum.neptune;
var embary = planetsEnum.embary;
if (typeof setImmediate !== "function") {
  const setImmediate2 = setTimeout;
}

// node_modules/astronomia/src/planetary.js
function Ca(A, B, M0, M1) {
  this.A = A;
  this.B = B;
  this.M0 = M0;
  this.M1 = M1;
}
var micA = new Ca(2451612023e-3, 115.8774771, 63.5867, 114.2088742);
var mscA = new Ca(2451554084e-3, 115.8774771, 6.4822, 114.2088742);
var vicA = new Ca(2451996706e-3, 583.921361, 82.7311, 215.513058);
var moA = new Ca(2452097382e-3, 779.936104, 181.9573, 48.705244);
var joA = new Ca(2451870628e-3, 398.884046, 318.4681, 33.140229);
var soA = new Ca(245187017e-2, 378.091904, 318.0172, 12.647487);
var scA = new Ca(2451681124e-3, 378.091904, 131.6934, 12.647487);
var uoA = new Ca(2451764317e-3, 369.656035, 213.6884, 4.333093);
var noA = new Ca(2451753122e-3, 367.486703, 202.6544, 2.194998);
function Caa(c, f) {
  this.c = c;
  this.f = f;
}
var jaa = [
  new Caa(82.74, 40.76)
];
var saa = [
  new Caa(82.74, 40.76),
  new Caa(29.86, 1181.36),
  new Caa(14.13, 590.68),
  new Caa(220.02, 1262.87)
];
var uaa = [
  new Caa(207.83, 8.51),
  new Caa(108.84, 419.96)
];
var naa = [
  new Caa(207.83, 8.51),
  new Caa(276.74, 209.98)
];

// node_modules/astronomia/src/pluto.js
function Pt(i, j, k, lA, lB, bA, bB, rA, rB) {
  this.i = i;
  this.j = j;
  this.k = k;
  this.lA = lA;
  this.lB = lB;
  this.bA = bA;
  this.bB = bB;
  this.rA = rA;
  this.rB = rB;
}
var t37 = [
  new Pt(0, 0, 1, -19.799805, 19.850055, -5.452852, -14.974862, 6.6865439, 6.8951812),
  new Pt(0, 0, 2, 0.897144, -4.954829, 3.527812, 1.67279, -1.1827535, -0.0332538),
  new Pt(0, 0, 3, 0.611149, 1.211027, -1.050748, 0.327647, 0.1593179, -0.143889),
  new Pt(0, 0, 4, -0.341243, -0.189585, 0.17869, -0.292153, -18444e-7, 0.048322),
  new Pt(0, 0, 5, 0.129287, -0.034992, 0.01865, 0.10034, -65977e-7, -85431e-7),
  new Pt(0, 0, 6, -0.038164, 0.030893, -0.030697, -0.025823, 31174e-7, -6032e-7),
  new Pt(0, 1, -1, 0.020442, -9987e-6, 4878e-6, 0.011248, -5794e-7, 22161e-7),
  new Pt(0, 1, 0, -4063e-6, -5071e-6, 226e-6, -64e-6, 4601e-7, 4032e-7),
  new Pt(0, 1, 1, -6016e-6, -3336e-6, 203e-5, -836e-6, -1729e-7, 234e-7),
  new Pt(0, 1, 2, -3956e-6, 3039e-6, 69e-6, -604e-6, -415e-7, 702e-7),
  new Pt(0, 1, 3, -667e-6, 3572e-6, -247e-6, -567e-6, 239e-7, 723e-7),
  new Pt(0, 2, -2, 1276e-6, 501e-6, -57e-6, 1e-6, 67e-7, -67e-7),
  new Pt(0, 2, -1, 1152e-6, -917e-6, -122e-6, 175e-6, 1034e-7, -451e-7),
  new Pt(0, 2, 0, 63e-5, -1277e-6, -49e-6, -164e-6, -129e-7, 504e-7),
  new Pt(1, -1, 0, 2571e-6, -459e-6, -197e-6, 199e-6, 48e-6, -231e-7),
  new Pt(1, -1, 1, 899e-6, -1449e-6, -25e-6, 217e-6, 2e-7, -441e-7),
  new Pt(1, 0, -3, -1016e-6, 1043e-6, 589e-6, -248e-6, -3359e-7, 265e-7),
  new Pt(1, 0, -2, -2343e-6, -1012e-6, -269e-6, 711e-6, 7856e-7, -7832e-7),
  new Pt(1, 0, -1, 7042e-6, 788e-6, 185e-6, 193e-6, 36e-7, 45763e-7),
  new Pt(1, 0, 0, 1199e-6, -338e-6, 315e-6, 807e-6, 8663e-7, 8547e-7),
  new Pt(1, 0, 1, 418e-6, -67e-6, -13e-5, -43e-6, -809e-7, -769e-7),
  new Pt(1, 0, 2, 12e-5, -274e-6, 5e-6, 3e-6, 263e-7, -144e-7),
  new Pt(1, 0, 3, -6e-5, -159e-6, 2e-6, 17e-6, -126e-7, 32e-7),
  new Pt(1, 0, 4, -82e-6, -29e-6, 2e-6, 5e-6, -35e-7, -16e-7),
  new Pt(1, 1, -3, -36e-6, -29e-6, 2e-6, 3e-6, -19e-7, -4e-7),
  new Pt(1, 1, -2, -4e-5, 7e-6, 3e-6, 1e-6, -15e-7, 8e-7),
  new Pt(1, 1, -1, -14e-6, 22e-6, 2e-6, -1e-6, -4e-7, 12e-7),
  new Pt(1, 1, 0, 4e-6, 13e-6, 1e-6, -1e-6, 5e-7, 6e-7),
  new Pt(1, 1, 1, 5e-6, 2e-6, 0, -1e-6, 3e-7, 1e-7),
  new Pt(1, 1, 3, -1e-6, 0, 0, 0, 6e-7, -2e-7),
  new Pt(2, 0, -6, 2e-6, 0, 0, -2e-6, 2e-7, 2e-7),
  new Pt(2, 0, -5, -4e-6, 5e-6, 2e-6, 2e-6, -2e-7, -2e-7),
  new Pt(2, 0, -4, 4e-6, -7e-6, -7e-6, 0, 14e-7, 13e-7),
  new Pt(2, 0, -3, 14e-6, 24e-6, 1e-5, -8e-6, -63e-7, 13e-7),
  new Pt(2, 0, -2, -49e-6, -34e-6, -3e-6, 2e-5, 136e-7, -236e-7),
  new Pt(2, 0, -1, 163e-6, -48e-6, 6e-6, 5e-6, 273e-7, 1065e-7),
  new Pt(2, 0, 0, 9e-6, -24e-6, 14e-6, 17e-6, 251e-7, 149e-7),
  new Pt(2, 0, 1, -4e-6, 1e-6, -2e-6, 0, -25e-7, -9e-7),
  new Pt(2, 0, 2, -3e-6, 1e-6, 0, 0, 9e-7, -2e-7),
  new Pt(2, 0, 3, 1e-6, 3e-6, 0, 0, -8e-7, 7e-7),
  new Pt(3, 0, -2, -3e-6, -1e-6, 0, 1e-6, 2e-7, -1e-6),
  new Pt(3, 0, -1, 5e-6, -3e-6, 0, 0, 19e-7, 35e-7),
  new Pt(3, 0, 0, 0, 0, 1e-6, 0, 1e-6, 3e-7)
];

// node_modules/astronomia/src/refraction.js
var { sin: sin7, tan: tan5 } = Math;
var D2R7 = Math.PI / 180;
var gt15true1 = new sexagesimal_default.Angle(false, 0, 0, 58.294).rad();
var gt15true2 = new sexagesimal_default.Angle(false, 0, 0, 0.0668).rad();
var gt15app1 = new sexagesimal_default.Angle(false, 0, 0, 58.276).rad();
var gt15app2 = new sexagesimal_default.Angle(false, 0, 0, 0.0824).rad();

// node_modules/astronomia/src/rise.js
var { acos: acos2, asin: asin4, cos: cos8, sin: sin8 } = Math;
var D2R8 = Math.PI / 180;
var errorAboveHorizon = base_default.errorCode("always above horizon", -1);
var errorBelowHorizon = base_default.errorCode("always below horizon", 1);
var meanRefraction = new sexagesimal_default.Angle(false, 0, 34, 0).rad();
var stdh0 = {
  stellar: -meanRefraction,
  solar: new sexagesimal_default.Angle(true, 0, 50, 0).rad(),
  // not containing meanRefraction
  lunar: sexagesimal_default.angleFromDeg(0.7275),
  lunarMean: sexagesimal_default.angleFromDeg(0.125)
};
function refraction(h0, corr) {
  if (!corr) {
    return h0;
  } else {
    return h0 - meanRefraction - corr;
  }
}
var stdh0Stellar = (_refraction) => refraction(stdh0.stellar, _refraction);
var Stdh0Stellar = stdh0Stellar();
var stdh0Solar = (_refraction) => refraction(stdh0.solar, _refraction);
var Stdh0Solar = stdh0Solar();
var stdh0LunarMean = (_refraction) => {
  return stdh0.lunarMean - refraction(_refraction);
};
var Stdh0LunarMean = stdh0LunarMean();

// node_modules/astronomia/src/saturnmoons.js
var d2 = Math.PI / 180;
function R4(λ, r, γ, Ω) {
  this.λ = λ || 0;
  this.r = r || 0;
  this.γ = γ || 0;
  this.Ω = Ω || 0;
}
function Qs(jde) {
  this.t1 = jde - 2411093;
  this.t2 = this.t1 / 365.25;
  this.t3 = (jde - 2433282423e-3) / 365.25 + 1950;
  this.t4 = jde - 2411368;
  this.t5 = this.t4 / 365.25;
  this.t6 = jde - 2415020;
  this.t7 = this.t6 / 36525;
  this.t8 = this.t6 / 365.25;
  this.t9 = (jde - 24420005e-1) / 365.25;
  this.t10 = jde - 2409786;
  this.t11 = this.t10 / 36525;
  this.W0 = 5.095 * d2 * (this.t3 - 1866.39);
  this.W1 = 74.4 * d2 + 32.39 * d2 * this.t2;
  this.W2 = 134.3 * d2 + 92.62 * d2 * this.t2;
  this.W3 = 42 * d2 - 0.5118 * d2 * this.t5;
  this.W4 = 276.59 * d2 + 0.5118 * d2 * this.t5;
  this.W5 = 267.2635 * d2 + 1222.1136 * d2 * this.t7;
  this.W6 = 175.4762 * d2 + 1221.5515 * d2 * this.t7;
  this.W7 = 2.4891 * d2 + 2435e-6 * d2 * this.t7;
  this.W8 = 113.35 * d2 - 0.2597 * d2 * this.t7;
  this.s1 = Math.sin(28.0817 * d2);
  this.c1 = Math.cos(28.0817 * d2);
  this.s2 = Math.sin(168.8112 * d2);
  this.c2 = Math.cos(168.8112 * d2);
  this.e1 = 0.05589 - 346e-6 * this.t7;
  this.sW0 = Math.sin(this.W0);
  this.s3W0 = Math.sin(3 * this.W0);
  this.s5W0 = Math.sin(5 * this.W0);
  this.sW1 = Math.sin(this.W1);
  this.sW2 = Math.sin(this.W2);
  this.sW3 = Math.sin(this.W3);
  this.cW3 = Math.cos(this.W3);
  this.sW4 = Math.sin(this.W4);
  this.cW4 = Math.cos(this.W4);
  this.sW7 = Math.sin(this.W7);
  this.cW7 = Math.cos(this.W7);
  return this;
}
Qs.prototype.mimas = function() {
  const r = new R4();
  const L2 = 127.64 * d2 + 381.994497 * d2 * this.t1 - 43.57 * d2 * this.sW0 - 0.72 * d2 * this.s3W0 - 0.02144 * d2 * this.s5W0;
  const p3 = 106.1 * d2 + 365.549 * d2 * this.t2;
  const M = L2 - p3;
  const C = 2.18287 * d2 * Math.sin(M) + 0.025988 * d2 * Math.sin(2 * M) + 43e-5 * d2 * Math.sin(3 * M);
  r.λ = L2 + C;
  r.r = 3.06879 / (1 + 0.01905 * Math.cos(M + C));
  r.γ = 1.563 * d2;
  r.Ω = 54.5 * d2 - 365.072 * d2 * this.t2;
  return r;
};
Qs.prototype.enceladus = function() {
  const r = new R4();
  const L2 = 200.317 * d2 + 262.7319002 * d2 * this.t1 + 0.25667 * d2 * this.sW1 + 0.20883 * d2 * this.sW2;
  const p3 = 309.107 * d2 + 123.44121 * d2 * this.t2;
  const M = L2 - p3;
  const C = 0.55577 * d2 * Math.sin(M) + 168e-5 * d2 * Math.sin(2 * M);
  r.λ = L2 + C;
  r.r = 3.94118 / (1 + 485e-5 * Math.cos(M + C));
  r.γ = 0.0262 * d2;
  r.Ω = 348 * d2 - 151.95 * d2 * this.t2;
  return r;
};
Qs.prototype.tethys = function() {
  const r = new R4();
  r.λ = 285.306 * d2 + 190.69791226 * d2 * this.t1 + 2.063 * d2 * this.sW0 + 0.03409 * d2 * this.s3W0 + 1015e-6 * d2 * this.s5W0;
  r.r = 4.880998;
  r.γ = 1.0976 * d2;
  r.Ω = 111.33 * d2 - 72.2441 * d2 * this.t2;
  return r;
};
Qs.prototype.dione = function() {
  const r = new R4();
  const L2 = 254.712 * d2 + 131.53493193 * d2 * this.t1 - 0.0215 * d2 * this.sW1 - 0.01733 * d2 * this.sW2;
  const p3 = 174.8 * d2 + 30.82 * d2 * this.t2;
  const M = L2 - p3;
  const C = 0.24717 * d2 * Math.sin(M) + 33e-5 * d2 * Math.sin(2 * M);
  r.λ = L2 + C;
  r.r = 6.24871 / (1 + 2157e-6 * Math.cos(M + C));
  r.γ = 0.0139 * d2;
  r.Ω = 232 * d2 - 30.27 * d2 * this.t2;
  return r;
};
Qs.prototype.rhea = function() {
  const pʹ = 342.7 * d2 + 10.057 * d2 * this.t2;
  const [spʹ, cpʹ] = base_default.sincos(pʹ);
  const a1 = 265e-6 * spʹ + 1e-3 * this.sW4;
  const a2 = 265e-6 * cpʹ + 1e-3 * this.cW4;
  const e = Math.hypot(a1, a2);
  const p3 = Math.atan2(a1, a2);
  const N = 345 * d2 - 10.057 * d2 * this.t2;
  const [sN, cN] = base_default.sincos(N);
  const λʹ = 359.244 * d2 + 79.6900472 * d2 * this.t1 + 0.086754 * d2 * sN;
  const i = 28.0362 * d2 + 0.346898 * d2 * cN + 0.0193 * d2 * this.cW3;
  const Ω = 168.8034 * d2 + 0.736936 * d2 * sN + 0.041 * d2 * this.sW3;
  const a = 8.725924;
  return this.subr(λʹ, p3, e, a, Ω, i);
};
Qs.prototype.subr = function(λʹ, p3, e, a, Ω, i) {
  const r = new R4();
  const M = λʹ - p3;
  const e2 = e * e;
  const e3 = e2 * e;
  const e4 = e2 * e2;
  const e5 = e3 * e2;
  const C = (2 * e - 0.25 * e3 + 0.0520833333 * e5) * Math.sin(M) + (1.25 * e2 - 0.458333333 * e4) * Math.sin(2 * M) + (1.083333333 * e3 - 0.671875 * e5) * Math.sin(3 * M) + 1.072917 * e4 * Math.sin(4 * M) + 1.142708 * e5 * Math.sin(5 * M);
  r.r = a * (1 - e2) / (1 + e * Math.cos(M + C));
  const g = Ω - 168.8112 * d2;
  const [si, ci] = base_default.sincos(i);
  const [sg, cg] = base_default.sincos(g);
  const a1 = si * sg;
  const a2 = this.c1 * si * cg - this.s1 * ci;
  r.γ = Math.asin(Math.hypot(a1, a2));
  const u = Math.atan2(a1, a2);
  r.Ω = 168.8112 * d2 + u;
  const h = this.c1 * si - this.s1 * ci * cg;
  const ψ = Math.atan2(this.s1 * sg, h);
  r.λ = λʹ + C + u - g - ψ;
  return r;
};
Qs.prototype.titan = function() {
  const L2 = 261.1582 * d2 + 22.57697855 * d2 * this.t4 + 0.074025 * d2 * this.sW3;
  const iʹ = 27.45141 * d2 + 0.295999 * d2 * this.cW3;
  const Ωʹ = 168.66925 * d2 + 0.628808 * d2 * this.sW3;
  const [siʹ, ciʹ] = base_default.sincos(iʹ);
  const [sΩʹW8, cΩʹW8] = base_default.sincos(Ωʹ - this.W8);
  const a1 = this.sW7 * sΩʹW8;
  const a2 = this.cW7 * siʹ - this.sW7 * ciʹ * cΩʹW8;
  const g0 = 102.8623 * d2;
  const ψ = Math.atan2(a1, a2);
  const s2 = Math.hypot(a1, a2);
  let g = this.W4 - Ωʹ - ψ;
  let ϖ = 0;
  const [s2g0, c2g0] = base_default.sincos(2 * g0);
  const f = () => {
    ϖ = this.W4 + 0.37515 * d2 * (Math.sin(2 * g) - s2g0);
    g = ϖ - Ωʹ - ψ;
  };
  f();
  f();
  f();
  const eʹ = 0.029092 + 19048e-8 * (Math.cos(2 * g) - c2g0);
  const qq = 2 * (this.W5 - ϖ);
  const b1 = siʹ * sΩʹW8;
  const b2 = this.cW7 * siʹ * cΩʹW8 - this.sW7 * ciʹ;
  const θ = Math.atan2(b1, b2) + this.W8;
  const [sq, cq] = base_default.sincos(qq);
  const e = eʹ + 2778797e-9 * eʹ * cq;
  const p3 = ϖ + 0.159215 * d2 * sq;
  const u = 2 * this.W5 - 2 * θ + ψ;
  const [su, cu] = base_default.sincos(u);
  const h = 0.9375 * eʹ * eʹ * sq + 0.1875 * s2 * s2 * Math.sin(2 * (this.W5 - θ));
  const λʹ = L2 - 0.254744 * d2 * (this.e1 * Math.sin(this.W6) + 0.75 * this.e1 * this.e1 * Math.sin(2 * this.W6) + h);
  const i = iʹ + 0.031843 * d2 * s2 * cu;
  const Ω = Ωʹ + 0.031843 * d2 * s2 * su / siʹ;
  const a = 20.216193;
  return this.subr(λʹ, p3, e, a, Ω, i);
};
Qs.prototype.hyperion = function() {
  const η = 92.39 * d2 + 0.5621071 * d2 * this.t6;
  const ζ = 148.19 * d2 - 19.18 * d2 * this.t8;
  const θ = 184.8 * d2 - 35.41 * d2 * this.t9;
  const θʹ = θ - 7.5 * d2;
  const as2 = 176 * d2 + 12.22 * d2 * this.t8;
  const bs = 8 * d2 + 24.44 * d2 * this.t8;
  const cs = bs + 5 * d2;
  const ϖ = 69.898 * d2 - 18.67088 * d2 * this.t8;
  const φ = 2 * (ϖ - this.W5);
  const χ = 94.9 * d2 - 2.292 * d2 * this.t8;
  const [sη, cη] = base_default.sincos(η);
  const [sζ, cζ] = base_default.sincos(ζ);
  const [s2ζ, c2ζ] = base_default.sincos(2 * ζ);
  const [s3ζ, c3ζ] = base_default.sincos(3 * ζ);
  const [sζpη, cζpη] = base_default.sincos(ζ + η);
  const [sζmη, cζmη] = base_default.sincos(ζ - η);
  const [sφ, cφ] = base_default.sincos(φ);
  const [sχ, cχ] = base_default.sincos(χ);
  const [scs, ccs] = base_default.sincos(cs);
  const a = 24.50601 - 0.08686 * cη - 166e-5 * cζpη + 175e-5 * cζmη;
  const e = 0.103458 - 4099e-6 * cη - 167e-6 * cζpη + 235e-6 * cζmη + 0.02303 * cζ - 212e-5 * c2ζ + 151e-6 * c3ζ + 13e-5 * cφ;
  const p3 = ϖ + 0.15648 * d2 * sχ - 0.4457 * d2 * sη - 0.2657 * d2 * sζpη - 0.3573 * d2 * sζmη - 12.872 * d2 * sζ + 1.668 * d2 * s2ζ - 0.2419 * d2 * s3ζ - 0.07 * d2 * sφ;
  const λʹ = 177.047 * d2 + 16.91993829 * d2 * this.t6 + 0.15648 * d2 * sχ + 9.142 * d2 * sη + 7e-3 * d2 * Math.sin(2 * η) - 0.014 * d2 * Math.sin(3 * η) + 0.2275 * d2 * sζpη + 0.2112 * d2 * sζmη - 0.26 * d2 * sζ - 98e-4 * d2 * s2ζ - 0.013 * d2 * Math.sin(as2) + 0.017 * d2 * Math.sin(bs) - 0.0303 * d2 * sφ;
  const i = 27.3347 * d2 + 0.6434886 * d2 * cχ + 0.315 * d2 * this.cW3 + 0.018 * d2 * Math.cos(θ) - 0.018 * d2 * ccs;
  const Ω = 168.6812 * d2 + 1.40136 * d2 * cχ + 0.68599 * d2 * this.sW3 - 0.0392 * d2 * scs + 0.0366 * d2 * Math.sin(θʹ);
  return this.subr(λʹ, p3, e, a, Ω, i);
};
Qs.prototype.iapetus = function() {
  const L2 = 261.1582 * d2 + 22.57697855 * d2 * this.t4;
  const ϖʹ = 91.796 * d2 + 0.562 * d2 * this.t7;
  const ψ = 4.367 * d2 - 0.195 * d2 * this.t7;
  const θ = 146.819 * d2 - 3.198 * d2 * this.t7;
  const φ = 60.47 * d2 + 1.521 * d2 * this.t7;
  const Φ = 205.055 * d2 - 2.091 * d2 * this.t7;
  const eʹ = 0.028298 + 1156e-6 * this.t11;
  const ϖ0 = 352.91 * d2 + 11.71 * d2 * this.t11;
  const μ = 76.3852 * d2 + 4.53795125 * d2 * this.t10;
  const iʹ = base_default.horner(this.t11, 18.4602 * d2, -0.9518 * d2, -0.072 * d2, 54e-4 * d2);
  const Ωʹ = base_default.horner(this.t11, 143.198 * d2, -3.919 * d2, 0.116 * d2, 8e-3 * d2);
  const l = μ - ϖ0;
  const g = ϖ0 - Ωʹ - ψ;
  const g1 = ϖ0 - Ωʹ - φ;
  const ls = this.W5 - ϖʹ;
  const gs = ϖʹ - θ;
  const lT = L2 - this.W4;
  const gT = this.W4 - Φ;
  const u1 = 2 * (l + g - ls - gs);
  const u2 = l + g1 - lT - gT;
  const u3 = l + 2 * (g - ls - gs);
  const u4 = lT + gT - g1;
  const u5 = 2 * (ls + gs);
  const [sl, cl] = base_default.sincos(l);
  const [su1, cu1] = base_default.sincos(u1);
  const [su2, cu2] = base_default.sincos(u2);
  const [su3, cu3] = base_default.sincos(u3);
  const [su4, cu4] = base_default.sincos(u4);
  const [slu2, clu2] = base_default.sincos(l + u2);
  const [sg1gT, cg1gT] = base_default.sincos(g1 - gT);
  const [su52g, cu52g] = base_default.sincos(u5 - 2 * g);
  const [su5ψ, cu5ψ] = base_default.sincos(u5 + ψ);
  const [su2φ, cu2φ] = base_default.sincos(u2 + φ);
  const [s5, c5] = base_default.sincos(l + g1 + lT + gT + φ);
  const a = 58.935028 + 4638e-6 * cu1 + 0.058222 * cu2;
  const e = eʹ - 14097e-7 * cg1gT + 3733e-7 * cu52g + 118e-6 * cu3 + 2408e-7 * cl + 2849e-7 * clu2 + 619e-6 * cu4;
  const w = 0.08077 * d2 * sg1gT + 0.02139 * d2 * su52g - 676e-5 * d2 * su3 + 0.0138 * d2 * sl + 0.01632 * d2 * slu2 + 0.03547 * d2 * su4;
  const p3 = ϖ0 + w / eʹ;
  const λʹ = μ - 0.04299 * d2 * su2 - 789e-5 * d2 * su1 - 0.06312 * d2 * Math.sin(ls) - 295e-5 * d2 * Math.sin(2 * ls) - 0.02231 * d2 * Math.sin(u5) + 65e-4 * d2 * su5ψ;
  const i = iʹ + 0.04204 * d2 * cu5ψ + 235e-5 * d2 * c5 + 36e-4 * d2 * cu2φ;
  const wʹ = 0.04204 * d2 * su5ψ + 235e-5 * d2 * s5 + 358e-5 * d2 * su2φ;
  const Ω = Ωʹ + wʹ / Math.sin(iʹ);
  return this.subr(λʹ, p3, e, a, Ω, i);
};

// node_modules/astronomia/src/solstice.js
var { abs: abs3, cos: cos9, sin: sin9 } = Math;
var D2R9 = Math.PI / 180;
var mc0 = [172113929189e-5, 365242.1374, 0.06134, 111e-5, -71e-5];
var jc0 = [172123325401e-5, 365241.72562, -0.05323, 907e-5, 25e-5];
var sc0 = [172132570455e-5, 365242.49558, -0.11677, -297e-5, 74e-5];
var dc0 = [172141439987e-5, 365242.88257, -769e-5, -933e-5, -6e-5];
var mc2 = [245162380984e-5, 365242.37404, 0.05169, -411e-5, -57e-5];
var jc2 = [245171656767e-5, 365241.62603, 325e-5, 888e-5, -3e-4];
var sc2 = [245181021715e-5, 365242.01767, -0.11575, 337e-5, 78e-5];
var dc2 = [245190005952e-5, 365242.74049, -0.06223, -823e-5, 32e-5];
var terms = function() {
  const term = [
    [485, 324.96, 1934.136],
    [203, 337.23, 32964.467],
    [199, 342.08, 20.186],
    [182, 27.85, 445267.112],
    [156, 73.14, 45036.886],
    [136, 171.52, 22518.443],
    [77, 222.54, 65928.934],
    [74, 296.72, 3034.906],
    [70, 243.58, 9037.513],
    [58, 119.81, 33718.147],
    [52, 297.17, 150.678],
    [50, 21.02, 2281.226],
    [45, 247.54, 29929.562],
    [44, 325.15, 31555.956],
    [29, 60.93, 4443.417],
    [18, 155.12, 67555.328],
    [17, 288.79, 4562.452],
    [16, 198.04, 62894.029],
    [14, 199.76, 31436.921],
    [12, 95.39, 14577.848],
    [12, 287.11, 31931.756],
    [12, 320.81, 34777.259],
    [9, 227.73, 1222.114],
    [8, 15.45, 16859.074]
  ];
  return term.map((t) => {
    return {
      a: t[0],
      b: t[1],
      c: t[2]
    };
  });
}();
function march(y) {
  if (y < 1e3) {
    return eq(y, mc0);
  }
  return eq(y - 2e3, mc2);
}
function june(y) {
  if (y < 1e3) {
    return eq(y, jc0);
  }
  return eq(y - 2e3, jc2);
}
function september(y) {
  if (y < 1e3) {
    return eq(y, sc0);
  }
  return eq(y - 2e3, sc2);
}
function december(y) {
  if (y < 1e3) {
    return eq(y, dc0);
  }
  return eq(y - 2e3, dc2);
}
function eq(y, c) {
  const J0 = base_default.horner(y * 1e-3, c);
  const T = base_default.J2000Century(J0);
  const W = 35999.373 * D2R9 * T - 2.47 * D2R9;
  const Δλ = 1 + 0.0334 * cos9(W) + 7e-4 * cos9(2 * W);
  let S = 0;
  for (let i = terms.length - 1; i >= 0; i--) {
    const t = terms[i];
    S += t.a * cos9((t.b + t.c * T) * D2R9);
  }
  return J0 + 1e-5 * S / Δλ;
}
function march2(year, planet) {
  return longitude(year, planet, 0);
}
function june2(year, planet) {
  return longitude(year, planet, Math.PI / 2);
}
function september2(year, planet) {
  return longitude(year, planet, Math.PI);
}
function december2(year, planet) {
  return longitude(year, planet, Math.PI * 3 / 2);
}
function longitude(year, planet, lon) {
  let c;
  let ct;
  if (year < 1e3) {
    ct = [mc0, jc0, sc0, dc0];
  } else {
    ct = [mc2, jc2, sc2, dc2];
    year -= 2e3;
  }
  lon = lon % (Math.PI * 2);
  if (lon < Math.PI / 2) {
    c = ct[0];
  } else if (lon < Math.PI) {
    c = ct[1];
  } else if (lon < Math.PI * 3 / 2) {
    c = ct[2];
  } else {
    c = ct[3];
  }
  return eq2(year, planet, lon, c);
}
function eq2(year, planet, lon, c) {
  let J0 = base_default.horner(year * 1e-3, c);
  for (; ; ) {
    const a = solar_default.apparentVSOP87(planet, J0);
    const c2 = 58 * sin9(lon - a.lon);
    J0 += c2;
    if (abs3(c2) < 5e-6) {
      break;
    }
  }
  return J0;
}
var solstice_default = {
  march,
  june,
  september,
  december,
  march2,
  june2,
  september2,
  december2,
  longitude
};

// node_modules/astronomia/src/sunrise.js
var stdh02 = {
  sunrise: new sexagesimal_default.Angle(true, 0, 50, 0).rad(),
  sunriseEnd: new sexagesimal_default.Angle(true, 0, 18, 0).rad(),
  twilight: new sexagesimal_default.Angle(true, 6, 0, 0).rad(),
  nauticalTwilight: new sexagesimal_default.Angle(true, 12, 0, 0).rad(),
  night: new sexagesimal_default.Angle(true, 18, 0, 0).rad(),
  goldenHour: new sexagesimal_default.Angle(false, 6, 0, 0).rad()
};

// node_modules/date-holidays-parser/src/Julian.js
var Julian = class extends CalEvent {
  inYear(year) {
    if (this.opts.year && this.opts.year !== year) {
      return this;
    }
    const cal = new julian_default.CalendarJulian(year, this.opts.month, this.opts.day).toGregorian();
    const d3 = new CalDate(cal).setOffset(this.offset);
    this.dates.push(d3);
    return this;
  }
};

// node_modules/date-holidays-parser/src/CalEventMap.js
var CalEventMap = class extends CalEvent {
  constructor(opts) {
    super(opts);
    this.calendar = {};
  }
  inYear(year) {
    if (!(this.calendar[year] && this.calendar[year + 1] && this.calendar[year - 1])) {
      return this;
    }
    for (let y = year - 1; y <= year + 1; y++) {
      const firstDays = this.calendar[y][this.opts.month - 1];
      if (!firstDays) {
        continue;
      }
      for (let i = 0; i < firstDays.length; i += 3) {
        if (this.opts.year) {
          const calYear = this.calendar.year + firstDays[i + 2];
          if (this.opts.year !== calYear) {
            continue;
          }
        }
        const d3 = new CalDate({
          year: y,
          month: firstDays[i] + 1,
          day: firstDays[i + 1]
        }).setOffset(this.opts.day - 1);
        if (d3.year === year) {
          this.dates.push(d3);
        }
      }
    }
    return this;
  }
};

// node_modules/date-holidays-parser/src/internal/hebrew-calendar.js
var calendar2 = { 1968: [null, null, null, null, null, null, [8, 23, 0], [9, 23, 0], [10, 22, 0], [11, 22, 0]], 1969: [[2, 20, 0], [3, 19, 0], [4, 18, 0], [5, 17, 0], [6, 16, 0], [7, 15, 0], [8, 13, 1], [9, 13, 1], [10, 11, 1], [11, 10, 1], [0, 20, 0], [1, 19, 0], [1, 19, 0]], 1970: [[3, 7, 1], [4, 7, 1], [5, 5, 1], [6, 5, 1], [7, 3, 1], [8, 2, 1], [9, 1, 2], [9, 31, 2], [10, 29, 2], [11, 29, 2], [0, 8, 1], [1, 7, 1], [2, 9, 1]], 1971: [[2, 27, 2], [3, 26, 2], [4, 25, 2], [5, 24, 2], [6, 23, 2], [7, 22, 2], [8, 20, 3], [9, 20, 3], [10, 19, 3], [11, 19, 3], [0, 27, 2], [1, 26, 2], [1, 26, 2]], 1972: [[2, 16, 3], [3, 15, 3], [4, 14, 3], [5, 13, 3], [6, 12, 3], [7, 11, 3], [8, 9, 4], [9, 9, 4], [10, 7, 4], [11, 6, 4], [0, 17, 3], [1, 16, 3], [1, 16, 3]], 1973: [[3, 3, 4], [4, 3, 4], [5, 1, 4], [6, 1, 4], [6, 30, 4], [7, 29, 4], [8, 27, 5], [9, 27, 5], [10, 26, 5], [11, 26, 5], [0, 4, 4], [1, 3, 4], [2, 5, 4]], 1974: [[2, 24, 5], [3, 23, 5], [4, 22, 5], [5, 21, 5], [6, 20, 5], [7, 19, 5], [8, 17, 6], [9, 17, 6], [10, 15, 6], [11, 15, 6], [0, 24, 5], [1, 23, 5], [1, 23, 5]], 1975: [[2, 13, 6], [3, 12, 6], [4, 11, 6], [5, 10, 6], [6, 9, 6], [7, 8, 6], [8, 6, 7], [9, 6, 7], [10, 5, 7], [11, 5, 7], [0, 13, 6], [1, 12, 6], [1, 12, 6]], 1976: [[3, 1, 7], [4, 1, 7], [4, 30, 7], [5, 29, 7], [6, 28, 7], [7, 27, 7], [8, 25, 8], [9, 25, 8], [10, 23, 8], [11, 22, 8], [0, 3, 7], [1, 2, 7], [2, 3, 7]], 1977: [[2, 20, 8], [3, 19, 8], [4, 18, 8], [5, 17, 8], [6, 16, 8], [7, 15, 8], [8, 13, 9], [9, 13, 9], [10, 11, 9], [11, 11, 9], [0, 20, 8], [1, 19, 8], [1, 19, 8]], 1978: [[3, 8, 9], [4, 8, 9], [5, 6, 9], [6, 6, 9], [7, 4, 9], [8, 3, 9], [9, 2, 10], [10, 1, 10], [11, 1, 10], [11, 31, 10], [0, 9, 9], [1, 8, 9], [2, 10, 9]], 1979: [[2, 29, 10], [3, 28, 10], [4, 27, 10], [5, 26, 10], [6, 25, 10], [7, 24, 10], [8, 22, 11], [9, 22, 11], [10, 21, 11], [11, 21, 11], [0, 29, 10], [1, 28, 10], [1, 28, 10]], 1980: [[2, 18, 11], [3, 17, 11], [4, 16, 11], [5, 15, 11], [6, 14, 11], [7, 13, 11], [8, 11, 12], [9, 11, 12], [10, 9, 12], [11, 8, 12], [0, 19, 11], [1, 18, 11], [1, 18, 11]], 1981: [[3, 5, 12], [4, 5, 12], [5, 3, 12], [6, 3, 12], [7, 1, 12], [7, 31, 12], [8, 29, 13], [9, 29, 13], [10, 27, 13], [11, 27, 13], [0, 6, 12], [1, 5, 12], [2, 7, 12]], 1982: [[2, 25, 13], [3, 24, 13], [4, 23, 13], [5, 22, 13], [6, 21, 13], [7, 20, 13], [8, 18, 14], [9, 18, 14], [10, 17, 14], [11, 17, 14], [0, 25, 13], [1, 24, 13], [1, 24, 13]], 1983: [[2, 15, 14], [3, 14, 14], [4, 13, 14], [5, 12, 14], [6, 11, 14], [7, 10, 14], [8, 8, 15], [9, 8, 15], [10, 7, 15], [11, 7, 15], [0, 15, 14], [1, 14, 14], [1, 14, 14]], 1984: [[3, 3, 15], [4, 3, 15], [5, 1, 15], [6, 1, 15], [6, 30, 15], [7, 29, 15], [8, 27, 16], [9, 27, 16], [10, 25, 16], [11, 25, 16], [0, 5, 15], [1, 4, 15], [2, 5, 15]], 1985: [[2, 23, 16], [3, 22, 16], [4, 21, 16], [5, 20, 16], [6, 19, 16], [7, 18, 16], [8, 16, 17], [9, 16, 17], [10, 14, 17], [11, 13, 17], [0, 23, 16], [1, 22, 16], [1, 22, 16]], 1986: [[3, 10, 17], [4, 10, 17], [5, 8, 17], [6, 8, 17], [7, 6, 17], [8, 5, 17], [9, 4, 18], [10, 3, 18], [11, 3, 18], null, [0, 11, 17], [1, 10, 17], [2, 12, 17]], 1987: [[2, 31, 18], [3, 30, 18], [4, 29, 18], [5, 28, 18], [6, 27, 18], [7, 26, 18], [8, 24, 19], [9, 24, 19], [10, 22, 19], [0, 2, 18, 11, 22, 19], [0, 31, 18], [2, 2, 18], [2, 2, 18]], 1988: [[2, 19, 19], [3, 18, 19], [4, 17, 19], [5, 16, 19], [6, 15, 19], [7, 14, 19], [8, 12, 20], [9, 12, 20], [10, 10, 20], [11, 9, 20], [0, 20, 19], [1, 19, 19], [1, 19, 19]], 1989: [[3, 6, 20], [4, 6, 20], [5, 4, 20], [6, 4, 20], [7, 2, 20], [8, 1, 20], [8, 30, 21], [9, 30, 21], [10, 29, 21], [11, 29, 21], [0, 7, 20], [1, 6, 20], [2, 8, 20]], 1990: [[2, 27, 21], [3, 26, 21], [4, 25, 21], [5, 24, 21], [6, 23, 21], [7, 22, 21], [8, 20, 22], [9, 20, 22], [10, 18, 22], [11, 18, 22], [0, 27, 21], [1, 26, 21], [1, 26, 21]], 1991: [[2, 16, 22], [3, 15, 22], [4, 14, 22], [5, 13, 22], [6, 12, 22], [7, 11, 22], [8, 9, 23], [9, 9, 23], [10, 8, 23], [11, 8, 23], [0, 16, 22], [1, 15, 22], [1, 15, 22]], 1992: [[3, 4, 23], [4, 4, 23], [5, 2, 23], [6, 2, 23], [6, 31, 23], [7, 30, 23], [8, 28, 24], [9, 28, 24], [10, 26, 24], [11, 25, 24], [0, 6, 23], [1, 5, 23], [2, 6, 23]], 1993: [[2, 23, 24], [3, 22, 24], [4, 21, 24], [5, 20, 24], [6, 19, 24], [7, 18, 24], [8, 16, 25], [9, 16, 25], [10, 15, 25], [11, 15, 25], [0, 23, 24], [1, 22, 24], [1, 22, 24]], 1994: [[2, 13, 25], [3, 12, 25], [4, 11, 25], [5, 10, 25], [6, 9, 25], [7, 8, 25], [8, 6, 26], [9, 6, 26], [10, 4, 26], [11, 4, 26], [0, 13, 25], [1, 12, 25], [1, 12, 25]], 1995: [[3, 1, 26], [4, 1, 26], [4, 30, 26], [5, 29, 26], [6, 28, 26], [7, 27, 26], [8, 25, 27], [9, 25, 27], [10, 24, 27], [11, 24, 27], [0, 2, 26], [1, 1, 26], [2, 3, 26]], 1996: [[2, 21, 27], [3, 20, 27], [4, 19, 27], [5, 18, 27], [6, 17, 27], [7, 16, 27], [8, 14, 28], [9, 14, 28], [10, 12, 28], [11, 11, 28], [0, 22, 27], [1, 21, 27], [1, 21, 27]], 1997: [[3, 8, 28], [4, 8, 28], [5, 6, 28], [6, 6, 28], [7, 4, 28], [8, 3, 28], [9, 2, 29], [10, 1, 29], [10, 30, 29], [11, 30, 29], [0, 9, 28], [1, 8, 28], [2, 10, 28]], 1998: [[2, 28, 29], [3, 27, 29], [4, 26, 29], [5, 25, 29], [6, 24, 29], [7, 23, 29], [8, 21, 30], [9, 21, 30], [10, 20, 30], [11, 20, 30], [0, 28, 29], [1, 27, 29], [1, 27, 29]], 1999: [[2, 18, 30], [3, 17, 30], [4, 16, 30], [5, 15, 30], [6, 14, 30], [7, 13, 30], [8, 11, 31], [9, 11, 31], [10, 10, 31], [11, 10, 31], [0, 18, 30], [1, 17, 30], [1, 17, 30]], 2e3: [[3, 6, 31], [4, 6, 31], [5, 4, 31], [6, 4, 31], [7, 2, 31], [8, 1, 31], [8, 30, 32], [9, 30, 32], [10, 28, 32], [11, 27, 32], [0, 8, 31], [1, 7, 31], [2, 8, 31]], 2001: [[2, 25, 32], [3, 24, 32], [4, 23, 32], [5, 22, 32], [6, 21, 32], [7, 20, 32], [8, 18, 33], [9, 18, 33], [10, 16, 33], [11, 16, 33], [0, 25, 32], [1, 24, 32], [1, 24, 32]], 2002: [[2, 14, 33], [3, 13, 33], [4, 12, 33], [5, 11, 33], [6, 10, 33], [7, 9, 33], [8, 7, 34], [9, 7, 34], [10, 6, 34], [11, 6, 34], [0, 14, 33], [1, 13, 33], [1, 13, 33]], 2003: [[3, 3, 34], [4, 3, 34], [5, 1, 34], [6, 1, 34], [6, 30, 34], [7, 29, 34], [8, 27, 35], [9, 27, 35], [10, 26, 35], [11, 26, 35], [0, 4, 34], [1, 3, 34], [2, 5, 34]], 2004: [[2, 23, 35], [3, 22, 35], [4, 21, 35], [5, 20, 35], [6, 19, 35], [7, 18, 35], [8, 16, 36], [9, 16, 36], [10, 14, 36], [11, 13, 36], [0, 24, 35], [1, 23, 35], [1, 23, 35]], 2005: [[3, 10, 36], [4, 10, 36], [5, 8, 36], [6, 8, 36], [7, 6, 36], [8, 5, 36], [9, 4, 37], [10, 3, 37], [11, 2, 37], null, [0, 11, 36], [1, 10, 36], [2, 12, 36]], 2006: [[2, 30, 37], [3, 29, 37], [4, 28, 37], [5, 27, 37], [6, 26, 37], [7, 25, 37], [8, 23, 38], [9, 23, 38], [10, 22, 38], [0, 1, 37, 11, 22, 38], [0, 30, 37], [2, 1, 37], [2, 1, 37]], 2007: [[2, 20, 38], [3, 19, 38], [4, 18, 38], [5, 17, 38], [6, 16, 38], [7, 15, 38], [8, 13, 39], [9, 13, 39], [10, 11, 39], [11, 10, 39], [0, 20, 38], [1, 19, 38], [1, 19, 38]], 2008: [[3, 6, 39], [4, 6, 39], [5, 4, 39], [6, 4, 39], [7, 2, 39], [8, 1, 39], [8, 30, 40], [9, 30, 40], [10, 28, 40], [11, 28, 40], [0, 8, 39], [1, 7, 39], [2, 8, 39]], 2009: [[2, 26, 40], [3, 25, 40], [4, 24, 40], [5, 23, 40], [6, 22, 40], [7, 21, 40], [8, 19, 41], [9, 19, 41], [10, 18, 41], [11, 18, 41], [0, 26, 40], [1, 25, 40], [1, 25, 40]], 2010: [[2, 16, 41], [3, 15, 41], [4, 14, 41], [5, 13, 41], [6, 12, 41], [7, 11, 41], [8, 9, 42], [9, 9, 42], [10, 8, 42], [11, 8, 42], [0, 16, 41], [1, 15, 41], [1, 15, 41]], 2011: [[3, 5, 42], [4, 5, 42], [5, 3, 42], [6, 3, 42], [7, 1, 42], [7, 31, 42], [8, 29, 43], [9, 29, 43], [10, 27, 43], [11, 27, 43], [0, 6, 42], [1, 5, 42], [2, 7, 42]], 2012: [[2, 24, 43], [3, 23, 43], [4, 22, 43], [5, 21, 43], [6, 20, 43], [7, 19, 43], [8, 17, 44], [9, 17, 44], [10, 15, 44], [11, 14, 44], [0, 25, 43], [1, 24, 43], [1, 24, 43]], 2013: [[2, 12, 44], [3, 11, 44], [4, 10, 44], [5, 9, 44], [6, 8, 44], [7, 7, 44], [8, 5, 45], [9, 5, 45], [10, 4, 45], [11, 4, 45], [0, 12, 44], [1, 11, 44], [1, 11, 44]], 2014: [[3, 1, 45], [4, 1, 45], [4, 30, 45], [5, 29, 45], [6, 28, 45], [7, 27, 45], [8, 25, 46], [9, 25, 46], [10, 23, 46], [11, 23, 46], [0, 2, 45], [1, 1, 45], [2, 3, 45]], 2015: [[2, 21, 46], [3, 20, 46], [4, 19, 46], [5, 18, 46], [6, 17, 46], [7, 16, 46], [8, 14, 47], [9, 14, 47], [10, 13, 47], [11, 13, 47], [0, 21, 46], [1, 20, 46], [1, 20, 46]], 2016: [[3, 9, 47], [4, 9, 47], [5, 7, 47], [6, 7, 47], [7, 5, 47], [8, 4, 47], [9, 3, 48], [10, 2, 48], [11, 1, 48], [11, 30, 48], [0, 11, 47], [1, 10, 47], [2, 11, 47]], 2017: [[2, 28, 48], [3, 27, 48], [4, 26, 48], [5, 25, 48], [6, 24, 48], [7, 23, 48], [8, 21, 49], [9, 21, 49], [10, 19, 49], [11, 19, 49], [0, 28, 48], [1, 27, 48], [1, 27, 48]], 2018: [[2, 17, 49], [3, 16, 49], [4, 15, 49], [5, 14, 49], [6, 13, 49], [7, 12, 49], [8, 10, 50], [9, 10, 50], [10, 9, 50], [11, 9, 50], [0, 17, 49], [1, 16, 49], [1, 16, 49]], 2019: [[3, 6, 50], [4, 6, 50], [5, 4, 50], [6, 4, 50], [7, 2, 50], [8, 1, 50], [8, 30, 51], [9, 30, 51], [10, 29, 51], [11, 29, 51], [0, 7, 50], [1, 6, 50], [2, 8, 50]], 2020: [[2, 26, 51], [3, 25, 51], [4, 24, 51], [5, 23, 51], [6, 22, 51], [7, 21, 51], [8, 19, 52], [9, 19, 52], [10, 17, 52], [11, 16, 52], [0, 27, 51], [1, 26, 51], [1, 26, 51]], 2021: [[2, 14, 52], [3, 13, 52], [4, 12, 52], [5, 11, 52], [6, 10, 52], [7, 9, 52], [8, 7, 53], [9, 7, 53], [10, 5, 53], [11, 5, 53], [0, 14, 52], [1, 13, 52], [1, 13, 52]], 2022: [[3, 2, 53], [4, 2, 53], [4, 31, 53], [5, 30, 53], [6, 29, 53], [7, 28, 53], [8, 26, 54], [9, 26, 54], [10, 25, 54], [11, 25, 54], [0, 3, 53], [1, 2, 53], [2, 4, 53]], 2023: [[2, 23, 54], [3, 22, 54], [4, 21, 54], [5, 20, 54], [6, 19, 54], [7, 18, 54], [8, 16, 55], [9, 16, 55], [10, 14, 55], [11, 13, 55], [0, 23, 54], [1, 22, 54], [1, 22, 54]], 2024: [[3, 9, 55], [4, 9, 55], [5, 7, 55], [6, 7, 55], [7, 5, 55], [8, 4, 55], [9, 3, 56], [10, 2, 56], [11, 2, 56], null, [0, 11, 55], [1, 10, 55], [2, 11, 55]], 2025: [[2, 30, 56], [3, 29, 56], [4, 28, 56], [5, 27, 56], [6, 26, 56], [7, 25, 56], [8, 23, 57], [9, 23, 57], [10, 21, 57], [0, 1, 56, 11, 21, 57], [0, 30, 56], [2, 1, 56], [2, 1, 56]], 2026: [[2, 19, 57], [3, 18, 57], [4, 17, 57], [5, 16, 57], [6, 15, 57], [7, 14, 57], [8, 12, 58], [9, 12, 58], [10, 11, 58], [11, 11, 58], [0, 19, 57], [1, 18, 57], [1, 18, 57]], 2027: [[3, 8, 58], [4, 8, 58], [5, 6, 58], [6, 6, 58], [7, 4, 58], [8, 3, 58], [9, 2, 59], [10, 1, 59], [11, 1, 59], [11, 31, 59], [0, 9, 58], [1, 8, 58], [2, 10, 58]], 2028: [[2, 28, 59], [3, 27, 59], [4, 26, 59], [5, 25, 59], [6, 24, 59], [7, 23, 59], [8, 21, 60], [9, 21, 60], [10, 19, 60], [11, 19, 60], [0, 29, 59], [1, 28, 59], [1, 28, 59]], 2029: [[2, 17, 60], [3, 16, 60], [4, 15, 60], [5, 14, 60], [6, 13, 60], [7, 12, 60], [8, 10, 61], [9, 10, 61], [10, 8, 61], [11, 7, 61], [0, 17, 60], [1, 16, 60], [1, 16, 60]], 2030: [[3, 4, 61], [4, 4, 61], [5, 2, 61], [6, 2, 61], [6, 31, 61], [7, 30, 61], [8, 28, 62], [9, 28, 62], [10, 27, 62], [11, 27, 62], [0, 5, 61], [1, 4, 61], [2, 6, 61]], 2031: [[2, 25, 62], [3, 24, 62], [4, 23, 62], [5, 22, 62], [6, 21, 62], [7, 20, 62], [8, 18, 63], [9, 18, 63], [10, 16, 63], [11, 16, 63], [0, 25, 62], [1, 24, 62], [1, 24, 62]], 2032: [[2, 13, 63], [3, 12, 63], [4, 11, 63], [5, 10, 63], [6, 9, 63], [7, 8, 63], [8, 6, 64], [9, 6, 64], [10, 4, 64], [11, 3, 64], [0, 14, 63], [1, 13, 63], [1, 13, 63]], 2033: [[2, 31, 64], [3, 30, 64], [4, 29, 64], [5, 28, 64], [6, 27, 64], [7, 26, 64], [8, 24, 65], [9, 24, 65], [10, 23, 65], [11, 23, 65], [0, 1, 64], [0, 31, 64], [2, 2, 64]], 2034: [[2, 21, 65], [3, 20, 65], [4, 19, 65], [5, 18, 65], [6, 17, 65], [7, 16, 65], [8, 14, 66], [9, 14, 66], [10, 13, 66], [11, 13, 66], [0, 21, 65], [1, 20, 65], [1, 20, 65]], 2035: [[3, 10, 66], [4, 10, 66], [5, 8, 66], [6, 8, 66], [7, 6, 66], [8, 5, 66], [9, 4, 67], [10, 3, 67], [11, 2, 67], null, [0, 11, 66], [1, 10, 66], [2, 12, 66]], 2036: [[2, 29, 67], [3, 28, 67], [4, 27, 67], [5, 26, 67], [6, 25, 67], [7, 24, 67], [8, 22, 68], [9, 22, 68], [10, 20, 68], [0, 1, 67, 11, 19, 68], [0, 30, 67], [1, 29, 67], [1, 29, 67]], 2037: [[2, 17, 68], [3, 16, 68], [4, 15, 68], [5, 14, 68], [6, 13, 68], [7, 12, 68], [8, 10, 69], [9, 10, 69], [10, 9, 69], [11, 9, 69], [0, 17, 68], [1, 16, 68], [1, 16, 68]], 2038: [[3, 6, 69], [4, 6, 69], [5, 4, 69], [6, 4, 69], [7, 2, 69], [8, 1, 69], [8, 30, 70], [9, 30, 70], [10, 28, 70], [11, 28, 70], [0, 7, 69], [1, 6, 69], [2, 8, 69]], 2039: [[2, 26, 70], [3, 25, 70], [4, 24, 70], [5, 23, 70], [6, 22, 70], [7, 21, 70], [8, 19, 71], [9, 19, 71], [10, 18, 71], [11, 18, 71], [0, 26, 70], [1, 25, 70], [1, 25, 70]], 2040: [[2, 15, 71], [3, 14, 71], [4, 13, 71], [5, 12, 71], [6, 11, 71], [7, 10, 71], [8, 8, 72], [9, 8, 72], [10, 6, 72], [11, 5, 72], [0, 16, 71], [1, 15, 71], [1, 15, 71]], 2041: [[3, 2, 72], [4, 2, 72], [4, 31, 72], [5, 30, 72], [6, 29, 72], [7, 28, 72], [8, 26, 73], [9, 26, 73], [10, 24, 73], [11, 24, 73], [0, 3, 72], [1, 2, 72], [2, 4, 72]], 2042: [[2, 22, 73], [3, 21, 73], [4, 20, 73], [5, 19, 73], [6, 18, 73], [7, 17, 73], [8, 15, 74], [9, 15, 74], [10, 14, 74], [11, 14, 74], [0, 22, 73], [1, 21, 73], [1, 21, 73]], 2043: [[3, 11, 74], [4, 11, 74], [5, 9, 74], [6, 9, 74], [7, 7, 74], [8, 6, 74], [9, 5, 75], [10, 4, 75], [11, 3, 75], null, [0, 12, 74], [1, 11, 74], [2, 13, 74]], 2044: [[2, 29, 75], [3, 28, 75], [4, 27, 75], [5, 26, 75], [6, 25, 75], [7, 24, 75], [8, 22, 76], [9, 22, 76], [10, 21, 76], [0, 1, 75, 11, 21, 76], [0, 30, 75], [1, 29, 75], [1, 29, 75]], 2045: [[2, 19, 76], [3, 18, 76], [4, 17, 76], [5, 16, 76], [6, 15, 76], [7, 14, 76], [8, 12, 77], [9, 12, 77], [10, 10, 77], [11, 10, 77], [0, 19, 76], [1, 18, 76], [1, 18, 76]], 2046: [[3, 7, 77], [4, 7, 77], [5, 5, 77], [6, 5, 77], [7, 3, 77], [8, 2, 77], [9, 1, 78], [9, 31, 78], [10, 30, 78], [11, 30, 78], [0, 8, 77], [1, 7, 77], [2, 9, 77]], 2047: [[2, 28, 78], [3, 27, 78], [4, 26, 78], [5, 25, 78], [6, 24, 78], [7, 23, 78], [8, 21, 79], [9, 21, 79], [10, 19, 79], [11, 18, 79], [0, 28, 78], [1, 27, 78], [1, 27, 78]], 2048: [[2, 15, 79], [3, 14, 79], [4, 13, 79], [5, 12, 79], [6, 11, 79], [7, 10, 79], [8, 8, 80], [9, 8, 80], [10, 6, 80], [11, 6, 80], [0, 16, 79], [1, 15, 79], [1, 15, 79]], 2049: [[3, 3, 80], [4, 3, 80], [5, 1, 80], [6, 1, 80], [6, 30, 80], [7, 29, 80], [8, 27, 81], [9, 27, 81], [10, 26, 81], [11, 26, 81], [0, 4, 80], [1, 3, 80], [2, 5, 80]], 2050: [[2, 24, 81], [3, 23, 81], [4, 22, 81], [5, 21, 81], [6, 20, 81], [7, 19, 81], [8, 17, 82], [9, 17, 82], [10, 16, 82], [11, 16, 82], [0, 24, 81], [1, 23, 81], [1, 23, 81]], 2051: [[2, 14, 82], [3, 13, 82], [4, 12, 82], [5, 11, 82], [6, 10, 82], [7, 9, 82], [8, 7, 83], [9, 7, 83], [10, 5, 83], [11, 4, 83], [0, 14, 82], [1, 13, 82], [1, 13, 82]], 2052: [[2, 31, 83], [3, 30, 83], [4, 29, 83], [5, 28, 83], [6, 27, 83], [7, 26, 83], [8, 24, 84], [9, 24, 84], [10, 22, 84], [11, 22, 84], [0, 2, 83], [1, 1, 83], [2, 2, 83]], 2053: [[2, 20, 84], [3, 19, 84], [4, 18, 84], [5, 17, 84], [6, 16, 84], [7, 15, 84], [8, 13, 85], [9, 13, 85], [10, 12, 85], [11, 12, 85], [0, 20, 84], [1, 19, 84], [1, 19, 84]], 2054: [[3, 9, 85], [4, 9, 85], [5, 7, 85], [6, 7, 85], [7, 5, 85], [8, 4, 85], [9, 3, 86], [10, 2, 86], [11, 2, 86], null, [0, 10, 85], [1, 9, 85], [2, 11, 85]], 2055: [[2, 30, 86], [3, 29, 86], [4, 28, 86], [5, 27, 86], [6, 26, 86], [7, 25, 86], [8, 23, 87], [9, 23, 87], [10, 21, 87], [0, 1, 86, 11, 21, 87], [0, 30, 86], [2, 1, 86], [2, 1, 86]], 2056: [[2, 18, 87], [3, 17, 87], [4, 16, 87], [5, 15, 87], [6, 14, 87], [7, 13, 87], [8, 11, 88], [9, 11, 88], [10, 9, 88], [11, 8, 88], [0, 19, 87], [1, 18, 87], [1, 18, 87]], 2057: [[3, 5, 88], [4, 5, 88], [5, 3, 88], [6, 3, 88], [7, 1, 88], [7, 31, 88], [8, 29, 89], [9, 29, 89], [10, 28, 89], [11, 28, 89], [0, 6, 88], [1, 5, 88], [2, 7, 88]], 2058: [[2, 26, 89], [3, 25, 89], [4, 24, 89], [5, 23, 89], [6, 22, 89], [7, 21, 89], [8, 19, 90], [9, 19, 90], [10, 17, 90], [11, 17, 90], [0, 26, 89], [1, 25, 89], [1, 25, 89]], 2059: [[2, 15, 90], [3, 14, 90], [4, 13, 90], [5, 12, 90], [6, 11, 90], [7, 10, 90], [8, 8, 91], [9, 8, 91], [10, 6, 91], [11, 5, 91], [0, 15, 90], [1, 14, 90], [1, 14, 90]], 2060: [[3, 1, 91], [4, 1, 91], [4, 30, 91], [5, 29, 91], [6, 28, 91], [7, 27, 91], [8, 25, 92], [9, 25, 92], [10, 24, 92], [11, 24, 92], [0, 3, 91], [1, 2, 91], [2, 3, 91]], 2061: [[2, 22, 92], [3, 21, 92], [4, 20, 92], [5, 19, 92], [6, 18, 92], [7, 17, 92], [8, 15, 93], [9, 15, 93], [10, 14, 93], [11, 14, 93], [0, 22, 92], [1, 21, 92], [1, 21, 92]], 2062: [[3, 11, 93], [4, 11, 93], [5, 9, 93], [6, 9, 93], [7, 7, 93], [8, 6, 93], [9, 5, 94], [10, 4, 94], [11, 3, 94], null, [0, 12, 93], [1, 11, 93], [2, 13, 93]], 2063: [[2, 31, 94], [3, 30, 94], [4, 29, 94], [5, 28, 94], [6, 27, 94], [7, 26, 94], [8, 24, 95], [9, 24, 95], [10, 22, 95], [0, 2, 94, 11, 21, 95], [0, 31, 94], [2, 2, 94], [2, 2, 94]], 2064: [[2, 18, 95], [3, 17, 95], [4, 16, 95], [5, 15, 95], [6, 14, 95], [7, 13, 95], [8, 11, 96], [9, 11, 96], [10, 10, 96], [11, 10, 96], [0, 19, 95], [1, 18, 95], [1, 18, 95]], 2065: [[3, 7, 96], [4, 7, 96], [5, 5, 96], [6, 5, 96], [7, 3, 96], [8, 2, 96], [9, 1, 97], [9, 31, 97], [10, 29, 97], [11, 29, 97], [0, 8, 96], [1, 7, 96], [2, 9, 96]], 2066: [[2, 27, 97], [3, 26, 97], [4, 25, 97], [5, 24, 97], [6, 23, 97], [7, 22, 97], [8, 20, 98], [9, 20, 98], [10, 19, 98], [11, 19, 98], [0, 27, 97], [1, 26, 97], [1, 26, 97]], 2067: [[2, 17, 98], [3, 16, 98], [4, 15, 98], [5, 14, 98], [6, 13, 98], [7, 12, 98], [8, 10, 99], [9, 10, 99], [10, 8, 99], [11, 7, 99], [0, 17, 98], [1, 16, 98], [1, 16, 98]], 2068: [[3, 3, 99], [4, 3, 99], [5, 1, 99], [6, 1, 99], [6, 30, 99], [7, 29, 99], [8, 27, 100], [9, 27, 100], [10, 25, 100], [11, 25, 100], [0, 5, 99], [1, 4, 99], [2, 5, 99]], 2069: [[2, 23, 100], [3, 22, 100], [4, 21, 100], [5, 20, 100], [6, 19, 100], [7, 18, 100], [8, 16, 101], [9, 16, 101], [10, 15, 101], [11, 15, 101], [0, 23, 100], [1, 22, 100], [1, 22, 100]], 2070: [[2, 13, 101], [3, 12, 101], [4, 11, 101], [5, 10, 101], [6, 9, 101], [7, 8, 101], [8, 6, 102], [9, 6, 102], [10, 4, 102], [11, 3, 102], [0, 13, 101], [1, 12, 101], [1, 12, 101]], 2071: [[2, 31, 102], [3, 30, 102], [4, 29, 102], [5, 28, 102], [6, 27, 102], [7, 26, 102], [8, 24, 103], [9, 24, 103], [10, 23, 103], [11, 23, 103], [0, 1, 102], [0, 31, 102], [2, 2, 102]], 2072: [[2, 20, 103], [3, 19, 103], [4, 18, 103], [5, 17, 103], [6, 16, 103], [7, 15, 103], [8, 13, 104], [9, 13, 104], [10, 11, 104], [11, 11, 104], [0, 21, 103], [1, 20, 103], [1, 20, 103]], 2073: [[3, 8, 104], [4, 8, 104], [5, 6, 104], [6, 6, 104], [7, 4, 104], [8, 3, 104], [9, 2, 105], [10, 1, 105], [11, 1, 105], [11, 31, 105], [0, 9, 104], [1, 8, 104], [2, 10, 104]], 2074: [[2, 29, 105], [3, 28, 105], [4, 27, 105], [5, 26, 105], [6, 25, 105], [7, 24, 105], [8, 22, 106], [9, 22, 106], [10, 20, 106], [11, 19, 106], [0, 29, 105], [1, 28, 105], [1, 28, 105]], 2075: [[2, 17, 106], [3, 16, 106], [4, 15, 106], [5, 14, 106], [6, 13, 106], [7, 12, 106], [8, 10, 107], [9, 10, 107], [10, 8, 107], [11, 8, 107], [0, 17, 106], [1, 16, 106], [1, 16, 106]], 2076: [[3, 4, 107], [4, 4, 107], [5, 2, 107], [6, 2, 107], [6, 31, 107], [7, 30, 107], [8, 28, 108], [9, 28, 108], [10, 27, 108], [11, 27, 108], [0, 6, 107], [1, 5, 107], [2, 6, 107]], 2077: [[2, 25, 108], [3, 24, 108], [4, 23, 108], [5, 22, 108], [6, 21, 108], [7, 20, 108], [8, 18, 109], [9, 18, 109], [10, 17, 109], [11, 17, 109], [0, 25, 108], [1, 24, 108], [1, 24, 108]], 2078: [[2, 15, 109], [3, 14, 109], [4, 13, 109], [5, 12, 109], [6, 11, 109], [7, 10, 109], [8, 8, 110], [9, 8, 110], [10, 6, 110], [11, 5, 110], [0, 15, 109], [1, 14, 109], [1, 14, 109]], 2079: [[3, 2, 110], [4, 2, 110], [4, 31, 110], [5, 30, 110], [6, 29, 110], [7, 28, 110], [8, 26, 111], [9, 26, 111], [10, 24, 111], [11, 24, 111], [0, 3, 110], [1, 2, 110], [2, 4, 110]], 2080: [[2, 21, 111], [3, 20, 111], [4, 19, 111], [5, 18, 111], [6, 17, 111], [7, 16, 111], [8, 14, 112], [9, 14, 112], [10, 13, 112], [11, 13, 112], [0, 22, 111], [1, 21, 111], [1, 21, 111]], 2081: [[3, 10, 112], [4, 10, 112], [5, 8, 112], [6, 8, 112], [7, 6, 112], [8, 5, 112], [9, 4, 113], [10, 3, 113], [11, 3, 113], null, [0, 11, 112], [1, 10, 112], [2, 12, 112]], 2082: [[2, 31, 113], [3, 30, 113], [4, 29, 113], [5, 28, 113], [6, 27, 113], [7, 26, 113], [8, 24, 114], [9, 24, 114], [10, 22, 114], [0, 2, 113, 11, 22, 114], [0, 31, 113], [2, 2, 113], [2, 2, 113]], 2083: [[2, 20, 114], [3, 19, 114], [4, 18, 114], [5, 17, 114], [6, 16, 114], [7, 15, 114], [8, 13, 115], [9, 13, 115], [10, 11, 115], [11, 10, 115], [0, 20, 114], [1, 19, 114], [1, 19, 114]], 2084: [[3, 6, 115], [4, 6, 115], [5, 4, 115], [6, 4, 115], [7, 2, 115], [8, 1, 115], [8, 30, 116], [9, 30, 116], [10, 29, 116], [11, 29, 116], [0, 8, 115], [1, 7, 115], [2, 8, 115]], 2085: [[2, 27, 116], [3, 26, 116], [4, 25, 116], [5, 24, 116], [6, 23, 116], [7, 22, 116], [8, 20, 117], [9, 20, 117], [10, 18, 117], [11, 18, 117], [0, 27, 116], [1, 26, 116], [1, 26, 116]], 2086: [[2, 16, 117], [3, 15, 117], [4, 14, 117], [5, 13, 117], [6, 12, 117], [7, 11, 117], [8, 9, 118], [9, 9, 118], [10, 7, 118], [11, 6, 118], [0, 16, 117], [1, 15, 117], [1, 15, 117]], 2087: [[3, 3, 118], [4, 3, 118], [5, 1, 118], [6, 1, 118], [6, 30, 118], [7, 29, 118], [8, 27, 119], [9, 27, 119], [10, 26, 119], [11, 26, 119], [0, 4, 118], [1, 3, 118], [2, 5, 118]], 2088: [[2, 23, 119], [3, 22, 119], [4, 21, 119], [5, 20, 119], [6, 19, 119], [7, 18, 119], [8, 16, 120], [9, 16, 120], [10, 14, 120], [11, 14, 120], [0, 24, 119], [1, 23, 119], [1, 23, 119]], 2089: [[2, 12, 120], [3, 11, 120], [4, 10, 120], [5, 9, 120], [6, 8, 120], [7, 7, 120], [8, 5, 121], [9, 5, 121], [10, 4, 121], [11, 4, 121], [0, 12, 120], [1, 11, 120], [1, 11, 120]], 2090: [[3, 1, 121], [4, 1, 121], [4, 30, 121], [5, 29, 121], [6, 28, 121], [7, 27, 121], [8, 25, 122], [9, 25, 122], [10, 23, 122], [11, 22, 122], [0, 2, 121], [1, 1, 121], [2, 3, 121]], 2091: [[2, 20, 122], [3, 19, 122], [4, 18, 122], [5, 17, 122], [6, 16, 122], [7, 15, 122], [8, 13, 123], [9, 13, 123], [10, 12, 123], [11, 12, 123], [0, 20, 122], [1, 19, 122], [1, 19, 122]], 2092: [[3, 8, 123], [4, 8, 123], [5, 6, 123], [6, 6, 123], [7, 4, 123], [8, 3, 123], [9, 2, 124], [10, 1, 124], [10, 30, 124], [11, 30, 124], [0, 10, 123], [1, 9, 123], [2, 10, 123]], 2093: [[2, 28, 124], [3, 27, 124], [4, 26, 124], [5, 25, 124], [6, 24, 124], [7, 23, 124], [8, 21, 125], [9, 21, 125], [10, 20, 125], [11, 20, 125], [0, 28, 124], [1, 27, 124], [1, 27, 124]], 2094: [[2, 18, 125], [3, 17, 125], [4, 16, 125], [5, 15, 125], [6, 14, 125], [7, 13, 125], [8, 11, 126], [9, 11, 126], [10, 9, 126], [11, 8, 126], [0, 18, 125], [1, 17, 125], [1, 17, 125]], 2095: [[3, 5, 126], [4, 5, 126], [5, 3, 126], [6, 3, 126], [7, 1, 126], [7, 31, 126], [8, 29, 127], [9, 29, 127], [10, 27, 127], [11, 27, 127], [0, 6, 126], [1, 5, 126], [2, 7, 126]], 2096: [[2, 24, 127], [3, 23, 127], [4, 22, 127], [5, 21, 127], [6, 20, 127], [7, 19, 127], [8, 17, 128], [9, 17, 128], [10, 16, 128], [11, 16, 128], [0, 25, 127], [1, 24, 127], [1, 24, 127]], 2097: [[2, 14, 128], [3, 13, 128], [4, 12, 128], [5, 11, 128], [6, 10, 128], [7, 9, 128], [8, 7, 129], [9, 7, 129], [10, 6, 129], [11, 6, 129], [0, 14, 128], [1, 13, 128], [1, 13, 128]], 2098: [[3, 3, 129], [4, 3, 129], [5, 1, 129], [6, 1, 129], [6, 30, 129], [7, 29, 129], [8, 27, 130], [9, 27, 130], [10, 25, 130], [11, 24, 130], [0, 4, 129], [1, 3, 129], [2, 5, 129]], 2099: [[2, 22, 130], [3, 21, 130], [4, 20, 130], [5, 19, 130], [6, 18, 130], [7, 17, 130], [8, 15, 131], [9, 15, 131], [10, 13, 131], [11, 13, 131], [0, 22, 130], [1, 21, 130], [1, 21, 130]], 2100: [[3, 10, 131], [4, 10, 131], [5, 8, 131], [6, 8, 131], [7, 6, 131], [8, 5, 131], null, null, null, null, [0, 11, 131], [1, 10, 131], [2, 12, 131]], months: 13, year: 5729 };

// node_modules/date-holidays-parser/src/Hebrew.js
var Hebrew = class extends CalEventMap {
  constructor(opts) {
    super(opts);
    this.calendar = calendar2;
  }
  get(timezone) {
    const arr = this.dates.map((date) => {
      const cdate = new CalDate(date);
      const o = {
        date: cdate.toString() + " -0600",
        start: cdate.setOffset(-6, "h").toTimezone(timezone),
        end: cdate.toEndDate().toTimezone(timezone)
      };
      this._addSubstitute(date, o);
      return o;
    });
    return arr;
  }
};

// node_modules/date-holidays-parser/src/internal/hijri-calendar.js
var calendar3 = { 1969: [[2, 19, 0], [3, 18, 0], [4, 17, 0], [5, 16, 0], [6, 15, 0], [7, 14, 0], [8, 12, 0], [9, 12, 0], [10, 10, 0], [11, 10, 0]], 1970: [[2, 9, 1], [3, 8, 1], [4, 7, 1], [5, 6, 1], [6, 5, 1], [7, 4, 1], [8, 2, 1], [9, 2, 1], [10, 1, 1], [10, 30, 1], [0, 8, 0, 11, 30, 1], [1, 7, 0]], 1971: [[1, 26, 2], [2, 28, 2], [3, 26, 2], [4, 26, 2], [5, 24, 2], [6, 24, 2], [7, 22, 2], [8, 21, 2], [9, 20, 2], [10, 19, 2], [11, 18, 2], [0, 28, 1]], 1972: [[1, 16, 3], [2, 16, 3], [3, 14, 3], [4, 14, 3], [5, 12, 3], [6, 12, 3], [7, 10, 3], [8, 9, 3], [9, 8, 3], [10, 7, 3], [11, 6, 3], [0, 17, 2]], 1973: [[1, 4, 4], [2, 6, 4], [3, 4, 4], [4, 4, 4], [5, 2, 4], [6, 1, 4], [6, 30, 4], [7, 29, 4], [8, 27, 4], [9, 27, 4], [10, 25, 4], [0, 5, 3, 11, 25, 4]], 1974: [[0, 24, 5], [1, 23, 5], [2, 24, 5], [3, 23, 5], [4, 22, 5], [5, 21, 5], [6, 20, 5], [7, 19, 5], [8, 17, 5], [9, 16, 5], [10, 15, 5], [11, 15, 5]], 1975: [[0, 13, 6], [1, 12, 6], [2, 13, 6], [3, 12, 6], [4, 12, 6], [5, 10, 6], [6, 10, 6], [7, 8, 6], [8, 6, 6], [9, 6, 6], [10, 4, 6], [11, 4, 6]], 1976: [[0, 2, 7, 11, 22, 8], [1, 1, 7], [2, 1, 7], [2, 31, 7], [3, 30, 7], [4, 30, 7], [5, 28, 7], [6, 28, 7], [7, 26, 7], [8, 24, 7], [9, 24, 7], [10, 22, 7]], 1977: [[11, 11, 9], [0, 20, 8], [1, 19, 8], [2, 20, 8], [3, 19, 8], [4, 19, 8], [5, 17, 8], [6, 17, 8], [7, 15, 8], [8, 14, 8], [9, 13, 8], [10, 12, 8]], 1978: [[11, 1, 10], [0, 10, 9, 11, 30, 10], [1, 8, 9], [2, 10, 9], [3, 8, 9], [4, 8, 9], [5, 6, 9], [6, 6, 9], [7, 5, 9], [8, 3, 9], [9, 3, 9], [10, 1, 9]], 1979: [[10, 20, 11], [11, 20, 11], [0, 29, 10], [1, 27, 10], [2, 29, 10], [3, 27, 10], [4, 27, 10], [5, 25, 10], [6, 25, 10], [7, 23, 10], [8, 22, 10], [9, 22, 10]], 1980: [[10, 9, 12], [11, 8, 12], [0, 19, 11], [1, 17, 11], [2, 18, 11], [3, 16, 11], [4, 15, 11], [5, 14, 11], [6, 13, 11], [7, 12, 11], [8, 10, 11], [9, 10, 11]], 1981: [[9, 28, 13], [10, 27, 13], [0, 7, 12, 11, 27, 13], [1, 5, 12], [2, 7, 12], [3, 5, 12], [4, 5, 12], [5, 3, 12], [6, 2, 12], [7, 1, 12], [7, 30, 12], [8, 29, 12]], 1982: [[9, 18, 14], [10, 16, 14], [11, 16, 14], [0, 26, 13], [1, 24, 13], [2, 26, 13], [3, 24, 13], [4, 24, 13], [5, 22, 13], [6, 21, 13], [7, 20, 13], [8, 18, 13]], 1983: [[9, 7, 15], [10, 5, 15], [11, 5, 15], [0, 15, 14], [1, 14, 14], [2, 15, 14], [3, 14, 14], [4, 13, 14], [5, 12, 14], [6, 11, 14], [7, 9, 14], [8, 8, 14]], 1984: [[8, 26, 16], [9, 25, 16], [10, 23, 16], [0, 4, 15, 11, 23, 16], [1, 2, 15], [2, 3, 15], [3, 2, 15], [4, 2, 15], [4, 31, 15], [5, 30, 15], [6, 29, 15], [7, 27, 15]], 1985: [[8, 15, 17], [9, 15, 17], [10, 13, 17], [11, 13, 17], [0, 22, 16], [1, 20, 16], [2, 22, 16], [3, 21, 16], [4, 20, 16], [5, 19, 16], [6, 18, 16], [7, 17, 16]], 1986: [[8, 5, 18], [9, 4, 18], [10, 3, 18], [11, 2, 18], [0, 11, 17], [1, 10, 17], [2, 11, 17], [3, 10, 17], [4, 9, 17], [5, 8, 17], [6, 8, 17], [7, 6, 17]], 1987: [[7, 25, 19], [8, 24, 19], [9, 23, 19], [10, 22, 19], [0, 1, 18, 11, 21, 19], [0, 30, 18], [2, 1, 18], [2, 30, 18], [3, 29, 18], [4, 28, 18], [5, 27, 18], [6, 26, 18]], 1988: [[7, 13, 20], [8, 12, 20], [9, 11, 20], [10, 10, 20], [11, 10, 20], [0, 20, 19], [1, 18, 19], [2, 19, 19], [3, 17, 19], [4, 16, 19], [5, 15, 19], [6, 14, 19]], 1989: [[7, 2, 21], [8, 1, 21], [8, 30, 21], [9, 30, 21], [10, 29, 21], [0, 8, 20, 11, 29, 21], [1, 7, 20], [2, 8, 20], [3, 7, 20], [4, 6, 20], [5, 4, 20], [6, 4, 20]], 1990: [[6, 23, 22], [7, 21, 22], [8, 20, 22], [9, 19, 22], [10, 18, 22], [11, 18, 22], [0, 27, 21], [1, 26, 21], [2, 27, 21], [3, 26, 21], [4, 25, 21], [5, 23, 21]], 1991: [[6, 12, 23], [7, 11, 23], [8, 9, 23], [9, 8, 23], [10, 7, 23], [11, 7, 23], [0, 16, 22], [1, 15, 22], [2, 17, 22], [3, 15, 22], [4, 15, 22], [5, 13, 22]], 1992: [[6, 1, 24], [6, 30, 24], [7, 29, 24], [8, 27, 24], [9, 26, 24], [10, 25, 24], [0, 5, 23, 11, 25, 24], [1, 4, 23], [2, 5, 23], [3, 4, 23], [4, 3, 23], [5, 2, 23]], 1993: [[5, 21, 25], [6, 20, 25], [7, 18, 25], [8, 17, 25], [9, 16, 25], [10, 14, 25], [11, 14, 25], [0, 23, 24], [1, 22, 24], [2, 24, 24], [3, 22, 24], [4, 22, 24]], 1994: [[5, 10, 26], [6, 9, 26], [7, 8, 26], [8, 6, 26], [9, 6, 26], [10, 4, 26], [11, 3, 26], [0, 12, 25], [1, 11, 25], [2, 13, 25], [3, 12, 25], [4, 11, 25]], 1995: [[4, 30, 27], [5, 29, 27], [6, 28, 27], [7, 27, 27], [8, 25, 27], [9, 25, 27], [10, 23, 27], [0, 2, 26, 11, 23, 27], [0, 31, 26], [2, 2, 26], [3, 1, 26], [3, 30, 26]], 1996: [[4, 18, 28], [5, 17, 28], [6, 16, 28], [7, 15, 28], [8, 13, 28], [9, 13, 28], [10, 12, 28], [11, 11, 28], [0, 21, 27], [1, 19, 27], [2, 20, 27], [3, 18, 27]], 1997: [[4, 7, 29], [5, 6, 29], [6, 5, 29], [7, 4, 29], [8, 2, 29], [9, 2, 29], [10, 1, 29], [11, 1, 29], [0, 10, 28, 11, 30, 29], [1, 8, 28], [2, 10, 28], [3, 8, 28]], 1998: [[3, 27, 30], [4, 26, 30], [5, 25, 30], [6, 24, 30], [7, 23, 30], [8, 21, 30], [9, 21, 30], [10, 20, 30], [11, 19, 30], [0, 29, 29], [1, 27, 29], [2, 29, 29]], 1999: [[3, 17, 31], [4, 16, 31], [5, 15, 31], [6, 14, 31], [7, 12, 31], [8, 11, 31], [9, 10, 31], [10, 9, 31], [11, 9, 31], [0, 18, 30], [1, 17, 30], [2, 18, 30]], 2e3: [[3, 6, 32], [4, 5, 32], [5, 3, 32], [6, 3, 32], [7, 1, 32], [7, 30, 32], [8, 28, 32], [9, 28, 32], [10, 27, 32], [0, 8, 31, 11, 27, 32], [1, 7, 31], [2, 7, 31]], 2001: [[2, 26, 33], [3, 25, 33], [4, 24, 33], [5, 22, 33], [6, 22, 33], [7, 20, 33], [8, 18, 33], [9, 17, 33], [10, 16, 33], [11, 16, 33], [0, 26, 32], [1, 24, 32]], 2002: [[2, 15, 34], [3, 14, 34], [4, 13, 34], [5, 12, 34], [6, 11, 34], [7, 10, 34], [8, 8, 34], [9, 7, 34], [10, 6, 34], [11, 5, 34], [0, 15, 33], [1, 13, 33]], 2003: [[2, 4, 35], [3, 3, 35], [4, 2, 35], [5, 1, 35], [6, 1, 35], [6, 30, 35], [7, 29, 35], [8, 27, 35], [9, 26, 35], [10, 25, 35], [0, 4, 34, 11, 24, 35], [1, 2, 34]], 2004: [[1, 21, 36], [2, 22, 36], [3, 20, 36], [4, 20, 36], [5, 19, 36], [6, 18, 36], [7, 17, 36], [8, 15, 36], [9, 15, 36], [10, 14, 36], [11, 13, 36], [0, 23, 35]], 2005: [[1, 10, 37], [2, 11, 37], [3, 10, 37], [4, 9, 37], [5, 8, 37], [6, 7, 37], [7, 6, 37], [8, 5, 37], [9, 4, 37], [10, 3, 37], [11, 3, 37], [0, 12, 36]], 2006: [[0, 31, 38], [2, 1, 38], [2, 30, 38], [3, 29, 38], [4, 28, 38], [5, 26, 38], [6, 26, 38], [7, 25, 38], [8, 24, 38], [9, 23, 38], [10, 22, 38], [0, 1, 37, 11, 22, 38]], 2007: [[0, 20, 39], [1, 19, 39], [2, 20, 39], [3, 18, 39], [4, 18, 39], [5, 16, 39], [6, 15, 39], [7, 14, 39], [8, 13, 39], [9, 13, 39], [10, 11, 39], [11, 11, 39]], 2008: [[0, 10, 40, 11, 29, 41], [1, 8, 40], [2, 9, 40], [3, 7, 40], [4, 6, 40], [5, 5, 40], [6, 4, 40], [7, 2, 40], [8, 1, 40], [9, 1, 40], [9, 30, 40], [10, 29, 40]], 2009: [[11, 18, 42], [0, 27, 41], [1, 26, 41], [2, 28, 41], [3, 26, 41], [4, 25, 41], [5, 24, 41], [6, 23, 41], [7, 22, 41], [8, 20, 41], [9, 20, 41], [10, 18, 41]], 2010: [[11, 7, 43], [0, 16, 42], [1, 15, 42], [2, 17, 42], [3, 15, 42], [4, 15, 42], [5, 13, 42], [6, 13, 42], [7, 11, 42], [8, 10, 42], [9, 9, 42], [10, 7, 42]], 2011: [[10, 26, 44], [0, 5, 43, 11, 26, 44], [1, 4, 43], [2, 6, 43], [3, 5, 43], [4, 4, 43], [5, 3, 43], [6, 2, 43], [7, 1, 43], [7, 30, 43], [8, 29, 43], [9, 28, 43]], 2012: [[10, 15, 45], [11, 14, 45], [0, 24, 44], [1, 23, 44], [2, 24, 44], [3, 22, 44], [4, 22, 44], [5, 21, 44], [6, 20, 44], [7, 19, 44], [8, 17, 44], [9, 17, 44]], 2013: [[10, 4, 46], [11, 4, 46], [0, 13, 45], [1, 11, 45], [2, 13, 45], [3, 11, 45], [4, 11, 45], [5, 10, 45], [6, 9, 45], [7, 8, 45], [8, 7, 45], [9, 6, 45]], 2014: [[9, 25, 47], [10, 23, 47], [0, 2, 46, 11, 23, 47], [1, 1, 46], [2, 2, 46], [3, 1, 46], [3, 30, 46], [4, 30, 46], [5, 28, 46], [6, 28, 46], [7, 27, 46], [8, 25, 46]], 2015: [[9, 14, 48], [10, 13, 48], [11, 12, 48], [0, 21, 47], [1, 20, 47], [2, 21, 47], [3, 20, 47], [4, 19, 47], [5, 18, 47], [6, 17, 47], [7, 16, 47], [8, 14, 47]], 2016: [[9, 2, 49], [10, 1, 49], [10, 30, 49], [0, 11, 48, 11, 30, 49], [1, 10, 48], [2, 10, 48], [3, 8, 48], [4, 8, 48], [5, 6, 48], [6, 6, 48], [7, 4, 48], [8, 2, 48]], 2017: [[8, 21, 50], [9, 21, 50], [10, 19, 50], [11, 19, 50], [0, 29, 49], [1, 28, 49], [2, 29, 49], [3, 27, 49], [4, 27, 49], [5, 25, 49], [6, 24, 49], [7, 23, 49]], 2018: [[8, 11, 51], [9, 10, 51], [10, 9, 51], [11, 8, 51], [0, 18, 50], [1, 17, 50], [2, 18, 50], [3, 17, 50], [4, 16, 50], [5, 15, 50], [6, 14, 50], [7, 12, 50]], 2019: [[7, 31, 52], [8, 30, 52], [9, 29, 52], [10, 28, 52], [0, 7, 51, 11, 27, 52], [1, 6, 51], [2, 8, 51], [3, 6, 51], [4, 6, 51], [5, 4, 51], [6, 4, 51], [7, 2, 51]], 2020: [[7, 20, 53], [8, 18, 53], [9, 18, 53], [10, 16, 53], [11, 16, 53], [0, 26, 52], [1, 25, 52], [2, 25, 52], [3, 24, 52], [4, 24, 52], [5, 22, 52], [6, 22, 52]], 2021: [[7, 9, 54], [8, 8, 54], [9, 7, 54], [10, 6, 54], [11, 5, 54], [0, 14, 53], [1, 13, 53], [2, 14, 53], [3, 13, 53], [4, 13, 53], [5, 11, 53], [6, 11, 53]], 2022: [[6, 30, 55], [7, 28, 55], [8, 27, 55], [9, 26, 55], [10, 25, 55], [0, 4, 54, 11, 25, 55], [1, 2, 54], [2, 4, 54], [3, 2, 54], [4, 2, 54], [4, 31, 54], [5, 30, 54]], 2023: [[6, 19, 56], [7, 17, 56], [8, 16, 56], [9, 16, 56], [10, 15, 56], [11, 14, 56], [0, 23, 55], [1, 21, 55], [2, 23, 55], [3, 21, 55], [4, 21, 55], [5, 19, 55]], 2024: [[6, 7, 57], [7, 5, 57], [8, 4, 57], [9, 4, 57], [10, 3, 57], [11, 3, 57], [0, 13, 56], [1, 11, 56], [2, 11, 56], [3, 10, 56], [4, 9, 56], [5, 7, 56]], 2025: [[5, 26, 58], [6, 26, 58], [7, 24, 58], [8, 23, 58], [9, 23, 58], [10, 22, 58], [0, 1, 57, 11, 21, 58], [0, 31, 57], [2, 1, 57], [2, 30, 57], [3, 29, 57], [4, 28, 57]], 2026: [[5, 16, 59], [6, 15, 59], [7, 14, 59], [8, 12, 59], [9, 12, 59], [10, 11, 59], [11, 10, 59], [0, 20, 58], [1, 18, 58], [2, 20, 58], [3, 18, 58], [4, 18, 58]], 2027: [[5, 6, 60], [6, 5, 60], [7, 3, 60], [8, 2, 60], [9, 1, 60], [9, 31, 60], [10, 29, 60], [0, 9, 59, 11, 29, 60], [1, 8, 59], [2, 9, 59], [3, 8, 59], [4, 7, 59]], 2028: [[4, 25, 61], [5, 24, 61], [6, 23, 61], [7, 22, 61], [8, 20, 61], [9, 19, 61], [10, 18, 61], [11, 17, 61], [0, 28, 60], [1, 26, 60], [2, 27, 60], [3, 26, 60]], 2029: [[4, 14, 62], [5, 13, 62], [6, 13, 62], [7, 11, 62], [8, 10, 62], [9, 9, 62], [10, 7, 62], [11, 7, 62], [0, 16, 61], [1, 14, 61], [2, 16, 61], [3, 15, 61]], 2030: [[4, 3, 63], [5, 2, 63], [6, 2, 63], [7, 1, 63], [7, 30, 63], [8, 29, 63], [9, 28, 63], [10, 26, 63], [0, 5, 62, 11, 26, 63], [1, 4, 62], [2, 5, 62], [3, 4, 62]], 2031: [[3, 23, 64], [4, 22, 64], [5, 21, 64], [6, 21, 64], [7, 20, 64], [8, 18, 64], [9, 17, 64], [10, 16, 64], [11, 15, 64], [0, 24, 63], [1, 23, 63], [2, 24, 63]], 2032: [[3, 11, 65], [4, 10, 65], [5, 9, 65], [6, 9, 65], [7, 8, 65], [8, 6, 65], [9, 6, 65], [10, 4, 65], [11, 4, 65], [0, 14, 64], [1, 12, 64], [2, 13, 64]], 2033: [[3, 1, 66], [3, 30, 66], [4, 29, 66], [5, 28, 66], [6, 28, 66], [7, 26, 66], [8, 25, 66], [9, 24, 66], [10, 23, 66], [0, 2, 65, 11, 23, 66], [1, 1, 65], [2, 2, 65]], 2034: [[2, 21, 67], [3, 20, 67], [4, 19, 67], [5, 17, 67], [6, 17, 67], [7, 15, 67], [8, 14, 67], [9, 13, 67], [10, 12, 67], [11, 12, 67], [0, 21, 66], [1, 20, 66]], 2035: [[2, 11, 68], [3, 9, 68], [4, 9, 68], [5, 7, 68], [6, 6, 68], [7, 5, 68], [8, 3, 68], [9, 2, 68], [10, 1, 68], [11, 1, 68], [0, 11, 67, 11, 30, 68], [1, 9, 67]], 2036: [[1, 28, 69], [2, 29, 69], [3, 27, 69], [4, 27, 69], [5, 25, 69], [6, 24, 69], [7, 23, 69], [8, 21, 69], [9, 20, 69], [10, 19, 69], [11, 19, 69], [0, 29, 68]], 2037: [[1, 16, 70], [2, 18, 70], [3, 17, 70], [4, 16, 70], [5, 15, 70], [6, 14, 70], [7, 12, 70], [8, 11, 70], [9, 10, 70], [10, 8, 70], [11, 8, 70], [0, 17, 69]], 2038: [[1, 5, 71], [2, 7, 71], [3, 6, 71], [4, 5, 71], [5, 4, 71], [6, 3, 71], [7, 2, 71], [7, 31, 71], [8, 30, 71], [9, 29, 71], [10, 27, 71], [0, 7, 70, 11, 27, 71]], 2039: [[0, 26, 72], [1, 24, 72], [2, 26, 72], [3, 24, 72], [4, 24, 72], [5, 23, 72], [6, 22, 72], [7, 21, 72], [8, 19, 72], [9, 19, 72], [10, 17, 72], [11, 17, 72]], 2040: [[0, 15, 73], [1, 14, 73], [2, 14, 73], [3, 13, 73], [4, 12, 73], [5, 11, 73], [6, 10, 73], [7, 9, 73], [8, 7, 73], [9, 7, 73], [10, 6, 73], [11, 5, 73]], 2041: [[0, 4, 74, 11, 24, 75], [1, 2, 74], [2, 4, 74], [3, 2, 74], [4, 1, 74], [4, 31, 74], [5, 29, 74], [6, 29, 74], [7, 28, 74], [8, 26, 74], [9, 26, 74], [10, 25, 74]], 2042: [[11, 14, 76], [0, 23, 75], [1, 21, 75], [2, 23, 75], [3, 21, 75], [4, 20, 75], [5, 19, 75], [6, 18, 75], [7, 17, 75], [8, 15, 75], [9, 15, 75], [10, 14, 75]], 2043: [[11, 3, 77], [0, 12, 76], [1, 11, 76], [2, 12, 76], [3, 11, 76], [4, 10, 76], [5, 8, 76], [6, 8, 76], [7, 6, 76], [8, 4, 76], [9, 4, 76], [10, 3, 76]], 2044: [[10, 21, 78], [0, 2, 77, 11, 21, 78], [0, 31, 77], [2, 1, 77], [2, 30, 77], [3, 29, 77], [4, 28, 77], [5, 26, 77], [6, 26, 77], [7, 24, 77], [8, 23, 77], [9, 22, 77]], 2045: [[10, 10, 79], [11, 10, 79], [0, 19, 78], [1, 18, 78], [2, 20, 78], [3, 18, 78], [4, 18, 78], [5, 16, 78], [6, 15, 78], [7, 14, 78], [8, 12, 78], [9, 12, 78]], 2046: [[9, 31, 80], [10, 29, 80], [0, 8, 79, 11, 28, 80], [1, 7, 79], [2, 9, 79], [3, 7, 79], [4, 7, 79], [5, 5, 79], [6, 5, 79], [7, 3, 79], [8, 2, 79], [9, 1, 79]], 2047: [[9, 20, 81], [10, 19, 81], [11, 18, 81], [0, 27, 80], [1, 26, 80], [2, 27, 80], [3, 26, 80], [4, 26, 80], [5, 24, 80], [6, 24, 80], [7, 23, 80], [8, 21, 80]], 2048: [[9, 9, 82], [10, 7, 82], [11, 7, 82], [0, 16, 81], [1, 15, 81], [2, 16, 81], [3, 14, 81], [4, 14, 81], [5, 12, 81], [6, 12, 81], [7, 11, 81], [8, 10, 81]], 2049: [[8, 28, 83], [9, 28, 83], [10, 26, 83], [0, 5, 82, 11, 26, 83], [1, 3, 82], [2, 5, 82], [3, 3, 82], [4, 3, 82], [5, 2, 82], [6, 1, 82], [6, 31, 82], [7, 30, 82]], 2050: [[8, 17, 84], [9, 17, 84], [10, 15, 84], [11, 15, 84], [0, 24, 83], [1, 23, 83], [2, 24, 83], [3, 22, 83], [4, 22, 83], [5, 20, 83], [6, 20, 83], [7, 19, 83]], 2051: [[8, 6, 85], [9, 6, 85], [10, 5, 85], [11, 4, 85], [0, 14, 84], [1, 12, 84], [2, 14, 84], [3, 12, 84], [4, 11, 84], [5, 10, 84], [6, 9, 84], [7, 8, 84]], 2052: [[7, 26, 86], [8, 24, 86], [9, 24, 86], [10, 22, 86], [0, 3, 85, 11, 22, 86], [1, 2, 85], [2, 2, 85], [3, 1, 85], [3, 30, 85], [4, 29, 85], [5, 28, 85], [6, 27, 85]], 2053: [[7, 15, 87], [8, 13, 87], [9, 13, 87], [10, 11, 87], [11, 11, 87], [0, 21, 86], [1, 20, 86], [2, 21, 86], [3, 20, 86], [4, 19, 86], [5, 17, 86], [6, 17, 86]], 2054: [[7, 5, 88], [8, 3, 88], [9, 2, 88], [10, 1, 88], [10, 30, 88], [0, 10, 87, 11, 30, 88], [1, 9, 87], [2, 10, 87], [3, 9, 87], [4, 9, 87], [5, 7, 87], [6, 6, 87]], 2055: [[6, 25, 89], [7, 24, 89], [8, 22, 89], [9, 21, 89], [10, 20, 89], [11, 19, 89], [0, 29, 88], [1, 27, 88], [2, 29, 88], [3, 28, 88], [4, 28, 88], [5, 26, 88]], 2056: [[6, 14, 90], [7, 12, 90], [8, 11, 90], [9, 10, 90], [10, 8, 90], [11, 8, 90], [0, 18, 89], [1, 17, 89], [2, 17, 89], [3, 16, 89], [4, 16, 89], [5, 14, 89]], 2057: [[6, 3, 91], [7, 1, 91], [7, 31, 91], [8, 30, 91], [9, 29, 91], [10, 27, 91], [0, 6, 90, 11, 27, 91], [1, 5, 90], [2, 6, 90], [3, 5, 90], [4, 5, 90], [5, 3, 90]], 2058: [[5, 22, 92], [6, 21, 92], [7, 20, 92], [8, 19, 92], [9, 18, 92], [10, 17, 92], [11, 17, 92], [0, 25, 91], [1, 24, 91], [2, 25, 91], [3, 24, 91], [4, 23, 91]], 2059: [[5, 11, 93], [6, 11, 93], [7, 9, 93], [8, 8, 93], [9, 8, 93], [10, 6, 93], [11, 6, 93], [0, 15, 92], [1, 14, 92], [2, 15, 92], [3, 13, 92], [4, 13, 92]], 2060: [[4, 31, 94], [5, 29, 94], [6, 28, 94], [7, 27, 94], [8, 26, 94], [9, 25, 94], [10, 24, 94], [0, 5, 93, 11, 24, 94], [1, 3, 93], [2, 4, 93], [3, 2, 93], [4, 1, 93]], 2061: [[4, 20, 95], [5, 19, 95], [6, 18, 95], [7, 16, 95], [8, 15, 95], [9, 15, 95], [10, 13, 95], [11, 13, 95], [0, 23, 94], [1, 21, 94], [2, 23, 94], [3, 21, 94]], 2062: [[4, 10, 96], [5, 8, 96], [6, 8, 96], [7, 6, 96], [8, 4, 96], [9, 4, 96], [10, 3, 96], [11, 2, 96], [0, 12, 95], [1, 10, 95], [2, 12, 95], [3, 11, 95]], 2063: [[3, 30, 97], [4, 29, 97], [5, 27, 97], [6, 27, 97], [7, 25, 97], [8, 24, 97], [9, 23, 97], [10, 22, 97], [0, 1, 96, 11, 21, 97], [0, 31, 96], [2, 1, 96], [2, 31, 96]], 2064: [[3, 18, 98], [4, 17, 98], [5, 16, 98], [6, 15, 98], [7, 14, 98], [8, 12, 98], [9, 12, 98], [10, 10, 98], [11, 9, 98], [0, 20, 97], [1, 18, 97], [2, 19, 97]], 2065: [[3, 7, 99], [4, 6, 99], [5, 5, 99], [6, 5, 99], [7, 3, 99], [8, 2, 99], [9, 1, 99], [9, 31, 99], [10, 29, 99], [0, 8, 98, 11, 28, 99], [1, 6, 98], [2, 8, 98]], 2066: [[2, 27, 100], [3, 25, 100], [4, 25, 100], [5, 24, 100], [6, 24, 100], [7, 22, 100], [8, 21, 100], [9, 20, 100], [10, 19, 100], [11, 18, 100], [0, 27, 99], [1, 25, 99]], 2067: [[2, 16, 101], [3, 15, 101], [4, 14, 101], [5, 13, 101], [6, 13, 101], [7, 11, 101], [8, 10, 101], [9, 10, 101], [10, 8, 101], [11, 8, 101], [0, 16, 100], [1, 15, 100]], 2068: [[2, 5, 102], [3, 3, 102], [4, 3, 102], [5, 1, 102], [6, 1, 102], [6, 30, 102], [7, 29, 102], [8, 28, 102], [9, 27, 102], [10, 26, 102], [0, 6, 101, 11, 25, 102], [1, 4, 101]], 2069: [[1, 23, 103], [2, 24, 103], [3, 22, 103], [4, 22, 103], [5, 20, 103], [6, 20, 103], [7, 18, 103], [8, 17, 103], [9, 16, 103], [10, 15, 103], [11, 15, 103], [0, 24, 102]], 2070: [[1, 12, 104], [2, 14, 104], [3, 12, 104], [4, 11, 104], [5, 10, 104], [6, 9, 104], [7, 8, 104], [8, 6, 104], [9, 5, 104], [10, 4, 104], [11, 4, 104], [0, 13, 103]], 2071: [[1, 1, 105], [2, 3, 105], [3, 2, 105], [4, 1, 105], [4, 30, 105], [5, 29, 105], [6, 28, 105], [7, 26, 105], [8, 25, 105], [9, 24, 105], [10, 23, 105], [0, 2, 104, 11, 22, 105]], 2072: [[0, 21, 106], [1, 20, 106], [2, 21, 106], [3, 19, 106], [4, 19, 106], [5, 17, 106], [6, 17, 106], [7, 15, 106], [8, 13, 106], [9, 13, 106], [10, 11, 106], [11, 11, 106]], 2073: [[0, 9, 107, 11, 30, 108], [1, 8, 107], [2, 10, 107], [3, 9, 107], [4, 8, 107], [5, 7, 107], [6, 6, 107], [7, 5, 107], [8, 3, 107], [9, 2, 107], [10, 1, 107], [10, 30, 107]], 2074: [[11, 19, 109], [0, 28, 108], [1, 27, 108], [2, 29, 108], [3, 27, 108], [4, 27, 108], [5, 26, 108], [6, 25, 108], [7, 23, 108], [8, 22, 108], [9, 21, 108], [10, 20, 108]], 2075: [[11, 9, 110], [0, 18, 109], [1, 16, 109], [2, 18, 109], [3, 16, 109], [4, 16, 109], [5, 15, 109], [6, 14, 109], [7, 13, 109], [8, 11, 109], [9, 11, 109], [10, 9, 109]], 2076: [[10, 27, 111], [0, 7, 110, 11, 27, 111], [1, 6, 110], [2, 6, 110], [3, 5, 110], [4, 4, 110], [5, 3, 110], [6, 2, 110], [7, 1, 110], [7, 30, 110], [8, 29, 110], [9, 29, 110]], 2077: [null, null, [0, 26, 111], [1, 24, 111], [2, 25, 111], [3, 24, 111], [4, 23, 111], [5, 21, 111], [6, 21, 111], [7, 19, 111], [8, 18, 111], [9, 18, 111]], year: 1389 };

// node_modules/date-holidays-parser/src/Hijri.js
var Hijri = class extends CalEventMap {
  constructor(opts) {
    super(opts);
    this.calendar = calendar3;
  }
  get(timezone) {
    const arr = this.dates.map((date) => {
      const cdate = new CalDate(date);
      const o = {
        date: cdate.toString() + " -0600",
        start: cdate.setOffset(-6, "h").toTimezone(timezone),
        end: cdate.toEndDate().toTimezone(timezone)
      };
      this._addSubstitute(date, o);
      return o;
    });
    return arr;
  }
};

// node_modules/date-holidays-parser/src/Jalaali.js
var import_jalaali_js = __toESM(require_jalaali_js(), 1);
var { toJalaali, toGregorian } = import_jalaali_js.default;
var Jalaali = class extends CalEvent {
  /**
   * @param {number} year gregorian year
   * @returns
   */
  inYear(year) {
    const nowruz = toJalaali(year, 1, 1);
    if (this.opts.year && nowruz.jy !== this.opts.year) {
      return this;
    }
    const { gy, gm, gd } = toGregorian(this.opts.year || nowruz.jy, this.opts.month, this.opts.day);
    const d3 = new CalDate({ year: gy, month: gm, day: gd }).setOffset(this.offset);
    this.dates.push(d3);
    return this;
  }
};

// node_modules/astronomia/data/vsop87Bearth.js
var m2 = {
  L: {
    "0": [
      [1.75347045673, 0, 0],
      [0.03341656453, 4.66925680415, 6283.0758499914],
      [34894275e-11, 4.62610242189, 12566.1516999828],
      [3417572e-11, 2.82886579754, 3.523118349],
      [3497056e-11, 2.74411783405, 5753.3848848968],
      [3135899e-11, 3.62767041756, 77713.7714681205],
      [2676218e-11, 4.41808345438, 7860.4193924392],
      [2342691e-11, 6.13516214446, 3930.2096962196],
      [1273165e-11, 2.03709657878, 529.6909650946],
      [1324294e-11, 0.74246341673, 11506.7697697936],
      [901854e-11, 2.04505446477, 26.2983197998],
      [1199167e-11, 1.10962946234, 1577.3435424478],
      [857223e-11, 3.50849152283, 398.1490034082],
      [779786e-11, 1.17882681962, 5223.6939198022],
      [99025e-10, 5.23268072088, 5884.9268465832],
      [753141e-11, 2.53339052847, 5507.5532386674],
      [505267e-11, 4.58292599973, 18849.2275499742],
      [492392e-11, 4.20505711826, 775.522611324],
      [356672e-11, 2.91954114478, 0.0673103028],
      [284125e-11, 1.89869240932, 796.2980068164],
      [242879e-11, 0.34481445893, 5486.777843175],
      [317087e-11, 5.84901948512, 11790.6290886588],
      [271112e-11, 0.31486255375, 10977.078804699],
      [206217e-11, 4.80646631478, 2544.3144198834],
      [205478e-11, 1.86953770281, 5573.1428014331],
      [202318e-11, 2.45767790232, 6069.7767545534],
      [126225e-11, 1.08295459501, 20.7753954924],
      [155516e-11, 0.83306084617, 213.299095438],
      [115132e-11, 0.64544911683, 0.9803210682],
      [102851e-11, 0.63599845579, 4694.0029547076],
      [101724e-11, 4.2667980198, 7.1135470008],
      [99206e-11, 6.20992926918, 2146.1654164752],
      [132212e-11, 3.41118292683, 2942.4634232916],
      [97607e-11, 0.68101342359, 155.4203994342],
      [85128e-11, 1.29870764804, 6275.9623029906],
      [74651e-11, 1.755089133, 5088.6288397668],
      [101895e-11, 0.97569280312, 15720.8387848784],
      [84711e-11, 3.67080093031, 71430.69561812909],
      [73547e-11, 4.67926633877, 801.8209311238],
      [73874e-11, 3.50319414955, 3154.6870848956],
      [78757e-11, 3.03697458703, 12036.4607348882],
      [79637e-11, 1.80791287082, 17260.1546546904],
      [85803e-11, 5.9832263126, 161000.6857376741],
      [56963e-11, 2.78430458592, 6286.5989683404],
      [61148e-11, 1.81839892984, 7084.8967811152],
      [69627e-11, 0.83297621398, 9437.762934887],
      [56116e-11, 4.38694865354, 14143.4952424306],
      [62449e-11, 3.97763912806, 8827.3902698748],
      [51145e-11, 0.28306832879, 5856.4776591154],
      [55577e-11, 3.47006059924, 6279.5527316424],
      [41036e-11, 5.36817592855, 8429.2412664666],
      [51605e-11, 1.33282739866, 1748.016413067],
      [51992e-11, 0.18914947184, 12139.5535091068],
      [49e-8, 0.48735014197, 1194.4470102246],
      [392e-9, 6.16833020996, 10447.3878396044],
      [3557e-10, 1.775968892, 6812.766815086],
      [3677e-10, 6.04133863162, 10213.285546211],
      [36596e-11, 2.56957481827, 1059.3819301892],
      [33296e-11, 0.59310278598, 17789.845619785],
      [35954e-11, 1.70875808777, 2352.8661537718],
      [40938e-11, 2.39850938714, 19651.048481098],
      [30047e-11, 2.73975124088, 1349.8674096588],
      [30412e-11, 0.44294464169, 83996.84731811189],
      [23663e-11, 0.48473622521, 8031.0922630584],
      [23574e-11, 2.06528133162, 3340.6124266998],
      [21089e-11, 4.14825468851, 951.7184062506],
      [24738e-11, 0.21484762138, 3.5904286518],
      [25352e-11, 3.16470891653, 4690.4798363586],
      [22823e-11, 5.22195230819, 4705.7323075436],
      [21419e-11, 1.42563910473, 16730.4636895958],
      [21891e-11, 5.55594302779, 553.5694028424],
      [17481e-11, 4.56052900312, 135.0650800354],
      [19927e-11, 5.22209149316, 12168.0026965746],
      [1986e-10, 5.77470242235, 6309.3741697912],
      [203e-9, 0.37133792946, 283.8593188652],
      [14421e-11, 4.19315052005, 242.728603974],
      [16225e-11, 5.98837767951, 11769.8536931664],
      [15077e-11, 4.1956716337, 6256.7775301916],
      [19124e-11, 3.82219958698, 23581.2581773176],
      [18888e-11, 5.38626892076, 149854.4001348079],
      [14346e-11, 3.72355084422, 38.0276726358],
      [17898e-11, 2.21490566029, 13367.9726311066],
      [12054e-11, 2.62229602614, 955.5997416086],
      [11287e-11, 0.17739329984, 4164.311989613],
      [13973e-11, 4.40134615007, 6681.2248533996],
      [13621e-11, 1.88934516495, 7632.9432596502],
      [12503e-11, 1.13052412208, 5.5229243074],
      [10498e-11, 5.35909979317, 1592.5960136328],
      [9803e-11, 0.99948172646, 11371.7046897582],
      [922e-10, 4.57138585348, 4292.3308329504],
      [10327e-11, 6.19982170609, 6438.4962494256],
      [12003e-11, 1.00351462266, 632.7837393132],
      [10827e-11, 0.32734523824, 103.0927742186],
      [8356e-11, 4.53902748706, 25132.3033999656],
      [10005e-11, 6.0291496328, 5746.271337896],
      [8409e-11, 3.29946177848, 7234.794256242],
      [8006e-11, 5.82145271855, 28.4491874678],
      [10523e-11, 0.93870455544, 11926.2544136688],
      [7686e-11, 3.1214364064, 7238.6755916],
      [9378e-11, 2.62413793196, 5760.4984318976],
      [8127e-11, 6.11227839253, 4732.0306273434],
      [9232e-11, 0.48344234496, 522.5774180938],
      [9802e-11, 5.24413877132, 27511.4678735372],
      [7871e-11, 0.99590133077, 5643.1785636774],
      [8123e-11, 6.27053020099, 426.598190876],
      [9048e-11, 5.33686323585, 6386.16862421],
      [8621e-11, 4.16537179089, 7058.5984613154],
      [6297e-11, 4.71723143652, 6836.6452528338],
      [7575e-11, 3.97381357237, 11499.6562227928],
      [7756e-11, 2.95728422442, 23013.5395395872],
      [7314e-11, 0.60652522715, 11513.8833167944],
      [5955e-11, 2.87641047954, 6283.14316029419],
      [6534e-11, 5.79046406784, 18073.7049386502],
      [7188e-11, 3.99831461988, 74.7815985673],
      [7346e-11, 4.38582423903, 316.3918696566],
      [5413e-11, 5.39199023275, 419.4846438752],
      [5127e-11, 2.36059551778, 10973.55568635],
      [7056e-11, 0.32258442532, 263.0839233728],
      [6624e-11, 3.6647416584, 17298.1823273262],
      [6762e-11, 5.91131766896, 90955.5516944961],
      [4938e-11, 5.73672172371, 9917.6968745098],
      [5547e-11, 2.45152589382, 12352.8526045448],
      [5958e-11, 3.3205134466, 6283.0085396886],
      [4471e-11, 2.06386138131, 7079.3738568078],
      [6153e-11, 1.45823347458, 233141.3144043615],
      [4348e-11, 4.42338625285, 5216.5803728014],
      [6124e-11, 1.07494838623, 19804.8272915828],
      [4488e-11, 3.65285033073, 206.1855484372],
      [402e-10, 0.83995823171, 20.3553193988],
      [5188e-11, 4.06503864016, 6208.2942514241],
      [5307e-11, 0.38216728132, 31441.6775697568],
      [3785e-11, 2.34369213733, 3.881335358],
      [4497e-11, 3.27230792447, 11015.1064773348],
      [4132e-11, 0.92129851256, 3738.761430108],
      [3521e-11, 5.9784480361, 3894.1818295422],
      [4215e-11, 1.90601721876, 245.8316462294],
      [3701e-11, 5.03067498875, 536.8045120954],
      [3866e-11, 1.82632980909, 11856.2186514245],
      [3652e-11, 1.01840564429, 16200.7727245012],
      [339e-10, 0.97784870142, 8635.9420037632],
      [3737e-11, 2.9537891957, 3128.3887650958],
      [3507e-11, 3.71291946317, 6290.1893969922],
      [3086e-11, 3.64646921512, 10.6366653498],
      [3397e-11, 1.10589356888, 14712.317116458],
      [3334e-11, 0.83684903082, 6496.3749454294],
      [2805e-11, 2.58503711584, 14314.1681130498],
      [365e-10, 1.08344142571, 88860.05707098669],
      [3388e-11, 3.20182380957, 5120.6011455836],
      [3252e-11, 3.47857474229, 6133.5126528568],
      [2553e-11, 3.9486902726, 1990.745017041],
      [352e-10, 2.05559692878, 244287.60000722768],
      [2565e-11, 1.56072409371, 23543.23050468179],
      [2621e-11, 3.85639359951, 266.6070417218],
      [2954e-11, 3.39692614359, 9225.539273283],
      [2876e-11, 6.02633318445, 154717.6098876827],
      [2395e-11, 1.16130078696, 10984.1923516998],
      [3161e-11, 1.32798862116, 10873.9860304804],
      [3163e-11, 5.08946546862, 21228.3920235458],
      [2361e-11, 4.27212461943, 6040.3472460174],
      [303e-10, 1.80210001168, 35371.8872659764],
      [2343e-11, 3.57688971514, 10969.9652576982],
      [2618e-11, 2.57870151918, 22483.84857449259],
      [2113e-11, 3.71711179417, 65147.6197681377],
      [2019e-11, 0.81393923319, 170.6728706192],
      [2003e-11, 0.38091017375, 6172.869528772],
      [2506e-11, 3.74378169126, 10575.4066829418],
      [2381e-11, 0.10581361289, 7.046236698],
      [1949e-11, 4.86892513469, 36.0278666774],
      [2074e-11, 4.22802468213, 5650.2921106782],
      [1924e-11, 5.59460549844, 6282.0955289232],
      [1949e-11, 1.06999605576, 5230.807466803],
      [1988e-11, 5.19734705445, 6262.300454499],
      [1887e-11, 3.74365662683, 23.8784377478],
      [1787e-11, 1.25929659066, 12559.038152982],
      [1883e-11, 1.90364058477, 15.252471185],
      [1816e-11, 3.68083794819, 15110.4661198662],
      [1701e-11, 4.41109562589, 110.2063212194],
      [199e-10, 3.93295788548, 6206.8097787158],
      [2103e-11, 0.75354936681, 13521.7514415914],
      [1774e-11, 0.48750515837, 1551.045222648],
      [1882e-11, 0.86685462305, 22003.9146348698],
      [1924e-11, 1.22901099088, 709.9330485583],
      [2073e-11, 4.62531597856, 6037.244203762],
      [1924e-11, 0.60231842492, 6284.0561710596],
      [1596e-11, 3.98332879712, 13916.0191096416],
      [1664e-11, 4.41947015623, 8662.240323563],
      [1971e-11, 1.04560686192, 18209.33026366019],
      [1942e-11, 4.31335979989, 6244.9428143536],
      [1476e-11, 0.93274523818, 2379.1644735716],
      [181e-10, 0.49112137707, 1.4844727083],
      [1346e-11, 1.51574753411, 4136.9104335162],
      [1528e-11, 5.61833568587, 6127.6554505572],
      [1791e-11, 3.22191142746, 39302.096962196],
      [1747e-11, 3.05595292589, 18319.5365848796],
      [1432e-11, 4.51123984264, 20426.571092422],
      [1695e-11, 0.22049418623, 25158.6017197654],
      [1242e-11, 4.46665354536, 17256.6315363414],
      [1463e-11, 4.69248613506, 14945.3161735544],
      [1205e-11, 1.86911906771, 4590.910180489],
      [119e-10, 2.74169967367, 12569.6748183318],
      [1222e-11, 5.18120087481, 5333.9002410216],
      [139e-10, 5.42888623322, 143571.32428481648],
      [1473e-11, 1.70487100866, 11712.9553182308],
      [1362e-11, 2.61069503292, 6062.6632075526],
      [1148e-11, 6.0300843061, 3634.6210245184],
      [1198e-11, 5.15296117339, 10177.2576795336],
      [1266e-11, 0.11422490557, 18422.62935909819],
      [1411e-11, 1.09910890045, 3496.032826134],
      [1349e-11, 2.99804623019, 17654.7805397496],
      [1253e-11, 2.79844902576, 167283.7615876655],
      [1311e-11, 1.609410743, 5481.2549188676],
      [1079e-11, 6.20304501787, 3.2863574178],
      [1181e-11, 1.20653777627, 131.5419616864],
      [1254e-11, 5.45103277799, 6076.8903015542],
      [1036e-11, 2.32136959491, 7342.4577801806],
      [1117e-11, 0.38842340979, 949.1756089698],
      [966e-11, 3.18352079941, 11087.2851259184],
      [1171e-11, 3.39635167732, 12562.6285816338],
      [1121e-11, 0.72631814699, 220.4126424388],
      [1024e-11, 2.19381113265, 11403.676995575],
      [888e-11, 3.91167196431, 4686.8894077068],
      [91e-10, 1.98802695087, 735.8765135318],
      [823e-11, 0.48822202854, 24072.9214697764],
      [1096e-11, 6.17377835617, 5436.9930152402],
      [908e-11, 0.44959148878, 7477.522860216],
      [974e-11, 1.52996313552, 9623.6882766912],
      [84e-10, 1.79540573407, 5429.8794682394],
      [778e-11, 6.17703744517, 38.1330356378],
      [776e-11, 4.09859968447, 14.2270940016],
      [1068e-11, 4.64209577648, 43232.3066584156],
      [954e-11, 1.49985885818, 1162.4747044078],
      [907e-11, 0.86986870809, 10344.2950653858],
      [931e-11, 4.06049877517, 28766.924424484],
      [739e-11, 5.04368192034, 639.897286314],
      [965e-11, 3.44286716197, 1589.0728952838],
      [763e-11, 5.86304776787, 16858.4825329332],
      [953e-11, 4.20801492835, 11190.377900137],
      [708e-11, 1.72432323967, 13095.8426650774],
      [969e-11, 1.64437243011, 29088.811415985],
      [717e-11, 0.16688678895, 11.729352836],
      [962e-11, 3.53101876172, 12416.5885028482],
      [745e-11, 5.77741082302, 12592.4500197826],
      [672e-11, 1.91091228744, 3.9321532631],
      [671e-11, 5.46240758839, 18052.9295431578],
      [675e-11, 6.28311649798, 4535.0594369244],
      [684e-11, 0.39975011401, 5849.3641121146],
      [799e-11, 0.29859056777, 12132.439962106],
      [758e-11, 0.96370719224, 1052.2683831884],
      [782e-11, 5.33875702541, 13517.8701062334],
      [73e-10, 1.70114998543, 17267.26820169119],
      [749e-11, 2.59607005624, 11609.8625440122],
      [734e-11, 2.7842049778, 640.8776073822],
      [688e-11, 5.15097673557, 16496.3613962024],
      [77e-10, 1.62459252416, 4701.1165017084],
      [633e-11, 2.20588443066, 25934.1243310894],
      [76e-10, 4.21317219403, 377.3736079158],
      [584e-11, 2.13420121623, 10557.5941608238],
      [572e-11, 0.24649745829, 9779.1086761254],
      [573e-11, 3.16435264609, 533.2140834436],
      [685e-11, 3.19344289472, 12146.6670561076],
      [675e-11, 0.96179234176, 10454.5013866052],
      [648e-11, 1.46327342554, 6268.8487559898],
      [589e-11, 2.50543543638, 3097.88382272579],
      [551e-11, 5.28106257475, 9388.0059094152],
      [696e-11, 3.6534215555, 4804.209275927],
      [669e-11, 2.5103005926, 2388.8940204492],
      [55e-10, 0.06883090057, 20199.094959633],
      [629e-11, 4.13350997495, 45892.73043315699],
      [678e-11, 6.09190163533, 135.62532501],
      [593e-11, 1.50129499103, 226858.23855437007],
      [542e-11, 3.58582033525, 6148.010769956],
      [599e-11, 6.12058050643, 18875.525869774],
      [682e-11, 5.0221361683, 17253.04110768959],
      [565e-11, 4.29309214275, 11933.3679606696],
      [486e-11, 0.77746204893, 27.4015560968],
      [503e-11, 0.58974557727, 15671.0817594066],
      [616e-11, 4.06539884128, 227.476132789],
      [537e-11, 2.15064382406, 21954.15760939799],
      [669e-11, 6.06995500278, 47162.5163546352],
      [54e-10, 2.83444221432, 5326.7866940208],
      [474e-11, 0.40346826846, 6915.8595893046],
      [532e-11, 5.26131065063, 10988.808157535],
      [582e-11, 3.24533095664, 153.7788104848],
      [641e-11, 3.24711790399, 2107.0345075424],
      [619e-11, 3.08302108547, 33019.0211122046],
      [466e-11, 3.14982369789, 10440.2742926036],
      [466e-11, 0.90708835651, 5966.6839803348],
      [528e-11, 0.8192645447, 813.5502839598],
      [603e-11, 3.81378921927, 316428.22867391503],
      [559e-11, 1.8189498573, 17996.0311682222],
      [437e-11, 2.28631745987, 6303.8512454838],
      [518e-11, 4.86068318058, 20597.2439630412],
      [424e-11, 6.23520018697, 6489.2613984286],
      [518e-11, 6.17617826756, 0.2438174835],
      [404e-11, 5.72804304258, 5642.1982426092],
      [458e-11, 1.34117773914, 6287.0080032545],
      [548e-11, 5.6845445832, 155427.542936241],
      [547e-11, 1.03391472434, 3646.3503773544],
      [428e-11, 4.6980968782, 846.0828347512],
      [413e-11, 6.0252069939, 6279.4854213396],
      [534e-11, 3.03030638223, 66567.48586525429],
      [383e-11, 1.4905558804, 19800.9459562248],
      [411e-11, 5.28384176408, 18451.07854656599],
      [352e-11, 4.68891600525, 4907.3020501456],
      [48e-10, 5.36572651091, 348.924420448],
      [344e-11, 5.89157452889, 6546.1597733642],
      [34e-10, 0.37557440365, 13119.72110282519],
      [434e-11, 4.98417856239, 6702.5604938666],
      [332e-11, 2.6890934443, 29296.6153895786],
      [448e-11, 2.16478480251, 5905.7022420756],
      [344e-11, 2.06546633735, 49.7570254718],
      [315e-11, 1.24023810969, 4061.2192153944],
      [324e-11, 2.30897526929, 5017.508371365],
      [413e-11, 0.17171692945, 6286.6662786432],
      [431e-11, 3.8660110138, 12489.8856287072],
      [349e-11, 4.55372493131, 4933.2084403326],
      [323e-11, 0.41971136084, 10770.8932562618],
      [341e-11, 2.68612860807, 11.0457002639],
      [316e-11, 3.52966641606, 17782.7320727842],
      [315e-11, 5.63357264999, 568.8218740274],
      [34e-10, 3.83571212349, 10660.6869350424],
      [296e-11, 0.62703270489, 20995.3929664494],
      [405e-11, 1.00084965393, 16460.33352952499],
      [414e-11, 1.21998752076, 51092.7260508548],
      [336e-11, 4.71465945215, 6179.9830757728],
      [361e-11, 3.71235613733, 28237.2334593894],
      [327e-11, 1.05606504715, 11919.140866668],
      [327e-11, 6.1422242098, 6254.6266625236],
      [268e-11, 2.47224339737, 664.75604513],
      [269e-11, 1.86210872453, 23141.5583829246],
      [345e-11, 0.93461290184, 6058.7310542895],
      [353e-11, 4.50033650657, 36949.2308084242],
      [344e-11, 6.26166140367, 24356.7807886416],
      [3e-9, 4.46964001975, 6418.1409300268],
      [26e-10, 4.04967464725, 6525.8044539654],
      [298e-11, 2.20018811054, 156137.47598479927],
      [253e-11, 3.49930797865, 29864.334027309],
      [254e-11, 2.44883530154, 5331.3574437408],
      [296e-11, 0.84341183907, 5729.506447149],
      [241e-11, 2.00721298729, 16737.5772365966],
      [311e-11, 1.23668016336, 6281.5913772831],
      [332e-11, 3.55576945724, 7668.6374249425],
      [236e-11, 2.47437156031, 6245.0481773556],
      [264e-11, 4.43924412283, 12964.300703391],
      [257e-11, 1.79654471948, 11080.1715789176],
      [26e-10, 3.3307759606, 5888.4499649322],
      [285e-11, 0.3088636143, 11823.1616394502],
      [29e-10, 5.70141882483, 77.673770428],
      [255e-11, 4.00939662024, 5881.4037282342],
      [253e-11, 4.73318512715, 16723.350142595],
      [228e-11, 0.95333661324, 5540.0857894588],
      [281e-11, 1.29199646396, 22805.7355659936],
      [319e-11, 1.38633229189, 163096.18036118348],
      [224e-11, 1.65156322696, 10027.9031957292],
      [226e-11, 0.34125379653, 17796.9591667858],
      [236e-11, 4.19817431922, 19.66976089979],
      [281e-11, 4.14114899916, 12539.853380183],
      [275e-11, 5.50306930248, 32.5325507914],
      [223e-11, 5.23334210294, 56.8983749356],
      [217e-11, 6.08598789777, 6805.6532680852],
      [228e-11, 5.17114391778, 11720.0688652316],
      [274e-11, 4.50716805713, 6016.4688082696],
      [245e-11, 3.96486270306, 22.7752014508],
      [22e-10, 4.7207808197, 6.62855890001],
      [207e-11, 5.71701403951, 41.5507909848],
      [204e-11, 3.9122741125, 2699.7348193176],
      [209e-11, 0.86881969024, 6321.1035226272],
      [2e-9, 2.11984442601, 4274.5183108324],
      [2e-9, 5.39839888151, 6019.9919266186],
      [209e-11, 5.67606291663, 11293.4706743556],
      [252e-11, 1.6496572935, 9380.9596727172],
      [275e-11, 5.04826903506, 73.297125859],
      [208e-11, 1.88207277133, 11300.5842213564],
      [206e-11, 5.0728488933, 6277.552925684],
      [272e-11, 0.74640924904, 1975.492545856],
      [199e-11, 3.30813142103, 22743.4093795164],
      [269e-11, 4.48560812155, 64471.99124174489],
      [192e-11, 2.17463565107, 5863.5912061162],
      [228e-11, 5.85373115869, 128.0188433374],
      [261e-11, 2.64321183295, 55022.9357470744],
      [196e-11, 2.4853762232, 16062.1845261168],
      [187e-11, 1.3189176028, 29826.3063546732],
      [22e-10, 5.75012110079, 29.429508536],
      [187e-11, 4.03230554718, 467.9649903544],
      [2e-9, 5.60555262896, 1066.49547719],
      [231e-11, 1.09802712785, 12341.8069042809],
      [198e-11, 0.29474229005, 149.5631971346],
      [249e-11, 5.1047702317, 7875.6718636242],
      [179e-11, 0.87066197995, 12721.572099417],
      [203e-11, 1.56914310573, 28286.9904848612],
      [198e-11, 3.54061588502, 30.914125635],
      [171e-11, 3.45366018621, 5327.4761083828],
      [183e-11, 0.72325421604, 6272.0301497275],
      [216e-11, 2.97175184412, 19402.7969528166],
      [168e-11, 2.51559879907, 23937.856389741],
      [195e-11, 0.09045393425, 156.4007205024],
      [216e-11, 0.42162375972, 23539.7073863328],
      [189e-11, 0.37542530191, 9814.6041002912],
      [207e-11, 2.01752547259, 238004.5241572363],
      [218e-11, 2.36835893645, 16627.3709153772],
      [166e-11, 4.23182960518, 16840.67001081519],
      [2e-9, 2.02153258098, 16097.6799502826],
      [169e-11, 0.91318727, 95.9792272178],
      [211e-11, 5.73370637657, 151.8972810852],
      [204e-11, 0.42643085174, 515.463871093],
      [212e-11, 3.00223140894, 12043.574281889],
      [192e-11, 5.46153589821, 6379.0550772092],
      [16e-10, 6.23798383332, 202.2533951741],
      [215e-11, 0.20889073407, 5621.8429232104],
      [15e-10, 3.12999753018, 799.8211251654],
      [187e-11, 2.12345787867, 491.6632924588],
      [192e-11, 1.33928820063, 394.6258850592],
      [149e-11, 2.65697593276, 21.335640467],
      [146e-11, 5.58021191726, 412.3710968744],
      [156e-11, 3.7565767638, 12323.4230960088],
      [143e-11, 3.28248547724, 29.8214381488],
      [144e-11, 1.07862546598, 1265.5674786264],
      [148e-11, 0.2338663109, 10021.8372800994],
      [164e-11, 0.94288727597, 14919.0178537546],
      [193e-11, 5.92751083827, 40879.4405046438],
      [14e-10, 4.97612440269, 158.9435177832],
      [148e-11, 2.61651818006, 17157.0618804718],
      [14e-10, 3.66947933935, 26084.0218062162],
      [147e-11, 5.09968173403, 661.232926781],
      [147e-11, 1.36976712162, 4171.4255366138],
      [134e-11, 4.79432636012, 111.1866422876],
      [14e-10, 1.27748013377, 107.6635239386],
      [171e-11, 2.77586207403, 26735.9452622132],
      [183e-11, 5.43418358741, 369.6998159404],
      [134e-11, 3.09132862833, 17.812522118],
      [132e-11, 3.05633896779, 22490.9621214934],
      [181e-11, 4.22950689891, 966.9708774356],
      [166e-11, 3.67660435776, 15508.6151232744],
      [152e-11, 5.28885813387, 12669.2444742014],
      [15e-10, 5.86819430895, 97238.62754448749],
      [145e-11, 5.07330784304, 87.30820453981],
      [133e-11, 5.65471067133, 31.9723058168],
      [124e-11, 2.83326216907, 12566.2190102856],
      [14e-10, 5.84212721453, 22476.73502749179],
      [134e-11, 3.12858101887, 32217.2001810808],
      [137e-11, 0.86487461904, 9924.8104215106],
      [172e-11, 1.98369595114, 174242.4659640497],
      [17e-10, 4.41115280254, 327574.51427678124],
      [128e-11, 4.49087631612, 31415.379249957],
      [151e-11, 0.46542092001, 39609.6545831656],
      [153e-11, 3.78801830344, 17363.24742890899],
      [165e-11, 5.31654110459, 16943.7627850338],
      [165e-11, 4.06747587817, 58953.145443294],
      [118e-11, 0.63846333239, 6.0659156298],
      [159e-11, 0.86086959274, 221995.02880149524],
      [119e-11, 5.96432932413, 1385.8952763362],
      [114e-11, 5.16516114595, 25685.872802808],
      [112e-11, 4.92889233335, 56.8032621698],
      [119e-11, 2.40626699328, 18635.9284545362],
      [115e-11, 0.23374479051, 418.9243989006],
      [113e-11, 2.7938757674, 6272.4391846416],
      [122e-11, 0.936940724, 24492.40611365159],
      [133e-11, 4.87155573413, 22345.2603761082],
      [113e-11, 3.80362889046, 6293.7125153412],
      [13e-10, 3.72996018683, 12573.2652469836],
      [107e-11, 3.40227152756, 21393.5419698576],
      [122e-11, 1.00385670948, 95143.1329209781],
      [14e-10, 1.094130757, 44809.6502008634],
      [112e-11, 6.05462382871, 433.7117378768],
      [123e-11, 4.55640196386, 239424.39025435288],
      [104e-11, 1.54931540602, 127.9515330346],
      [111e-11, 3.04186517428, 8982.810669309],
      [102e-11, 4.12448497391, 15664.03552270859],
      [107e-11, 4.67919356465, 77690.75950573849],
      [118e-11, 4.5232017012, 19004.6479494084],
      [107e-11, 5.71774478555, 77736.78343050249],
      [103e-11, 4.79332126649, 33794.5437235286],
      [143e-11, 1.81201813018, 4214.0690150848],
      [102e-11, 3.7581778657, 58864.5439181463],
      [125e-11, 1.14419195615, 625.6701923124],
      [124e-11, 3.27736513892, 12566.08438968],
      [11e-10, 1.08705709966, 2787.0430238574],
      [102e-11, 4.75119578149, 12242.6462833254],
      [101e-11, 4.91289409429, 401.6721217572],
      [138e-11, 2.89578979744, 9411.4646150872],
      [129e-11, 1.23516042371, 12029.3471878874],
      [138e-11, 2.45654707076, 7576.560073574],
      [98e-11, 5.4477176502, 29026.48522950779],
      [134e-11, 1.43105174912, 86464.6133168312],
      [108e-11, 0.9898977494, 5636.0650166766],
      [117e-11, 5.17362847134, 34520.3093093808],
      [97e-11, 3.34717130592, 16310.9790457206],
      [107e-11, 2.94547931851, 24602.61243487099],
      [98e-11, 4.37041908717, 34513.2630726828],
      [125e-11, 2.72182830814, 24065.80792277559],
      [111e-11, 0.58899131543, 6303.4311693902],
      [102e-11, 0.66938025772, 10239.5838660108],
      [119e-11, 1.21666517886, 1478.8665740644],
      [111e-11, 1.04321934681, 16522.6597160022],
      [94e-11, 4.31076339857, 26880.3198130326],
      [98e-11, 4.14248433763, 6599.467719648],
      [95e-11, 2.89807657534, 34911.412076091],
      [97e-11, 0.89642320201, 71980.63357473118],
      [95e-11, 0.65717727948, 6288.5987742988],
      [116e-11, 4.19967201116, 206.7007372966],
      [95e-11, 1.78315464297, 18139.2945014159],
      [99e-11, 1.37437847718, 1039.0266107904],
      [126e-11, 3.21642544972, 305281.9430710488],
      [94e-11, 0.6899503186, 7834.1210726394],
      [95e-11, 5.58111421744, 3104.9300594238],
      [108e-11, 0.52696637156, 276.7457718644],
      [124e-11, 3.43899862683, 172146.9713405403],
      [87e-11, 1.18764938806, 18842.11400297339],
      [87e-11, 0.09094166389, 15141.390794312],
      [108e-11, 1.03363414379, 82576.9812209953],
      [119e-11, 2.86729109648, 90394.82301305079],
      [104e-11, 3.39218586218, 290.972865866],
      [94e-11, 5.68284937444, 32367.0976562076],
      [117e-11, 0.78475956902, 83286.91426955358],
      [105e-11, 3.96551057233, 6357.8574485587],
      [94e-11, 4.03443174853, 13341.6743113068],
      [96e-11, 0.92742567538, 1062.9050485382],
      [89e-11, 4.45371820659, 792.7748884674],
      [87e-11, 0.40013481685, 90279.92316810328],
      [113e-11, 2.48165313368, 48739.859897083],
      [87e-11, 3.43122851097, 27707.5424942948],
      [101e-11, 5.32081603011, 2301.58581590939],
      [84e-11, 0.67020912458, 28628.3362260996],
      [82e-11, 0.87060089842, 10241.2022911672],
      [86e-11, 4.6206479229, 36147.4098773004],
      [8e-10, 4.77649625396, 6819.8803620868],
      [95e-11, 2.87032913492, 23020.65308658799],
      [107e-11, 5.77864921649, 34115.1140692746],
      [11e-10, 3.32898859416, 72140.6286666874],
      [87e-11, 4.40657711727, 142.1786270362],
      [103e-11, 4.2250672681, 30666.1549584328],
      [82e-11, 3.89404392552, 5547.1993364596],
      [109e-11, 1.94546065204, 24279.10701821359],
      [87e-11, 4.32472045435, 742.9900605326],
      [107e-11, 4.91580912547, 277.0349937414],
      [88e-11, 2.10180817713, 26482.1708096244],
      [86e-11, 4.01895021483, 12491.3701014155],
      [106e-11, 5.49092372854, 62883.3551395136],
      [8e-10, 6.1978570495, 6709.6740408674],
      [105e-11, 2.44166529175, 6298.3283211764],
      [83e-11, 4.90662164029, 51.28033786241],
      [74e-11, 2.34622575625, 7018.9523635232],
      [78e-11, 6.06947270265, 148434.53403769128],
      [79e-11, 3.03048221644, 838.9692877504],
      [73e-11, 3.05008665738, 567.7186377304],
      [102e-11, 3.59223815483, 22380.755800274],
      [84e-11, 0.46604373274, 45.1412196366],
      [92e-11, 4.12917744733, 18216.443810661],
      [91e-11, 0.49382398887, 6453.7487206106],
      [73e-11, 1.72446569088, 21424.4666443034],
      [69e-11, 1.4937267773, 21548.9623692918],
      [69e-11, 4.73181018058, 8858.3149443206],
      [77e-11, 0.47683782532, 11520.9968637952],
      [78e-11, 5.4394263099, 15265.8865193004],
      [77e-11, 2.53773750372, 76.2660712756],
      [69e-11, 2.53932635192, 9910.583327509],
      [75e-11, 0.1559472921, 23006.42599258639],
      [78e-11, 2.41004950269, 6393.2821712108],
      [67e-11, 5.05152846816, 57375.8019008462],
      [77e-11, 3.9107560486, 24383.0791084414],
      [67e-11, 0.78239147387, 12779.4507954208],
      [71e-11, 1.24817900687, 10419.9862835076],
      [67e-11, 5.7785122776, 6311.5250374592],
      [61e-11, 2.66705754411, 18852.7506683232],
      [79e-11, 1.89137330427, 6528.9074962208],
      [84e-11, 5.11523704221, 50317.2034395308],
      [59e-11, 3.38290426621, 35707.7100829074],
      [65e-11, 4.66767908854, 26709.6469424134],
      [79e-11, 5.59773848156, 71960.38658322369],
      [61e-11, 3.30733768968, 18845.7044316252],
      [57e-11, 3.90831298022, 5999.2165311262],
      [58e-11, 3.92572820333, 30348.883772767],
      [61e-11, 0.05695045822, 7856.89627409019],
      [61e-11, 5.63297960691, 7863.9425107882],
      [68e-11, 2.53986117507, 20452.8694122218],
      [53e-11, 5.44021645443, 32370.9789915656],
      [59e-11, 4.95695131145, 11925.2740926006],
      [59e-11, 5.34668243273, 137288.2484348251],
      [56e-11, 4.05779957425, 17892.93839400359],
      [53e-11, 3.94182462468, 18624.8827542723],
      [49e-11, 2.11782803206, 22594.05489571199],
      [62e-11, 2.47154086715, 12345.739057544],
      [49e-11, 5.7659693738, 18606.4989460002],
      [52e-11, 6.20902099741, 21947.1113727],
      [51e-11, 3.13287981215, 33326.5787331742],
      [57e-11, 6.17003357597, 61306.0115970658],
      [64e-11, 5.66596451842, 34596.3646546524],
      [66e-11, 3.922623355, 69853.3520756813],
      [53e-11, 5.51119362049, 77710.24834977149],
      [53e-11, 4.88573986965, 77717.29458646949],
      [48e-11, 2.71399112516, 20760.4270331914],
      [46e-11, 6.08376164442, 29822.7832363242],
      [52e-11, 0.3139748138, 37724.7534197482],
      [45e-11, 5.53587248663, 6262.7205305926],
      [59e-11, 2.45437896854, 69166.430989505],
      [6e-10, 5.24261569842, 56600.2792895222],
      [51e-11, 6.15794342172, 11616.976091013],
      [6e-10, 1.74758109828, 44034.1275895394],
      [49e-11, 5.08973141046, 33990.6183442862],
      [44e-11, 3.28270864884, 29424.634232916],
      [52e-11, 5.34866947943, 28313.288804661],
      [59e-11, 2.12384971916, 36173.7081971002],
      [5e-10, 0.46480931695, 25287.7237993998],
      [44e-11, 2.0550351721, 63658.8777508376],
      [44e-11, 1.71009200258, 13362.4497067992],
      [41e-11, 3.91721318316, 6279.1945146334],
      [42e-11, 1.52106001448, 23550.34405168259],
      [42e-11, 3.10938258068, 84672.47584450469],
      [41e-11, 3.78863023321, 35050.00027447539],
      [42e-11, 5.57543459263, 38500.2760310722],
      [4e-10, 5.55145719363, 12565.1713789146],
      [54e-11, 0.889354921, 50290.905119731],
      [55e-11, 2.50268487636, 77828.671313068],
      [54e-11, 4.16257918787, 22910.44676536859],
      [41e-11, 2.32141215064, 6286.9571853494],
      [45e-11, 3.18590576311, 45585.1728121874],
      [45e-11, 2.24348941683, 23646.32327890039],
      [43e-11, 3.8789211095, 6549.6828917132],
      [48e-11, 2.11364139445, 31570.7996493912],
      [43e-11, 5.55099558987, 12359.9661515456],
      [41e-11, 4.88191569433, 23536.11695768099],
      [49e-11, 2.44790922235, 13613.804277336],
      [47e-11, 3.5818169391, 4797.0957289262]
    ],
    "1": [
      [6283.0758499914, 0, 0],
      [0.00206058863, 2.67823455808, 6283.0758499914],
      [4303419e-11, 2.63512233481, 12566.1516999828],
      [425264e-11, 1.59046982018, 3.523118349],
      [109017e-11, 2.96631010675, 1577.3435424478],
      [93479e-11, 2.59211109542, 18849.2275499742],
      [119305e-11, 5.79555765566, 26.2983197998],
      [72121e-11, 1.13840581212, 529.6909650946],
      [67784e-11, 1.87453300345, 398.1490034082],
      [6735e-10, 4.40932832004, 5507.5532386674],
      [59045e-11, 2.88815790631, 5223.6939198022],
      [55976e-11, 2.17471740035, 155.4203994342],
      [45411e-11, 0.39799502896, 796.2980068164],
      [36298e-11, 0.46875437227, 775.522611324],
      [28962e-11, 2.64732254645, 7.1135470008],
      [19097e-11, 1.84628376049, 5486.777843175],
      [20844e-11, 5.34138275149, 0.9803210682],
      [18508e-11, 4.96855179468, 213.299095438],
      [16233e-11, 0.03216587315, 2544.3144198834],
      [17293e-11, 2.9911676063, 6275.9623029906],
      [15832e-11, 1.43049301283, 2146.1654164752],
      [14608e-11, 1.2046979369, 10977.078804699],
      [11877e-11, 3.25805082007, 5088.6288397668],
      [11514e-11, 2.07502080082, 4694.0029547076],
      [9721e-11, 4.2392586526, 1349.8674096588],
      [9969e-11, 1.30263423409, 6286.5989683404],
      [9452e-11, 2.69956827011, 242.728603974],
      [12461e-11, 2.83432282119, 1748.016413067],
      [11808e-11, 5.27379760438, 1194.4470102246],
      [8577e-11, 5.6447608598, 951.7184062506],
      [10641e-11, 0.76614722966, 553.5694028424],
      [7576e-11, 5.30056172859, 2352.8661537718],
      [5764e-11, 1.77228445837, 1059.3819301892],
      [6385e-11, 2.65034514038, 9437.762934887],
      [5223e-11, 5.66135782131, 71430.69561812909],
      [5315e-11, 0.91110018969, 3154.6870848956],
      [6101e-11, 4.66633726278, 4690.4798363586],
      [4335e-11, 0.23934560382, 6812.766815086],
      [5041e-11, 1.42489704722, 6438.4962494256],
      [4259e-11, 0.77355543889, 10447.3878396044],
      [52e-9, 1.85528830215, 801.8209311238],
      [3744e-11, 2.00119905572, 8031.0922630584],
      [3553e-11, 2.42789590229, 14143.4952424306],
      [3372e-11, 3.86210786421, 1592.5960136328],
      [338e-10, 0.88545388924, 12036.4607348882],
      [3196e-11, 3.19713328141, 4705.7323075436],
      [3221e-11, 0.6160104899, 8429.2412664666],
      [4132e-11, 5.23992584671, 7084.8967811152],
      [297e-10, 6.07029819073, 4292.3308329504],
      [29e-9, 2.32464208411, 20.3553193988],
      [3504e-11, 4.79976712702, 6279.5527316424],
      [295e-10, 1.43108874817, 5746.271337896],
      [2697e-11, 4.80365209201, 7234.794256242],
      [2531e-11, 6.22289990904, 6836.6452528338],
      [2745e-11, 0.93466065396, 5760.4984318976],
      [325e-10, 3.39951915286, 7632.9432596502],
      [2278e-11, 5.00339914806, 17789.845619785],
      [2076e-11, 3.95551309007, 10213.285546211],
      [2061e-11, 2.2240771919, 5856.4776591154],
      [2252e-11, 5.67166717686, 11499.6562227928],
      [2148e-11, 5.20182663314, 11513.8833167944],
      [1886e-11, 0.53198539077, 3340.6124266998],
      [1875e-11, 4.73511969924, 83996.84731811189],
      [206e-10, 2.54985307819, 25132.3033999656],
      [1794e-11, 1.47435300254, 4164.311989613],
      [1778e-11, 3.02473091781, 5.5229243074],
      [2036e-11, 0.90908165072, 6256.7775301916],
      [2064e-11, 2.27051326957, 522.5774180938],
      [1773e-11, 3.03090500693, 5753.3848848968],
      [1569e-11, 6.12406216872, 5216.5803728014],
      [159e-10, 4.63713748247, 3.2863574178],
      [1533e-11, 4.20305593883, 13367.9726311066],
      [1427e-11, 1.19087535126, 3894.1818295422],
      [1376e-11, 4.24955891338, 426.598190876],
      [1375e-11, 3.09301252193, 135.0650800354],
      [1308e-11, 3.0849213889, 5643.1785636774],
      [134e-10, 5.76513167968, 6040.3472460174],
      [125e-10, 3.07748196332, 11926.2544136688],
      [1551e-11, 3.07664090662, 6681.2248533996],
      [1148e-11, 3.24144202282, 12168.0026965746],
      [1268e-11, 2.09201189992, 6290.1893969922],
      [1248e-11, 3.44506939791, 536.8045120954],
      [1118e-11, 2.31830078762, 16730.4636895958],
      [1105e-11, 5.31966001019, 23.8784377478],
      [1012e-11, 3.74953487087, 7860.4193924392],
      [1025e-11, 2.4468377161, 1990.745017041],
      [962e-11, 0.81771017882, 3.881335358],
      [911e-11, 0.41724352112, 7079.3738568078],
      [1091e-11, 3.98233608618, 11506.7697697936],
      [957e-11, 4.07671436153, 6127.6554505572],
      [835e-11, 5.28348689371, 11790.6290886588],
      [802e-11, 3.88779080089, 10973.55568635],
      [773e-11, 2.41044394817, 1589.0728952838],
      [758e-11, 1.30034365873, 103.0927742186],
      [749e-11, 4.96281442361, 6496.3749454294],
      [765e-11, 3.36312388424, 36.0278666774],
      [915e-11, 5.41549763095, 206.1855484372],
      [776e-11, 2.57589060224, 11371.7046897582],
      [772e-11, 3.98363364977, 955.5997416086],
      [749e-11, 5.17900231417, 10969.9652576982],
      [806e-11, 0.34226117299, 9917.6968745098],
      [728e-11, 5.20962563787, 38.0276726358],
      [685e-11, 2.77592961854, 20.7753954924],
      [636e-11, 4.28242193632, 28.4491874678],
      [608e-11, 5.63278510221, 10984.1923516998],
      [704e-11, 5.60739437733, 3738.761430108],
      [685e-11, 0.38876148682, 15.252471185],
      [601e-11, 0.73489602442, 419.4846438752],
      [716e-11, 2.65286869987, 6309.3741697912],
      [584e-11, 5.54508741381, 17298.1823273262],
      [628e-11, 1.11733054796, 7058.5984613154],
      [688e-11, 2.59684132401, 3496.032826134],
      [485e-11, 0.44470714066, 12352.8526045448],
      [562e-11, 2.82510352358, 3930.2096962196],
      [597e-11, 5.27675789973, 10575.4066829418],
      [583e-11, 3.1893153986, 4732.0306273434],
      [526e-11, 5.01737745304, 5884.9268465832],
      [54e-10, 1.29182747488, 640.8776073822],
      [481e-11, 5.49721461067, 5230.807466803],
      [406e-11, 5.21253018484, 220.4126424388],
      [395e-11, 1.87489912123, 16200.7727245012],
      [367e-11, 0.88533542945, 6283.14316029419],
      [369e-11, 3.84778078192, 18073.7049386502],
      [379e-11, 0.37991716505, 10177.2576795336],
      [356e-11, 3.84152910109, 11712.9553182308],
      [374e-11, 5.01577520608, 7.046236698],
      [381e-11, 4.30250406634, 6062.6632075526],
      [471e-11, 0.86388942467, 6069.7767545534],
      [367e-11, 1.3294383993, 6283.0085396886],
      [46e-10, 5.19667219582, 6284.0561710596],
      [333e-11, 5.54250425107, 4686.8894077068],
      [341e-11, 4.36524495363, 7238.6755916],
      [336e-11, 4.00205876835, 3097.88382272579],
      [359e-11, 6.22679790284, 245.8316462294],
      [307e-11, 2.35299010924, 170.6728706192],
      [343e-11, 3.77164927142, 6076.8903015542],
      [296e-11, 5.44138799494, 17260.1546546904],
      [328e-11, 0.13817705132, 11015.1064773348],
      [269e-11, 1.13308244952, 12569.6748183318],
      [263e-11, 0.0055073751, 4136.9104335162],
      [282e-11, 5.04399588559, 7477.522860216],
      [28e-10, 3.13703211405, 12559.038152982],
      [259e-11, 0.93882269388, 5642.1982426092],
      [292e-11, 1.98426314297, 12132.439962106],
      [247e-11, 3.84244798673, 5429.8794682394],
      [319e-11, 5.0417014879, 90617.7374312997],
      [245e-11, 5.70469737024, 65147.6197681377],
      [318e-11, 1.35581968834, 78051.5857313169],
      [241e-11, 0.99469787369, 3634.6210245184],
      [246e-11, 3.06168069393, 110.2063212194],
      [239e-11, 6.11854529589, 11856.2186514245],
      [267e-11, 0.65297608414, 21228.3920235458],
      [262e-11, 1.51070507866, 12146.6670561076],
      [23e-10, 1.75923794017, 9779.1086761254],
      [223e-11, 2.00967043606, 6172.869528772],
      [246e-11, 1.10411690861, 6282.0955289232],
      [214e-11, 4.03840492266, 14314.1681130498],
      [212e-11, 2.13695623228, 5849.3641121146],
      [207e-11, 3.07724246401, 11.729352836],
      [207e-11, 6.10303325026, 23543.23050468179],
      [266e-11, 1.00720021877, 2388.8940204492],
      [217e-11, 6.27840212312, 17267.26820169119],
      [231e-11, 5.37372783468, 13916.0191096416],
      [204e-11, 2.34615348695, 266.6070417218],
      [195e-11, 5.55015549753, 6133.5126528568],
      [203e-11, 4.65616806503, 24072.9214697764],
      [188e-11, 2.52682282169, 6525.8044539654],
      [177e-11, 1.73426919199, 154717.6098876827],
      [187e-11, 4.76501318048, 4535.0594369244],
      [186e-11, 4.63080493407, 10440.2742926036],
      [183e-11, 3.20060840641, 8635.9420037632],
      [172e-11, 1.45551703877, 9225.539273283],
      [162e-11, 3.30665137166, 639.897286314],
      [168e-11, 2.17671416605, 27.4015560968],
      [16e-10, 1.6816871275, 15110.4661198662],
      [194e-11, 2.79243768345, 7342.4577801806],
      [183e-11, 0.56273524797, 13517.8701062334],
      [172e-11, 5.97039514134, 4701.1165017084],
      [179e-11, 3.58450811616, 87.30820453981],
      [152e-11, 2.84070476839, 5650.2921106782],
      [156e-11, 1.07156076421, 18319.5365848796],
      [182e-11, 0.44053620124, 17253.04110768959],
      [142e-11, 1.4629013752, 11087.2851259184],
      [131e-11, 5.40912137746, 2699.7348193176],
      [144e-11, 2.07312089638, 25158.6017197654],
      [147e-11, 6.15107800602, 9623.6882766912],
      [141e-11, 5.55739979498, 10454.5013866052],
      [135e-11, 0.0609812943, 16723.350142595],
      [123e-11, 5.81194797368, 17256.6315363414],
      [124e-11, 2.36269386269, 4933.2084403326],
      [126e-11, 3.47483886466, 22483.84857449259],
      [159e-11, 5.63944722033, 5729.506447149],
      [137e-11, 1.93811728826, 20426.571092422],
      [123e-11, 3.92815962825, 17996.0311682222],
      [148e-11, 3.02542567608, 1551.045222648],
      [121e-11, 0.05537321071, 13095.8426650774],
      [12e-10, 5.91904349732, 6206.8097787158],
      [134e-11, 3.11122937825, 21954.15760939799],
      [119e-11, 5.52143897201, 709.9330485583],
      [122e-11, 3.00840036775, 19800.9459562248],
      [127e-11, 1.37534182407, 14945.3161735544],
      [141e-11, 2.56886299638, 1052.2683831884],
      [123e-11, 2.83671175442, 11919.140866668],
      [118e-11, 0.81918292547, 5331.3574437408],
      [151e-11, 2.68728567951, 11769.8536931664],
      [119e-11, 5.08654046247, 5481.2549188676],
      [113e-11, 4.42675663942, 18422.62935909819],
      [153e-11, 2.46021790779, 11933.3679606696],
      [108e-11, 1.04936452151, 11403.676995575],
      [128e-11, 0.99810456461, 8827.3902698748],
      [144e-11, 2.54869747042, 227.476132789],
      [15e-10, 4.50631437136, 2379.1644735716],
      [109e-11, 0.29269062317, 16737.5772365966],
      [122e-11, 4.23040027813, 29.429508536],
      [111e-11, 5.16970710025, 17782.7320727842],
      [105e-11, 1.61738153441, 13119.72110282519],
      [1e-9, 3.52204690579, 18052.9295431578],
      [108e-11, 1.08493117155, 16858.4825329332],
      [135e-11, 3.2016061697, 6262.300454499],
      [106e-11, 1.96085069786, 74.7815985673],
      [129e-11, 4.85949366504, 16496.3613962024],
      [11e-10, 2.30605777952, 16460.33352952499],
      [97e-11, 3.5091894021, 5333.9002410216],
      [99e-11, 3.56417337974, 735.8765135318],
      [96e-11, 3.40918487598, 15720.8387848784],
      [94e-11, 5.01601027363, 3128.3887650958],
      [97e-11, 1.65579893894, 533.2140834436],
      [92e-11, 0.89219199493, 29296.6153895786],
      [123e-11, 3.16062062663, 9380.9596727172],
      [102e-11, 1.20493500565, 23020.65308658799],
      [88e-11, 2.21265504437, 12721.572099417],
      [89e-11, 1.5432266957, 20199.094959633],
      [121e-11, 6.19860353182, 9388.0059094152],
      [89e-11, 4.08082274765, 22805.7355659936],
      [98e-11, 1.09176668094, 12043.574281889],
      [86e-11, 1.13649001466, 143571.32428481648],
      [88e-11, 5.96980472191, 107.6635239386],
      [82e-11, 5.01561173481, 22003.9146348698],
      [94e-11, 1.69615700473, 23006.42599258639],
      [81e-11, 3.00664741995, 2118.7638603784],
      [98e-11, 1.39215287161, 8662.240323563],
      [8e-10, 5.16340988714, 17796.9591667858],
      [82e-11, 5.86893959287, 2787.0430238574],
      [77e-11, 0.80723694712, 167283.7615876655],
      [91e-11, 5.74902425304, 21424.4666443034],
      [76e-11, 5.67183650604, 14.2270940016],
      [81e-11, 6.16619455699, 1039.0266107904],
      [76e-11, 3.21449884756, 111.1866422876],
      [78e-11, 1.37531518377, 21947.1113727],
      [74e-11, 3.58814195051, 11609.8625440122],
      [77e-11, 4.84846488388, 22743.4093795164],
      [9e-10, 1.48869013606, 15671.0817594066],
      [82e-11, 3.48618398216, 29088.811415985],
      [71e-11, 2.2159156119, 12029.3471878874],
      [69e-11, 1.93625656075, 135.62532501],
      [7e-10, 2.66552760898, 18875.525869774],
      [69e-11, 5.41478093731, 26735.9452622132],
      [79e-11, 5.15158156951, 12323.4230960088],
      [78e-11, 4.17014063638, 1066.49547719],
      [65e-11, 5.64584720343, 12139.5535091068],
      [71e-11, 3.89804774037, 22779.4372461938],
      [63e-11, 4.53968787714, 8982.810669309],
      [76e-11, 3.29088891716, 2942.4634232916],
      [69e-11, 0.94232113005, 14919.0178537546],
      [63e-11, 4.0918653549, 16062.1845261168],
      [65e-11, 3.34580407184, 51.28033786241],
      [65e-11, 5.75757544877, 52670.0695933026],
      [57e-11, 5.25050277534, 20995.3929664494],
      [61e-11, 1.92290673861, 6805.6532680852],
      [61e-11, 0.08878901558, 13362.4497067992],
      [76e-11, 1.86947679415, 25287.7237993998],
      [56e-11, 4.25396542622, 6709.6740408674],
      [58e-11, 4.79429715781, 6286.3622074092],
      [73e-11, 0.53299090807, 2301.58581590939],
      [7e-10, 4.31243357502, 19402.7969528166],
      [67e-11, 2.53852336668, 377.3736079158],
      [56e-11, 3.20816844695, 24889.5747959916],
      [54e-11, 5.17336469511, 26084.0218062162],
      [53e-11, 3.17675406016, 18451.07854656599],
      [53e-11, 3.61529270216, 77.673770428],
      [53e-11, 0.45467549335, 30666.1549584328],
      [53e-11, 2.97761644192, 21548.9623692918],
      [61e-11, 0.14805728543, 23013.5395395872],
      [51e-11, 3.32803972907, 56.8983749356],
      [52e-11, 3.41304011355, 23141.5583829246],
      [58e-11, 3.13638677202, 309.2783226558],
      [54e-11, 1.60896548545, 13341.6743113068],
      [53e-11, 5.81426394852, 16193.65917750039],
      [67e-11, 6.27917920454, 22345.2603761082],
      [5e-10, 0.42577644151, 25685.872802808],
      [48e-11, 0.70204553352, 1162.4747044078],
      [66e-11, 3.64350022359, 15265.8865193004],
      [5e-10, 5.7438291744, 19.66976089979],
      [54e-11, 1.97277370837, 23581.2581773176],
      [51e-11, 1.23713196525, 12539.853380183],
      [46e-11, 5.41431704639, 33019.0211122046],
      [46e-11, 4.80640843261, 19651.048481098],
      [5e-10, 1.23847511223, 22476.73502749179],
      [51e-11, 4.91913434178, 12592.4500197826],
      [46e-11, 2.41369976086, 98068.53671630539],
      [45e-11, 3.45227074337, 30774.5016425748],
      [45e-11, 4.39659083856, 433.7117378768],
      [45e-11, 3.71921056816, 18209.33026366019],
      [44e-11, 2.47683925106, 24356.7807886416],
      [49e-11, 2.17835058609, 13521.7514415914],
      [46e-11, 0.26142733448, 11.0457002639],
      [45e-11, 2.46230645202, 51868.2486621788],
      [43e-11, 4.29458463014, 28230.18722269139],
      [48e-11, 0.89551707131, 56600.2792895222],
      [42e-11, 3.63410684699, 4590.910180489],
      [49e-11, 3.17757670967, 6303.8512454838],
      [43e-11, 4.93350349236, 10021.8372800994],
      [52e-11, 3.65410195699, 7872.1487452752],
      [41e-11, 4.82166756935, 10988.808157535],
      [4e-10, 1.81891629936, 34596.3646546524],
      [43e-11, 1.94164978061, 1903.4368125012],
      [41e-11, 0.74461854136, 23937.856389741],
      [45e-11, 5.4557501753, 60530.4889857418],
      [5e-10, 5.67355640472, 18216.443810661],
      [4e-10, 0.04502010161, 38526.574350872],
      [53e-11, 3.64807615995, 11925.2740926006],
      [42e-11, 5.19292937193, 19004.6479494084],
      [41e-11, 0.94309683296, 9924.8104215106],
      [39e-11, 4.61184303844, 95.9792272178],
      [49e-11, 2.05532526216, 12573.2652469836],
      [45e-11, 3.73717824543, 7875.6718636242],
      [43e-11, 1.14078465002, 49.7570254718],
      [39e-11, 1.70539366023, 32217.2001810808],
      [37e-11, 1.29390383811, 310.8407988684],
      [38e-11, 0.9597092595, 664.75604513],
      [39e-11, 0.85957361635, 16522.6597160022],
      [4e-10, 1.00170796001, 36949.2308084242],
      [4e-10, 3.78164718776, 55798.4583583984],
      [37e-11, 5.42237070904, 6286.6662786432],
      [36e-11, 1.68167662194, 10344.2950653858],
      [4e-10, 5.13217319067, 15664.03552270859],
      [49e-11, 3.62741283878, 77713.7714681205],
      [45e-11, 6.15877872538, 28286.9904848612],
      [36e-11, 3.32158458257, 16207.886271502],
      [35e-11, 5.83917764292, 6321.1035226272],
      [36e-11, 1.80784164083, 6279.7894925736],
      [35e-11, 4.60279245362, 28237.2334593894],
      [33e-11, 0.47301775923, 18635.9284545362],
      [35e-11, 4.36571027474, 48739.859897083],
      [31e-11, 3.06828028412, 6819.8803620868],
      [31e-11, 2.4020319848, 28628.3362260996],
      [34e-11, 1.90096411242, 12964.300703391],
      [29e-11, 6.09291010354, 18606.4989460002],
      [28e-11, 3.42046112698, 6288.5987742988],
      [28e-11, 3.437361406, 34115.1140692746],
      [29e-11, 1.48920816078, 6489.2613984286],
      [28e-11, 3.07474749886, 29822.7832363242],
      [38e-11, 2.44608264663, 31415.379249957],
      [28e-11, 2.98392582088, 6277.552925684],
      [27e-11, 5.03556015623, 12779.4507954208],
      [27e-11, 5.40812977287, 26087.9031415742],
      [38e-11, 5.56439937893, 27832.0382192832],
      [26e-11, 3.87685883153, 6262.7205305926],
      [27e-11, 6.1556539284, 28759.81087748319],
      [25e-11, 5.17122153205, 6915.8595893046],
      [27e-11, 4.03132006944, 9910.583327509],
      [33e-11, 3.97763407373, 12410.7313005486],
      [24e-11, 5.31307120044, 29026.48522950779],
      [25e-11, 0.81055213297, 36173.7081971002],
      [24e-11, 1.2870610131, 24491.4257925834],
      [21e-11, 2.02548478742, 28766.924424484],
      [21e-11, 6.07545114034, 18139.2945014159],
      [22e-11, 2.31199937131, 6303.4311693902],
      [23e-11, 1.35235057478, 49515.382508407],
      [23e-11, 2.92765926961, 65236.2212932854],
      [19e-11, 0.03636659763, 29864.334027309],
      [2e-10, 0.91374066194, 45585.1728121874],
      [21e-11, 4.45003013294, 22490.9621214934],
      [22e-11, 1.97119365888, 34513.2630726828],
      [2e-10, 4.11682669951, 17157.0618804718],
      [24e-11, 1.40243942415, 14712.317116458],
      [22e-11, 2.19759737115, 31570.7996493912],
      [21e-11, 1.48739821208, 61306.0115970658],
      [25e-11, 5.71465573409, 25934.1243310894]
    ],
    "2": [
      [8721859e-11, 1.07253635559, 6283.0758499914],
      [99099e-10, 3.14159265359, 0],
      [294833e-11, 0.43717350256, 12566.1516999828],
      [27338e-11, 0.05295636147, 3.523118349],
      [16333e-11, 5.18820215724, 26.2983197998],
      [15745e-11, 3.68504712183, 155.4203994342],
      [9425e-11, 0.29667114694, 18849.2275499742],
      [8938e-11, 2.05706319592, 77713.7714681205],
      [694e-10, 0.82691541038, 775.522611324],
      [5061e-11, 4.6624323168, 1577.3435424478],
      [406e-10, 1.03067032318, 7.1135470008],
      [3464e-11, 5.14021224609, 796.2980068164],
      [3172e-11, 6.05479318507, 5507.5532386674],
      [302e-10, 1.19240008524, 242.728603974],
      [2885e-11, 6.11705865396, 529.6909650946],
      [3809e-11, 3.44043369494, 5573.1428014331],
      [2719e-11, 0.30363248164, 398.1490034082],
      [2365e-11, 4.37666117992, 5223.6939198022],
      [2538e-11, 2.27966434314, 553.5694028424],
      [2078e-11, 3.75435095487, 0.9803210682],
      [1675e-11, 0.90149951436, 951.7184062506],
      [1534e-11, 5.75895831192, 1349.8674096588],
      [1224e-11, 2.97285792195, 2146.1654164752],
      [1449e-11, 4.36401639552, 1748.016413067],
      [1341e-11, 3.72019379666, 1194.4470102246],
      [1253e-11, 2.9488872631, 6438.4962494256],
      [999e-11, 5.98665341008, 6286.5989683404],
      [917e-11, 4.79722195184, 5088.6288397668],
      [829e-11, 3.31021398862, 213.299095438],
      [1102e-11, 1.27094359244, 161000.6857376741],
      [764e-11, 3.41231607038, 5486.777843175],
      [1046e-11, 0.60374190029, 3154.6870848956],
      [887e-11, 5.23364022595, 7084.8967811152],
      [644e-11, 1.59974355582, 2544.3144198834],
      [681e-11, 3.42742947469, 4694.0029547076],
      [606e-11, 2.47688996663, 10977.078804699],
      [706e-11, 6.19369692903, 4690.4798363586],
      [643e-11, 1.98119869589, 801.8209311238],
      [502e-11, 1.44415463861, 6836.6452528338],
      [49e-10, 2.33889753806, 1592.5960136328],
      [458e-11, 1.30867922972, 4292.3308329504],
      [431e-11, 0.03542536476, 7234.794256242],
      [349e-11, 0.98779272263, 6040.3472460174],
      [385e-11, 1.57065592218, 71430.69561812909],
      [371e-11, 3.16149051601, 6309.3741697912],
      [348e-11, 0.64980950594, 1059.3819301892],
      [458e-11, 3.81505682017, 149854.4001348079],
      [302e-11, 1.91723873447, 10447.3878396044],
      [306e-11, 3.55405857884, 8031.0922630584],
      [395e-11, 4.93742673052, 7632.9432596502],
      [314e-11, 3.18058352846, 2352.8661537718],
      [281e-11, 4.41751404023, 9437.762934887],
      [276e-11, 2.71075791682, 3894.1818295422],
      [298e-11, 2.52045757001, 6127.6554505572],
      [272e-11, 0.24370191144, 25132.3033999656],
      [251e-11, 0.55449375765, 6279.5527316424],
      [224e-11, 1.40790249012, 4705.7323075436],
      [258e-11, 5.29510765044, 6812.766815086],
      [178e-11, 0.92636669742, 1990.745017041],
      [217e-11, 0.68543630022, 6256.7775301916],
      [154e-11, 0.77808632062, 14143.4952424306],
      [15e-10, 2.40636982736, 426.598190876],
      [196e-11, 6.06877865012, 640.8776073822],
      [137e-11, 2.21947617717, 8429.2412664666],
      [127e-11, 5.47380312768, 12036.4607348882],
      [121e-11, 3.32740512021, 17789.845619785],
      [123e-11, 2.16004509785, 10213.285546211],
      [116e-11, 0.49705139709, 7058.5984613154],
      [138e-11, 2.36181661472, 11506.7697697936],
      [101e-11, 0.86299995919, 6290.1893969922],
      [118e-11, 5.82317768355, 7860.4193924392],
      [92e-11, 5.11639978593, 7079.3738568078],
      [125e-11, 2.65424538513, 88860.05707098669],
      [88e-11, 4.3118823616, 83996.84731811189],
      [84e-11, 3.57682769713, 16730.4636895958],
      [97e-11, 5.58011309774, 13367.9726311066],
      [102e-11, 2.05853060226, 87.30820453981],
      [8e-10, 4.73827128421, 11926.2544136688],
      [8e-10, 5.41344057121, 10973.55568635],
      [106e-11, 4.10978997399, 3496.032826134],
      [75e-11, 4.89166898876, 5643.1785636774],
      [1e-9, 3.62645659087, 244287.60000722768],
      [96e-11, 1.39443577787, 6681.2248533996],
      [69e-11, 1.88399189965, 10177.2576795336],
      [87e-11, 0.40842153208, 11015.1064773348],
      [66e-11, 0.99444831932, 6525.8044539654],
      [66e-11, 1.42471816453, 9917.6968745098],
      [67e-11, 5.5124099707, 3097.88382272579],
      [76e-11, 2.7156469351, 4164.311989613],
      [85e-11, 0.4965552367, 10575.4066829418],
      [77e-11, 3.51693861509, 11856.2186514245],
      [62e-11, 3.6258762869, 16496.3613962024],
      [54e-11, 5.25957420065, 3340.6124266998],
      [53e-11, 1.10902178415, 8635.9420037632],
      [49e-11, 5.65761054625, 20426.571092422],
      [64e-11, 5.79211164779, 2388.8940204492],
      [46e-11, 5.45092696155, 6275.9623029906],
      [57e-11, 4.97077155798, 14945.3161735544],
      [43e-11, 3.30685683359, 9779.1086761254],
      [42e-11, 1.61412785248, 12168.0026965746],
      [49e-11, 3.92715473768, 5729.506447149],
      [42e-11, 0.6348125893, 2699.7348193176],
      [56e-11, 4.34038639086, 90955.5516944961],
      [4e-10, 5.66871428338, 11712.9553182308],
      [39e-11, 3.10911294009, 16200.7727245012],
      [4e-10, 5.71338386146, 709.9330485583],
      [53e-11, 6.17067257683, 233141.3144043615],
      [37e-11, 0.32095173508, 24356.7807886416],
      [35e-11, 0.95557073457, 17298.1823273262],
      [35e-11, 0.64913397996, 25158.6017197654],
      [41e-11, 1.53850422484, 65147.6197681377],
      [35e-11, 0.77655626359, 13916.0191096416],
      [31e-11, 5.35897350775, 5331.3574437408],
      [3e-10, 4.48114682755, 23543.23050468179],
      [32e-11, 3.45976963453, 7477.522860216],
      [29e-11, 3.46648040769, 13119.72110282519],
      [38e-11, 2.90863974625, 12721.572099417],
      [29e-11, 3.13390968321, 4136.9104335162],
      [35e-11, 3.79717126309, 143571.32428481648],
      [27e-11, 0.95726093828, 12559.038152982],
      [26e-11, 4.9532687703, 5753.3848848968],
      [32e-11, 3.49943896928, 6284.0561710596],
      [26e-11, 4.59276256636, 5884.9268465832],
      [26e-11, 1.53958920253, 154717.6098876827],
      [23e-11, 4.88012908735, 13095.8426650774],
      [23e-11, 0.35935706511, 31415.379249957],
      [24e-11, 5.11515116629, 18319.5365848796],
      [21e-11, 5.73872879912, 12569.6748183318],
      [21e-11, 1.32901200081, 10988.808157535],
      [19e-11, 2.24263229491, 18073.7049386502],
      [19e-11, 3.14253175605, 6496.3749454294],
      [21e-11, 2.80122025076, 6282.0955289232],
      [23e-11, 0.14288760398, 6283.0085396886],
      [19e-11, 4.28209473754, 3930.2096962196],
      [16e-11, 0.25933207663, 11790.6290886588],
      [15e-11, 6.0962350124, 13517.8701062334],
      [2e-10, 5.06358906224, 6283.14316029419],
      [15e-11, 1.0768066315, 4933.2084403326],
      [19e-11, 5.74000581249, 3128.3887650958],
      [16e-11, 6.18924226747, 7342.4577801806],
      [13e-11, 1.69105044945, 4535.0594369244],
      [15e-11, 3.36968394452, 17260.1546546904],
      [1e-10, 3.78885035015, 22003.9146348698],
      [11e-11, 2.12851973876, 7875.6718636242]
    ],
    "3": [
      [289058e-11, 5.84173149732, 6283.0758499914],
      [20712e-11, 6.0498393902, 12566.1516999828],
      [2962e-11, 5.1956057957, 155.4203994342],
      [2527e-11, 3.14159265359, 0],
      [1288e-11, 4.7219761197, 3.523118349],
      [635e-11, 5.96904899168, 242.728603974],
      [57e-10, 5.54182903238, 18849.2275499742],
      [402e-11, 3.78606612895, 553.5694028424],
      [72e-11, 4.37131884946, 6286.5989683404],
      [67e-11, 0.91133898967, 6127.6554505572],
      [37e-11, 5.28611190997, 6438.4962494256],
      [21e-11, 2.94917211527, 6309.3741697912],
      [15e-11, 3.63037493932, 71430.69561812909],
      [11e-11, 4.83261533939, 25132.3033999656],
      [11e-11, 5.84259014283, 6525.8044539654],
      [12e-11, 3.82296977522, 7058.5984613154],
      [13e-11, 2.39991715131, 5729.506447149],
      [8e-11, 0.55390332094, 6040.3472460174],
      [8e-11, 1.46298993048, 11856.2186514245],
      [8e-11, 5.07535888338, 6256.7775301916],
      [6e-11, 2.88803526743, 5507.5532386674],
      [5e-11, 3.87019253131, 12036.4607348882],
      [5e-11, 2.70838853362, 83996.84731811189]
    ],
    "4": [
      [7714e-11, 4.14117321449, 6283.0758499914],
      [1016e-11, 3.27573644241, 12566.1516999828],
      [42e-10, 0.41892851415, 155.4203994342],
      [47e-11, 3.50591071186, 18849.2275499742],
      [41e-11, 3.14032562331, 3.523118349],
      [35e-11, 5.0111077, 5573.1428014331],
      [1e-10, 5.64816633449, 6127.6554505572],
      [13e-11, 0.48609240774, 77713.7714681205],
      [7e-11, 2.84139222289, 161000.6857376741],
      [4e-11, 3.6550904707, 25132.3033999656],
      [2e-11, 0.54880603487, 6438.4962494256]
    ],
    "5": [
      [172e-11, 2.74854172392, 6283.0758499914],
      [5e-10, 2.01352986713, 155.4203994342],
      [28e-11, 2.93369985477, 12566.1516999828],
      [5e-11, 1.93829214518, 18849.2275499742]
    ]
  },
  B: {
    "0": [
      [27962e-10, 3.19870156017, 84334.66158130829],
      [101643e-11, 5.42248619256, 5507.5532386674],
      [80445e-11, 3.88013204458, 5223.6939198022],
      [43806e-11, 3.70444689759, 2352.8661537718],
      [31933e-11, 4.00026369781, 1577.3435424478],
      [22724e-11, 3.9847383156, 1047.7473117547],
      [16392e-11, 3.56456119782, 5856.4776591154],
      [18141e-11, 4.98367470262, 6283.0758499914],
      [14443e-11, 3.70275614915, 9437.762934887],
      [14304e-11, 3.41117857526, 10213.285546211],
      [11246e-11, 4.82820690527, 14143.4952424306],
      [109e-9, 2.08574562329, 6812.766815086],
      [9714e-11, 3.47303947751, 4694.0029547076],
      [10367e-11, 4.05663927945, 71092.88135493269],
      [8775e-11, 4.44016515666, 5753.3848848968],
      [8366e-11, 4.99251512183, 7084.8967811152],
      [6921e-11, 4.32559054073, 6275.9623029906],
      [9145e-11, 1.14182646613, 6620.8901131878],
      [7194e-11, 3.60193205744, 529.6909650946],
      [7698e-11, 5.55425745881, 167621.5758508619],
      [5285e-11, 2.48446991536, 4705.7323075436],
      [5208e-11, 6.24992674532, 18073.7049386502],
      [4529e-11, 2.33827747356, 6309.3741697912],
      [5579e-11, 4.41023653719, 7860.4193924392],
      [4743e-11, 0.70995680136, 5884.9268465832],
      [4301e-11, 1.10255777773, 6681.2248533996],
      [3849e-11, 1.82229412532, 5486.777843175],
      [4093e-11, 5.11700141197, 13367.9726311066],
      [3681e-11, 0.43793170336, 3154.6870848956],
      [342e-10, 5.42034800952, 6069.7767545534],
      [3617e-11, 6.04641937568, 3930.2096962196],
      [367e-10, 4.58210192227, 12194.0329146209],
      [2918e-11, 1.95463881136, 10977.078804699],
      [2797e-11, 5.61259274877, 11790.6290886588],
      [2502e-11, 0.60499729368, 6496.3749454294],
      [2319e-11, 5.01648216088, 1059.3819301892],
      [2684e-11, 1.39470396487, 22003.9146348698],
      [2428e-11, 3.24183056545, 78051.5857313169],
      [212e-10, 4.30691000285, 5643.1785636774],
      [2257e-11, 3.15557225087, 90617.7374312997],
      [1813e-11, 3.75574218286, 3340.6124266998],
      [2226e-11, 2.79699346673, 12036.4607348882],
      [1888e-11, 0.86991545944, 8635.9420037632],
      [1517e-11, 1.9585205571, 398.1490034082],
      [1581e-11, 3.19976230948, 5088.6288397668],
      [1421e-11, 6.25530883828, 2544.3144198834],
      [1595e-11, 0.25619915132, 17298.1823273262],
      [1391e-11, 4.69964175574, 7058.5984613154],
      [1478e-11, 2.81808207569, 25934.1243310894],
      [1481e-11, 3.6582355461, 11506.7697697936],
      [1693e-11, 4.95689385293, 156475.2902479957],
      [1183e-11, 1.29343060777, 775.522611324],
      [1114e-11, 2.37889311847, 3738.761430108],
      [994e-11, 4.30088900425, 9225.539273283],
      [924e-11, 3.06451026809, 4164.311989613],
      [867e-11, 0.55606931068, 8429.2412664666],
      [988e-11, 5.97286104208, 7079.3738568078],
      [824e-11, 1.50984806177, 10447.3878396044],
      [915e-11, 0.12635654605, 11015.1064773348],
      [742e-11, 1.99159139281, 26087.9031415742],
      [1039e-11, 3.14159265359, 0],
      [85e-10, 4.24120016095, 29864.334027309],
      [755e-11, 2.89631873314, 4732.0306273434],
      [714e-11, 1.37548118605, 2146.1654164752],
      [708e-11, 1.91406542362, 8031.0922630584],
      [746e-11, 0.57893808622, 796.2980068164],
      [802e-11, 5.12339137235, 2942.4634232916],
      [751e-11, 1.67479850166, 21228.3920235458],
      [602e-11, 4.099765389, 64809.80550494129],
      [594e-11, 3.49580704849, 16496.3613962024],
      [592e-11, 4.59481504319, 4690.4798363586],
      [53e-10, 5.73979295194, 8827.3902698748],
      [503e-11, 5.66433137112, 33794.5437235286],
      [483e-11, 1.57106522322, 801.8209311238],
      [438e-11, 0.0670773372, 3128.3887650958],
      [423e-11, 2.86944596145, 12566.1516999828],
      [504e-11, 3.2620766916, 7632.9432596502],
      [552e-11, 1.02926440457, 239762.20451754928],
      [427e-11, 3.67434378208, 213.299095438],
      [404e-11, 1.4619329736, 15720.8387848784],
      [503e-11, 4.85802444134, 6290.1893969922],
      [417e-11, 0.81920713533, 5216.5803728014],
      [365e-11, 0.01002966145, 12168.0026965746],
      [363e-11, 1.28376436579, 6206.8097787158],
      [353e-11, 4.7005913311, 7234.794256242],
      [415e-11, 0.96862624176, 4136.9104335162],
      [387e-11, 3.09145061418, 25158.6017197654],
      [373e-11, 2.65119262808, 7342.4577801806],
      [361e-11, 2.97762937735, 9623.6882766912],
      [418e-11, 3.75759994446, 5230.807466803],
      [396e-11, 1.22507712354, 6438.4962494256],
      [322e-11, 1.21162178805, 8662.240323563],
      [284e-11, 5.64170320179, 1589.0728952838],
      [379e-11, 1.72248432756, 14945.3161735544],
      [32e-10, 3.94161159658, 7330.8231617461],
      [313e-11, 5.47602376451, 1194.4470102246],
      [292e-11, 1.38971327568, 11769.8536931664],
      [305e-11, 0.80429352049, 37724.7534197482],
      [257e-11, 5.81382810029, 426.598190876],
      [265e-11, 6.10358507671, 6836.6452528338],
      [25e-10, 4.56452895547, 7477.522860216],
      [266e-11, 2.62926282354, 7238.6755916],
      [263e-11, 6.22089501237, 6133.5126528568],
      [306e-11, 2.79682380532, 1748.016413067],
      [236e-11, 2.46093023707, 11371.7046897582],
      [316e-11, 1.62662805006, 250908.4901204155],
      [216e-11, 3.68721275185, 5849.3641121146],
      [23e-10, 0.36165162947, 5863.5912061162],
      [233e-11, 5.03509933618, 20426.571092422],
      [2e-9, 5.86073159059, 4535.0594369244],
      [277e-11, 4.65400292395, 82239.1669577989],
      [209e-11, 3.72323200803, 10973.55568635],
      [199e-11, 5.05186622555, 5429.8794682394],
      [256e-11, 2.40923279886, 19651.048481098],
      [21e-10, 4.50691909144, 29088.811415985],
      [181e-11, 6.00294783127, 4292.3308329504],
      [249e-11, 0.12900984422, 154379.7956244863],
      [209e-11, 3.87759458541, 17789.845619785],
      [225e-11, 3.18339652605, 18875.525869774],
      [191e-11, 4.53897489216, 18477.1087646123],
      [172e-11, 2.0969418273, 13095.8426650774],
      [182e-11, 3.16107943487, 16730.4636895958],
      [188e-11, 2.22746128596, 41654.9631159678],
      [164e-11, 5.18686274999, 5481.2549188676],
      [16e-10, 2.4929885502, 12592.4500197826],
      [155e-11, 1.59595438224, 10021.8372800994],
      [135e-11, 0.21349051305, 10988.808157535],
      [178e-11, 3.80375178044, 23581.2581773176],
      [123e-11, 1.66800739151, 15110.4661198662],
      [122e-11, 2.72678272224, 18849.2275499742],
      [126e-11, 1.17675512872, 14919.0178537546],
      [142e-11, 3.95053440992, 337.8142631964],
      [116e-11, 6.06340906212, 6709.6740408674],
      [137e-11, 3.52143246244, 12139.5535091068],
      [136e-11, 2.92179113491, 32217.2001810808],
      [11e-10, 3.51203379263, 18052.9295431578],
      [147e-11, 4.63371971408, 22805.7355659936],
      [108e-11, 5.45280815225, 7.1135470008],
      [148e-11, 0.65447253687, 95480.9471841745],
      [119e-11, 5.92110458985, 33019.0211122046],
      [11e-10, 5.34824206403, 639.897286314],
      [106e-11, 3.71081682614, 14314.1681130498],
      [139e-11, 6.17607198262, 24356.7807886416],
      [118e-11, 5.59738712949, 161338.5000008705],
      [117e-11, 3.6506527164, 45585.1728121874],
      [127e-11, 4.74596574209, 49515.382508407],
      [12e-10, 1.04211499785, 6915.8595893046],
      [12e-10, 5.60638811846, 5650.2921106782],
      [115e-11, 3.10668213303, 14712.317116458],
      [99e-11, 0.6901893993, 12779.4507954208],
      [97e-11, 1.07908724794, 9917.6968745098],
      [93e-11, 2.62295197146, 17260.1546546904],
      [99e-11, 4.45774681732, 4933.2084403326],
      [123e-11, 1.37488921994, 28286.9904848612],
      [121e-11, 5.19767249869, 27511.4678735372],
      [105e-11, 0.87192268229, 77375.95720492408],
      [87e-11, 3.9363781295, 17654.7805397496],
      [122e-11, 2.2395606868, 83997.09113559539],
      [87e-11, 4.18201600921, 22779.4372461938],
      [104e-11, 4.59580877285, 1349.8674096588],
      [102e-11, 2.83545248595, 12352.8526045448],
      [102e-11, 3.97386522171, 10818.1352869158],
      [101e-11, 4.32892825818, 36147.4098773004],
      [94e-11, 5.00001709338, 150192.2143980043],
      [77e-11, 3.971993693, 1592.5960136328],
      [1e-9, 6.07733097102, 26735.9452622132],
      [86e-11, 5.2602963825, 28313.288804661],
      [93e-11, 4.31900620254, 44809.6502008634],
      [76e-11, 6.22743405935, 13521.7514415914],
      [72e-11, 1.55820597747, 6256.7775301916],
      [82e-11, 4.95202664555, 10575.4066829418],
      [82e-11, 1.69647647075, 1990.745017041],
      [75e-11, 2.29836095644, 3634.6210245184],
      [75e-11, 2.66367876557, 16200.7727245012],
      [87e-11, 0.26630214764, 31441.6775697568],
      [77e-11, 2.25530952876, 5235.3285382367],
      [76e-11, 1.09869730334, 12903.9659631792],
      [58e-11, 4.28246137794, 12559.038152982],
      [64e-11, 5.51112829602, 173904.65170085328],
      [56e-11, 2.60133794851, 73188.3759784421],
      [55e-11, 5.81483150022, 143233.51002162008],
      [54e-11, 3.38482031504, 323049.11878710287],
      [39e-11, 3.28500401937, 71768.50988132549],
      [39e-11, 3.11239910096, 96900.81328129109]
    ],
    "1": [
      [0.00227777722, 3.4137662053, 6283.0758499914],
      [3805678e-11, 3.37063423795, 12566.1516999828],
      [3619589e-11, 0, 0],
      [71542e-11, 3.32777549735, 18849.2275499742],
      [7655e-11, 1.79489607186, 5223.6939198022],
      [8107e-11, 3.89190403643, 5507.5532386674],
      [6456e-11, 5.1978942475, 2352.8661537718],
      [3894e-11, 2.15568517178, 6279.5527316424],
      [3892e-11, 1.53021064904, 6286.5989683404],
      [3897e-11, 4.87293945629, 10213.285546211],
      [3812e-11, 1.43523182316, 12036.4607348882],
      [3577e-11, 2.32913869227, 83996.84731811189],
      [357e-10, 4.92637739003, 71430.69561812909],
      [3494e-11, 2.20864641831, 529.6909650946],
      [2421e-11, 6.22876183393, 7860.4193924392],
      [2056e-11, 3.06747139741, 14143.4952424306],
      [1399e-11, 0.50107877909, 6309.3741697912],
      [1417e-11, 3.28454570977, 25132.3033999656],
      [1544e-11, 1.82062047625, 5856.4776591154],
      [1457e-11, 1.75339303307, 5884.9268465832],
      [1497e-11, 2.19673914456, 9437.762934887],
      [1549e-11, 5.73650061398, 17789.845619785],
      [1277e-11, 3.9672171733, 4705.7323075436],
      [1038e-11, 2.9481870117, 6256.7775301916],
      [1018e-11, 2.24114547164, 6681.2248533996],
      [1021e-11, 1.4679502613, 11790.6290886588],
      [916e-11, 3.72965830745, 1059.3819301892],
      [1156e-11, 6.04591336669, 398.1490034082],
      [124e-10, 0.77195902957, 6812.766815086],
      [1115e-11, 3.92255876225, 12168.0026965746],
      [908e-11, 1.78447918237, 3930.2096962196],
      [833e-11, 0.09941579828, 11506.7697697936],
      [79e-10, 2.45555993228, 775.522611324],
      [666e-11, 4.40761401665, 5753.3848848968],
      [52e-10, 1.60179602491, 4694.0029547076],
      [382e-11, 0.26754532042, 1577.3435424478],
      [405e-11, 1.97558286872, 6283.0085396886],
      [405e-11, 1.53147989887, 6283.14316029419],
      [388e-11, 2.59563818411, 7058.5984613154],
      [341e-11, 3.61275156842, 13367.9726311066],
      [28e-10, 4.63052251735, 796.2980068164],
      [276e-11, 0.43350778219, 7079.3738568078],
      [311e-11, 5.28219636656, 17260.1546546904],
      [275e-11, 5.27597553634, 11769.8536931664],
      [286e-11, 2.98639716345, 6275.9623029906],
      [251e-11, 2.81315684448, 6290.1893969922],
      [239e-11, 5.77837903893, 10977.078804699],
      [228e-11, 0.14375973844, 3738.761430108],
      [227e-11, 2.51020991853, 7084.8967811152],
      [211e-11, 4.7202946547, 6496.3749454294],
      [234e-11, 3.1153527401, 709.9330485583],
      [234e-11, 0.5707581762, 11856.2186514245],
      [237e-11, 2.38791907394, 213.299095438],
      [227e-11, 1.12059781634, 12352.8526045448],
      [169e-11, 3.20148089605, 5486.777843175],
      [159e-11, 3.14604135756, 8827.3902698748],
      [16e-10, 1.14784478002, 5643.1785636774],
      [144e-11, 5.23285657431, 78051.5857313169],
      [144e-11, 1.16454654602, 90617.7374312997],
      [144e-11, 3.81203756929, 6262.300454499],
      [143e-11, 5.97809021355, 6303.8512454838],
      [138e-11, 4.29829933273, 1589.0728952838],
      [161e-11, 3.03298851492, 20426.571092422],
      [165e-11, 5.09134896587, 17298.1823273262],
      [128e-11, 4.41590143012, 6127.6554505572],
      [158e-11, 2.00984506334, 5230.807466803],
      [13e-10, 1.44170683802, 12569.6748183318],
      [125e-11, 1.69950379498, 3128.3887650958],
      [152e-11, 4.96946111415, 65147.6197681377],
      [131e-11, 4.24961399629, 6282.0955289232],
      [131e-11, 5.54051222995, 6284.0561710596],
      [161e-11, 3.32421999691, 6283.3196674749],
      [123e-11, 2.93221463795, 15720.8387848784],
      [152e-11, 1.56488157456, 18319.5365848796],
      [114e-11, 1.89110005546, 18073.7049386502],
      [113e-11, 4.95214866677, 4136.9104335162],
      [111e-11, 4.79699611405, 8429.2412664666],
      [118e-11, 3.06184958762, 22003.9146348698],
      [128e-11, 2.09693027395, 12562.6285816338],
      [138e-11, 0.84648544836, 6069.7767545534],
      [1e-9, 0.41938790104, 5481.2549188676],
      [101e-11, 4.43791289246, 19651.048481098],
      [116e-11, 1.87002428935, 77713.7714681205],
      [95e-11, 0.68638183645, 3340.6124266998],
      [104e-11, 4.90822646457, 8635.9420037632],
      [114e-11, 0.36008214928, 23543.23050468179],
      [91e-11, 1.1761121931, 9225.539273283],
      [91e-11, 2.74682631104, 5216.5803728014],
      [86e-11, 3.09315282195, 1194.4470102246],
      [93e-11, 6.2764351319, 12559.038152982],
      [87e-11, 3.64926989547, 7.1135470008],
      [83e-11, 0.37008971174, 11371.7046897582],
      [98e-11, 4.68473306376, 167283.7615876655],
      [98e-11, 0.99865886857, 154717.6098876827],
      [86e-11, 4.41152307486, 25934.1243310894],
      [98e-11, 4.98209568932, 16496.3613962024],
      [85e-11, 2.35438163823, 3154.6870848956],
      [83e-11, 0.24859477658, 21228.3920235458],
      [76e-11, 5.46661600296, 29864.334027309],
      [69e-11, 3.22045334237, 801.8209311238],
      [68e-11, 2.19928242745, 37724.7534197482],
      [7e-10, 5.33711014698, 2544.3144198834],
      [55e-11, 5.37872238211, 11015.1064773348],
      [51e-11, 5.03600618727, 5863.5912061162],
      [59e-11, 3.54984809612, 4535.0594369244],
      [53e-11, 1.50812064137, 7342.4577801806],
      [44e-11, 1.33712241647, 4164.311989613],
      [55e-11, 5.38460045253, 7477.522860216],
      [49e-11, 5.61844340512, 24072.9214697764],
      [57e-11, 6.17973522898, 8031.0922630584],
      [52e-11, 4.24379064407, 5088.6288397668],
      [41e-11, 3.41960196246, 26087.9031415742],
      [52e-11, 1.68150981131, 25158.6017197654],
      [53e-11, 0.11041408311, 29088.811415985],
      [43e-11, 0.53354396923, 2146.1654164752],
      [5e-10, 0.60270799844, 33794.5437235286],
      [45e-11, 1.69577010458, 6702.5604938666],
      [37e-11, 6.09033460795, 64809.80550494129],
      [44e-11, 2.67993061247, 15110.4661198662],
      [47e-11, 3.62555676035, 41654.9631159678],
      [36e-11, 0.47219666269, 13095.8426650774],
      [35e-11, 5.99520523215, 23581.2581773176],
      [43e-11, 4.08726331262, 156137.47598479927],
      [43e-11, 5.17376496602, 18422.62935909819],
      [34e-11, 2.14460100274, 4933.2084403326],
      [3e-10, 4.12992793541, 426.598190876],
      [36e-11, 2.28596930002, 90279.92316810328],
      [32e-11, 0.81117747619, 26.2983197998],
      [28e-11, 4.07036560467, 14712.317116458],
      [25e-11, 1.92905243842, 1748.016413067],
      [24e-11, 5.06152880842, 16730.4636895958],
      [23e-11, 3.24047012195, 31415.379249957],
      [27e-11, 3.90672018305, 18451.07854656599],
      [21e-11, 3.51419811826, 10447.3878396044]
    ],
    "2": [
      [9721424e-11, 5.1519280992, 6283.0758499914],
      [233002e-11, 3.14159265359, 0],
      [134188e-11, 0.64406212977, 12566.1516999828],
      [6504e-11, 1.07333397797, 18849.2275499742],
      [1662e-11, 1.62746869551, 84334.66158130829],
      [635e-11, 3.51985338656, 6279.5527316424],
      [492e-11, 2.41382223971, 1047.7473117547],
      [307e-11, 6.10181422085, 5223.6939198022],
      [322e-11, 0.37660897389, 6286.5989683404],
      [326e-11, 2.35727931602, 5507.5532386674],
      [274e-11, 1.65307581765, 7860.4193924392],
      [228e-11, 1.14082932988, 25132.3033999656],
      [202e-11, 0.4983668253, 2352.8661537718],
      [201e-11, 0.155527656, 10213.285546211],
      [167e-11, 3.98005254015, 529.6909650946],
      [17e-10, 5.28668290523, 6256.7775301916],
      [166e-11, 3.04613930284, 12036.4607348882],
      [153e-11, 4.06779216239, 83996.84731811189],
      [15e-10, 3.18772213951, 71430.69561812909],
      [12e-10, 3.13558669517, 5884.9268465832],
      [123e-11, 4.17102530625, 6309.3741697912],
      [1e-9, 1.46356761368, 11506.7697697936],
      [1e-9, 3.00322421365, 11790.6290886588],
      [77e-11, 1.65643898948, 4705.7323075436],
      [68e-11, 6.03791904123, 6812.766815086],
      [75e-11, 4.85191600582, 14143.4952424306],
      [79e-11, 4.12628805658, 5753.3848848968],
      [64e-11, 2.7194416046, 6127.6554505572],
      [63e-11, 0.78655326011, 6438.4962494256],
      [75e-11, 0.84213523741, 167621.5758508619],
      [51e-11, 4.55059044701, 5486.777843175],
      [5e-10, 5.29314320585, 7079.3738568078],
      [45e-11, 0.33147576416, 775.522611324],
      [43e-11, 3.6179371164, 1577.3435424478],
      [57e-11, 6.15295833679, 12194.0329146209],
      [45e-11, 1.18274698508, 17789.845619785],
      [47e-11, 1.11643162773, 398.1490034082],
      [47e-11, 5.5298423843, 12168.0026965746],
      [42e-11, 2.6437530062, 10988.808157535],
      [37e-11, 0.31226891972, 6681.2248533996],
      [46e-11, 3.38617099014, 156475.2902479957],
      [33e-11, 1.26266496002, 6290.1893969922],
      [33e-11, 2.25067065498, 6275.9623029906],
      [27e-11, 1.72859626293, 1059.3819301892],
      [28e-11, 2.88681054153, 796.2980068164],
      [3e-10, 5.52021264181, 7058.5984613154],
      [21e-11, 6.22275008403, 6069.7767545534],
      [24e-11, 5.83690442827, 6282.0955289232],
      [24e-11, 3.95322179797, 6284.0561710596],
      [21e-11, 4.87022458966, 3738.761430108],
      [21e-11, 3.58048145762, 6496.3749454294],
      [22e-11, 1.97770318395, 7.1135470008],
      [19e-11, 3.4597988877, 4136.9104335162],
      [15e-11, 2.81379880771, 1589.0728952838],
      [15e-11, 1.61313151838, 1194.4470102246],
      [15e-11, 0.63083434831, 11769.8536931664],
      [19e-11, 0.28082047767, 17260.1546546904],
      [17e-11, 1.35165136146, 78051.5857313169],
      [15e-11, 2.3094159956, 11856.2186514245],
      [12e-11, 1.12997370513, 90617.7374312997],
      [12e-11, 0.00611601597, 18073.7049386502],
      [12e-11, 1.70058636365, 12559.038152982]
    ],
    "3": [
      [275993e-11, 0.59480097092, 6283.0758499914],
      [17034e-11, 3.14159265359, 0],
      [3617e-11, 0.11750575325, 12566.1516999828],
      [339e-11, 5.66087461682, 18849.2275499742],
      [56e-11, 5.02765554835, 6279.5527316424],
      [19e-11, 5.99007646261, 6256.7775301916],
      [18e-11, 3.80004734567, 6309.3741697912],
      [18e-11, 1.21049250774, 6127.6554505572],
      [18e-11, 2.29734567137, 6438.4962494256],
      [15e-11, 4.72881467263, 6286.5989683404],
      [12e-11, 0.41481671808, 83996.84731811189],
      [13e-11, 5.54637369296, 25132.3033999656],
      [1e-10, 2.91937214232, 71430.69561812909],
      [6e-11, 2.1417324121, 11856.2186514245]
    ],
    "4": [
      [5745e-11, 2.26734029843, 6283.0758499914],
      [87e-10, 0, 0],
      [119e-11, 4.26807972611, 12566.1516999828],
      [17e-11, 4.0742262044, 18849.2275499742],
      [5e-11, 0.84308705203, 1047.7473117547],
      [5e-11, 0.05711572303, 84334.66158130829]
    ],
    "5": [
      [114e-11, 4.31455980099, 6283.0758499914],
      [24e-11, 0, 0]
    ]
  },
  R: {
    "0": [
      [1.00013988784, 0, 0],
      [0.01670699632, 3.09846350258, 6283.0758499914],
      [13956024e-11, 3.05524609456, 12566.1516999828],
      [308372e-10, 5.19846674381, 77713.7714681205],
      [1628463e-11, 1.17387558054, 5753.3848848968],
      [1575572e-11, 2.84685214877, 7860.4193924392],
      [924799e-11, 5.45292236722, 11506.7697697936],
      [542439e-11, 4.56409151453, 3930.2096962196],
      [47211e-10, 3.66100022149, 5884.9268465832],
      [32878e-10, 5.89983686142, 5223.6939198022],
      [345969e-11, 0.96368627272, 5507.5532386674],
      [306784e-11, 0.29867139512, 5573.1428014331],
      [174844e-11, 3.01193636733, 18849.2275499742],
      [243181e-11, 4.2734953079, 11790.6290886588],
      [211836e-11, 5.84714461348, 1577.3435424478],
      [18574e-10, 5.02199710705, 10977.078804699],
      [109835e-11, 5.0551063586, 5486.777843175],
      [98316e-11, 0.88681311278, 6069.7767545534],
      [865e-9, 5.68956418946, 15720.8387848784],
      [85831e-11, 1.27079125277, 161000.6857376741],
      [62917e-11, 0.92177053978, 529.6909650946],
      [57056e-11, 2.01374292245, 83996.84731811189],
      [64908e-11, 0.27251341435, 17260.1546546904],
      [49384e-11, 3.24501240359, 2544.3144198834],
      [55736e-11, 5.2415979917, 71430.69561812909],
      [4252e-10, 6.01110257982, 6275.9623029906],
      [46966e-11, 2.57799853213, 775.522611324],
      [38963e-11, 5.36063832897, 4694.0029547076],
      [44666e-11, 5.53715663816, 9437.762934887],
      [35661e-11, 1.67447135798, 12036.4607348882],
      [31922e-11, 0.18368299942, 5088.6288397668],
      [31846e-11, 1.77775642078, 398.1490034082],
      [33193e-11, 0.24370221704, 7084.8967811152],
      [38245e-11, 2.39255343973, 8827.3902698748],
      [28468e-11, 1.21344887533, 6286.5989683404],
      [37486e-11, 0.82961281844, 19651.048481098],
      [36957e-11, 4.90107587287, 12139.5535091068],
      [34537e-11, 1.84270693281, 2942.4634232916],
      [26275e-11, 4.58896863104, 10447.3878396044],
      [24596e-11, 3.78660838036, 8429.2412664666],
      [23587e-11, 0.26866098169, 796.2980068164],
      [27795e-11, 1.89934427832, 6279.5527316424],
      [23927e-11, 4.99598548145, 5856.4776591154],
      [20345e-11, 4.65282190725, 2146.1654164752],
      [23287e-11, 2.80783632869, 14143.4952424306],
      [22099e-11, 1.95002636847, 3154.6870848956],
      [19509e-11, 5.38233922479, 2352.8661537718],
      [17958e-11, 0.1987136996, 6812.766815086],
      [17178e-11, 4.43322156854, 10213.285546211],
      [1619e-10, 5.23159323213, 17789.845619785],
      [17315e-11, 6.15224075188, 16730.4636895958],
      [13814e-11, 5.18962074032, 8031.0922630584],
      [18834e-11, 0.67280058021, 149854.4001348079],
      [1833e-10, 2.25348717053, 23581.2581773176],
      [13639e-11, 3.68511810757, 4705.7323075436],
      [13142e-11, 0.65267698994, 13367.9726311066],
      [10414e-11, 4.33285688501, 11769.8536931664],
      [9978e-11, 4.20126336356, 6309.3741697912],
      [1017e-10, 1.59366684542, 4690.4798363586],
      [7564e-11, 2.62560597391, 6256.7775301916],
      [9654e-11, 3.67583728703, 27511.4678735372],
      [6743e-11, 0.56269927047, 3340.6124266998],
      [8743e-11, 6.06359123461, 1748.016413067],
      [7786e-11, 3.67371235367, 12168.0026965746],
      [6633e-11, 5.66149277789, 11371.7046897582],
      [7712e-11, 0.31242577788, 7632.9432596502],
      [6586e-11, 3.13580054586, 801.8209311238],
      [746e-10, 5.6475806666, 11926.2544136688],
      [6933e-11, 2.92384586372, 6681.2248533996],
      [6805e-11, 1.42327153767, 23013.5395395872],
      [6118e-11, 5.13395999022, 1194.4470102246],
      [6477e-11, 2.64986648493, 19804.8272915828],
      [5233e-11, 4.62432817299, 6438.4962494256],
      [6147e-11, 3.02863936662, 233141.3144043615],
      [4608e-11, 1.72194702724, 7234.794256242],
      [4221e-11, 1.55697533726, 7238.6755916],
      [531e-10, 2.40821524293, 11499.6562227928],
      [5128e-11, 5.3239896569, 11513.8833167944],
      [477e-10, 0.2555431173, 11856.2186514245],
      [5519e-11, 2.09089153789, 17298.1823273262],
      [5625e-11, 4.34052903053, 90955.5516944961],
      [4578e-11, 4.4656964157, 5746.271337896],
      [3788e-11, 4.9072829481, 4164.311989613],
      [5337e-11, 5.09957905103, 31441.6775697568],
      [3967e-11, 1.20054555175, 1349.8674096588],
      [4005e-11, 3.02853885902, 1059.3819301892],
      [348e-10, 0.76066308841, 10973.55568635],
      [4232e-11, 1.05485713117, 5760.4984318976],
      [4582e-11, 3.76570026763, 6386.16862421],
      [3335e-11, 3.13829943354, 6836.6452528338],
      [342e-10, 3.00043974511, 4292.3308329504],
      [3595e-11, 5.70703236079, 5643.1785636774],
      [3236e-11, 4.16387400645, 9917.6968745098],
      [4154e-11, 2.59940749519, 7058.5984613154],
      [3362e-11, 4.54577164994, 4732.0306273434],
      [2978e-11, 1.3056126882, 6283.14316029419],
      [2765e-11, 0.51311975671, 26.2983197998],
      [2807e-11, 5.66230537649, 8635.9420037632],
      [2927e-11, 5.7378783408, 16200.7727245012],
      [3167e-11, 1.691817599, 11015.1064773348],
      [2598e-11, 2.96244118358, 25132.3033999656],
      [3519e-11, 3.62639325753, 244287.60000722768],
      [2676e-11, 4.20727719487, 18073.7049386502],
      [2978e-11, 1.74971565805, 6283.0085396886],
      [2287e-11, 1.06976449088, 14314.1681130498],
      [2863e-11, 5.92838917309, 14712.317116458],
      [3071e-11, 0.23793217, 35371.8872659764],
      [2656e-11, 0.89959301615, 12352.8526045448],
      [2415e-11, 2.799751768, 709.9330485583],
      [2811e-11, 3.51513864541, 21228.3920235458],
      [1977e-11, 2.61358297551, 951.7184062506],
      [2548e-11, 2.47684686575, 6208.2942514241],
      [1999e-11, 0.56090396506, 7079.3738568078],
      [2305e-11, 1.05376463592, 22483.84857449259],
      [1855e-11, 2.86093570752, 5216.5803728014],
      [2157e-11, 1.31395211105, 154717.6098876827],
      [197e-10, 4.36931551625, 167283.7615876655],
      [1754e-11, 2.14452400686, 6290.1893969922],
      [1628e-11, 5.85704450617, 10984.1923516998],
      [2154e-11, 6.03828353794, 10873.9860304804],
      [1714e-11, 3.70158195222, 1592.5960136328],
      [1541e-11, 6.21599512982, 23543.23050468179],
      [1602e-11, 1.99860679677, 10969.9652576982],
      [1712e-11, 1.34295218697, 3128.3887650958],
      [1647e-11, 5.54948299069, 6496.3749454294],
      [1495e-11, 5.43980459648, 155.4203994342],
      [1827e-11, 5.91227480351, 3738.761430108],
      [1726e-11, 2.16765465036, 10575.4066829418],
      [1532e-11, 5.35683107063, 13521.7514415914],
      [1824e-11, 1.66056145084, 39302.096962196],
      [1605e-11, 1.90930973224, 6133.5126528568],
      [1282e-11, 2.46013372544, 13916.0191096416],
      [1211e-11, 4.4136063155, 3894.1818295422],
      [1394e-11, 1.7780192925, 9225.539273283],
      [1571e-11, 4.95512957606, 25158.6017197654],
      [1205e-11, 1.19212756308, 3.523118349],
      [1132e-11, 2.69830084955, 6040.3472460174],
      [1504e-11, 5.77577388271, 18209.33026366019],
      [1393e-11, 1.62625077326, 5120.6011455836],
      [1081e-11, 2.93726744446, 17256.6315363414],
      [1232e-11, 0.71651766504, 143571.32428481648],
      [1087e-11, 0.99769687961, 955.5997416086],
      [1068e-11, 5.28472576591, 65147.6197681377],
      [1169e-11, 3.11663802316, 14945.3161735544],
      [975e-11, 5.1088726078, 6172.869528772],
      [1202e-11, 4.02992510403, 553.5694028424],
      [979e-11, 2.00000879106, 15110.4661198662],
      [962e-11, 4.023807714, 6282.0955289232],
      [999e-11, 3.6264300279, 6262.300454499],
      [103e-10, 5.84987815239, 213.299095438],
      [1014e-11, 2.84227679965, 8662.240323563],
      [1185e-11, 1.51330629149, 17654.7805397496],
      [967e-11, 2.67081017562, 5650.2921106782],
      [1222e-11, 2.65423784904, 88860.05707098669],
      [986e-11, 2.36212814824, 6206.8097787158],
      [1034e-11, 0.13634950642, 11712.9553182308],
      [1103e-11, 3.08477302937, 43232.3066584156],
      [781e-11, 2.53374971725, 16496.3613962024],
      [1019e-11, 3.04569392376, 6037.244203762],
      [795e-11, 5.80662989126, 5230.807466803],
      [813e-11, 3.57702871938, 10177.2576795336],
      [962e-11, 5.31470594766, 6284.0561710596],
      [717e-11, 5.95797471837, 12559.038152982],
      [967e-11, 2.74413738053, 6244.9428143536],
      [921e-11, 0.1016016083, 29088.811415985],
      [719e-11, 5.91788189939, 4136.9104335162],
      [688e-11, 3.89489045092, 1589.0728952838],
      [772e-11, 4.05505380285, 6127.6554505572],
      [706e-11, 5.49323197725, 22003.9146348698],
      [665e-11, 1.60002747134, 11087.2851259184],
      [69e-10, 4.50539825729, 426.598190876],
      [854e-11, 3.2610464506, 20426.571092422],
      [656e-11, 4.3241018294, 16858.4825329332],
      [84e-10, 2.59572585212, 28766.924424484],
      [686e-11, 0.61944033771, 11403.676995575],
      [7e-9, 3.40901412473, 7.1135470008],
      [728e-11, 0.04050185963, 5481.2549188676],
      [653e-11, 1.0386945123, 6062.6632075526],
      [559e-11, 4.79221805695, 20199.094959633],
      [633e-11, 5.70229959167, 45892.73043315699],
      [591e-11, 6.10986487621, 9623.6882766912],
      [52e-10, 3.62310356479, 5333.9002410216],
      [602e-11, 5.58381898589, 10344.2950653858],
      [496e-11, 2.21027756314, 1990.745017041],
      [691e-11, 1.96733114988, 12416.5885028482],
      [64e-10, 1.59062417043, 18319.5365848796],
      [625e-11, 3.82358168221, 13517.8701062334],
      [475e-11, 1.1702590418, 12569.6748183318],
      [66e-10, 5.08498512995, 283.8593188652],
      [664e-11, 4.50029469969, 47162.5163546352],
      [569e-11, 0.16318535463, 17267.26820169119],
      [568e-11, 3.86100969474, 6076.8903015542],
      [462e-11, 0.26368763517, 4590.910180489],
      [535e-11, 4.83225423196, 18422.62935909819],
      [466e-11, 0.75873879417, 7342.4577801806],
      [541e-11, 3.07212190556, 226858.23855437007],
      [61e-10, 1.53597089605, 33019.0211122046],
      [617e-11, 2.62356328726, 11190.377900137],
      [548e-11, 4.55798855803, 18875.525869774],
      [633e-11, 4.60110281228, 66567.48586525429],
      [587e-11, 5.78087907808, 632.7837393132],
      [603e-11, 5.38458554802, 316428.22867391503],
      [525e-11, 5.01522072363, 12132.439962106],
      [469e-11, 0.59975173763, 21954.15760939799],
      [548e-11, 3.50627043672, 17253.04110768959],
      [502e-11, 0.98804327589, 11609.8625440122],
      [568e-11, 1.98497313089, 7668.6374249425],
      [482e-11, 1.62460405687, 12146.6670561076],
      [391e-11, 3.68718382972, 18052.9295431578],
      [457e-11, 3.7721489661, 156137.47598479927],
      [401e-11, 5.2922154024, 15671.0817594066],
      [469e-11, 1.80963351735, 12562.6285816338],
      [514e-11, 3.37031288919, 20597.2439630412],
      [452e-11, 5.66811219778, 10454.5013866052],
      [375e-11, 4.98528185039, 9779.1086761254],
      [523e-11, 0.97215560834, 155427.542936241],
      [403e-11, 5.1394818977, 1551.045222648],
      [372e-11, 3.69883738807, 9388.0059094152],
      [367e-11, 4.43875659833, 4535.0594369244],
      [406e-11, 4.20863156497, 12592.4500197826],
      [362e-11, 2.55099560446, 242.728603974],
      [471e-11, 4.61907324819, 5436.9930152402],
      [388e-11, 4.960209284, 24356.7807886416],
      [441e-11, 5.83872966262, 3496.032826134],
      [349e-11, 6.16307810648, 19800.9459562248],
      [356e-11, 0.2381908124, 5429.8794682394],
      [346e-11, 5.60809622572, 2379.1644735716],
      [38e-10, 2.72105213132, 11933.3679606696],
      [432e-11, 0.24215988572, 17996.0311682222],
      [378e-11, 5.22516848076, 7477.522860216],
      [337e-11, 5.10885555836, 5849.3641121146],
      [315e-11, 0.57827745123, 10557.5941608238],
      [318e-11, 4.4994900732, 3634.6210245184],
      [323e-11, 1.55850824803, 10440.2742926036],
      [314e-11, 5.77154773334, 20.7753954924],
      [303e-11, 2.34615580398, 4686.8894077068],
      [414e-11, 5.9323760231, 51092.7260508548],
      [362e-11, 2.17561997119, 28237.2334593894],
      [288e-11, 0.18377405421, 13095.8426650774],
      [277e-11, 5.1295220503, 13119.72110282519],
      [325e-11, 6.18608287927, 6268.8487559898],
      [273e-11, 0.30522428863, 23141.5583829246],
      [267e-11, 5.76152585786, 5966.6839803348],
      [345e-11, 2.94246040875, 36949.2308084242],
      [253e-11, 5.20994580359, 24072.9214697764],
      [342e-11, 5.76212804329, 16460.33352952499],
      [307e-11, 6.01039067183, 22805.7355659936],
      [261e-11, 2.00304796059, 6148.010769956],
      [238e-11, 5.08241964961, 6915.8595893046],
      [249e-11, 2.94762789744, 135.0650800354],
      [306e-11, 3.89765478921, 10988.808157535],
      [308e-11, 0.05451027736, 4701.1165017084],
      [319e-11, 2.95712862064, 163096.18036118348],
      [272e-11, 2.07967681309, 4804.209275927],
      [209e-11, 4.43768461442, 6546.1597733642],
      [217e-11, 0.73691592312, 6303.8512454838],
      [203e-11, 0.32033085531, 25934.1243310894],
      [205e-11, 5.22936478995, 20995.3929664494],
      [213e-11, 0.20671418919, 28286.9904848612],
      [197e-11, 0.4828613129, 16737.5772365966],
      [23e-10, 6.06567392849, 6287.0080032545],
      [219e-11, 1.291942163, 5326.7866940208],
      [201e-11, 1.74700937253, 22743.4093795164],
      [207e-11, 4.45440927276, 6279.4854213396],
      [269e-11, 6.0564044503, 64471.99124174489],
      [19e-10, 0.99261116842, 29296.6153895786],
      [194e-11, 3.82656562755, 419.4846438752],
      [262e-11, 5.26961924126, 522.5774180938],
      [21e-10, 4.68618183158, 6254.6266625236],
      [197e-11, 2.80624554186, 4933.2084403326],
      [252e-11, 4.3622015462, 40879.4405046438],
      [261e-11, 1.07241516738, 55022.9357470744],
      [233e-11, 5.41751014958, 39609.6545831656],
      [185e-11, 4.14324541379, 5642.1982426092],
      [247e-11, 3.44855612987, 6702.5604938666],
      [205e-11, 4.04424043226, 536.8045120954],
      [191e-11, 3.15807087926, 16723.350142595],
      [222e-11, 5.16259496507, 23539.7073863328],
      [18e-10, 4.56214752149, 6489.2613984286],
      [227e-11, 0.60156339452, 5905.7022420756],
      [17e-10, 0.93185903228, 16062.1845261168],
      [159e-11, 0.92751013112, 23937.856389741],
      [157e-11, 4.69607868164, 6805.6532680852],
      [218e-11, 0.8553337343, 16627.3709153772],
      [169e-11, 0.94641052064, 3097.88382272579],
      [207e-11, 4.88410451334, 6286.6662786432],
      [16e-10, 4.95943826819, 10021.8372800994],
      [175e-11, 6.12762824563, 239424.39025435288],
      [173e-11, 3.13887234973, 6179.9830757728],
      [157e-11, 3.62822057807, 18451.07854656599],
      [206e-11, 5.74617821138, 3646.3503773544],
      [157e-11, 4.67695912207, 6709.6740408674],
      [146e-11, 3.09506069745, 4907.3020501456],
      [165e-11, 2.2713912876, 10660.6869350424],
      [144e-11, 3.96947747592, 6019.9919266186],
      [171e-11, 5.91302216729, 6058.7310542895],
      [144e-11, 2.1315565512, 26084.0218062162],
      [151e-11, 0.67417383565, 2388.8940204492],
      [196e-11, 1.67718461229, 2107.0345075424],
      [146e-11, 5.10373877968, 10770.8932562618],
      [187e-11, 1.23915444627, 19402.7969528166],
      [137e-11, 1.26247412216, 12566.2190102856],
      [191e-11, 5.03547476279, 263.0839233728],
      [137e-11, 3.52825454595, 639.897286314],
      [135e-11, 0.73840670927, 5017.508371365],
      [164e-11, 2.39195095081, 6357.8574485587],
      [168e-11, 0.05515907462, 9380.9596727172],
      [161e-11, 1.15721259392, 26735.9452622132],
      [144e-11, 1.76097645199, 5888.4499649322],
      [131e-11, 2.51859277344, 6599.467719648],
      [142e-11, 2.43802911123, 5881.4037282342],
      [159e-11, 5.90325893762, 6281.5913772831],
      [151e-11, 3.72338532519, 12669.2444742014],
      [132e-11, 2.38417741883, 6525.8044539654],
      [127e-11, 0.00254936441, 10027.9031957292],
      [148e-11, 2.85102145528, 6418.1409300268],
      [143e-11, 5.7446027956, 26087.9031415742],
      [172e-11, 0.4128996224, 174242.4659640497],
      [136e-11, 4.15497742275, 6311.5250374592],
      [17e-10, 5.98194913129, 327574.51427678124],
      [136e-11, 2.48430537541, 13341.6743113068],
      [149e-11, 0.33002271275, 245.8316462294],
      [165e-11, 2.496679246, 58953.145443294],
      [123e-11, 1.67328384813, 32217.2001810808],
      [123e-11, 3.45660563754, 6277.552925684],
      [117e-11, 0.86065134175, 6245.0481773556],
      [149e-11, 5.61358281003, 5729.506447149],
      [128e-11, 0.71204006448, 103.0927742186],
      [159e-11, 2.43166592149, 221995.02880149524],
      [137e-11, 1.706577092, 12566.08438968],
      [129e-11, 2.80667872683, 6016.4688082696],
      [113e-11, 3.58302904101, 25685.872802808],
      [109e-11, 3.26403795962, 6819.8803620868],
      [122e-11, 0.34120688202, 1162.4747044078],
      [106e-11, 1.59721172719, 17782.7320727842],
      [144e-11, 2.28891651774, 12489.8856287072],
      [137e-11, 5.82029768354, 44809.6502008634],
      [134e-11, 1.26539983018, 5331.3574437408],
      [103e-11, 5.96518130595, 6321.1035226272],
      [109e-11, 0.33808549034, 11300.5842213564],
      [129e-11, 5.8918727719, 12029.3471878874],
      [122e-11, 5.77325634636, 11919.140866668],
      [107e-11, 6.2499898935, 77690.75950573849],
      [107e-11, 1.00535580713, 77736.78343050249],
      [115e-11, 5.86963518266, 12721.572099417],
      [102e-11, 5.66283467269, 5540.0857894588],
      [143e-11, 0.24122178432, 4214.0690150848],
      [143e-11, 0.88529649733, 7576.560073574],
      [107e-11, 2.92124030351, 31415.379249957],
      [1e-9, 5.99485644501, 4061.2192153944],
      [103e-11, 2.41941934525, 5547.1993364596],
      [104e-11, 4.44106051277, 2118.7638603784],
      [11e-10, 0.37559635174, 5863.5912061162],
      [124e-11, 2.55619029611, 12539.853380183],
      [11e-10, 3.66952094465, 238004.5241572363],
      [112e-11, 4.32512422724, 97238.62754448749],
      [12e-10, 1.26895630075, 12043.574281889],
      [97e-11, 5.42612959752, 7834.1210726394],
      [94e-11, 2.56461130309, 19004.6479494084],
      [105e-11, 5.68272475301, 16522.6597160022],
      [117e-11, 3.65425622684, 34520.3093093808],
      [108e-11, 1.24206843948, 84672.47584450469],
      [98e-11, 0.13589994287, 11080.1715789176],
      [97e-11, 2.46722096722, 71980.63357473118],
      [95e-11, 5.36958330451, 6288.5987742988],
      [96e-11, 0.20796618776, 18139.2945014159],
      [111e-11, 5.01961920313, 11823.1616394502],
      [9e-10, 2.72355843779, 26880.3198130326],
      [99e-11, 0.90164266199, 18635.9284545362],
      [126e-11, 4.78722177847, 305281.9430710488],
      [124e-11, 5.00979495566, 172146.9713405403],
      [9e-10, 4.50544881196, 40077.61957352],
      [104e-11, 5.6367968071, 2787.0430238574],
      [91e-11, 5.43564326147, 6272.0301497275],
      [1e-9, 2.00639461597, 12323.4230960088],
      [117e-11, 2.35555589778, 83286.91426955358],
      [105e-11, 2.59824000109, 30666.1549584328],
      [9e-10, 2.35779490026, 12491.3701014155],
      [89e-11, 3.57152453732, 11720.0688652316],
      [95e-11, 5.67015349858, 14919.0178537546],
      [87e-11, 1.86043406047, 27707.5424942948],
      [106e-11, 3.04150600352, 22345.2603761082],
      [82e-11, 5.58298993353, 10241.2022911672],
      [83e-11, 3.10607039533, 36147.4098773004],
      [94e-11, 5.47749711149, 9924.8104215106],
      [82e-11, 4.71988314145, 15141.390794312],
      [96e-11, 3.89073946348, 6379.0550772092],
      [11e-10, 4.92131611151, 5621.8429232104],
      [11e-10, 4.89978492291, 72140.6286666874],
      [97e-11, 5.20764563059, 6303.4311693902],
      [85e-11, 1.61269222311, 33326.5787331742],
      [93e-11, 1.32651591333, 23020.65308658799],
      [9e-10, 0.5773301638, 26482.1708096244],
      [78e-11, 3.99588630754, 11293.4706743556],
      [106e-11, 3.92012705073, 62883.3551395136],
      [98e-11, 2.94397773524, 316.3918696566],
      [76e-11, 3.96310417608, 29026.48522950779],
      [98e-11, 0.95914722366, 48739.859897083],
      [78e-11, 1.97068528043, 90279.92316810328],
      [76e-11, 0.23027966596, 21424.4666443034],
      [79e-11, 1.46227790922, 8982.810669309],
      [78e-11, 2.28840998832, 266.6070417218],
      [71e-11, 1.5194076559, 33794.5437235286],
      [76e-11, 0.22880641443, 57375.8019008462],
      [97e-11, 0.39449562097, 24279.10701821359],
      [75e-11, 2.77638584795, 12964.300703391],
      [77e-11, 5.18846946344, 11520.9968637952],
      [68e-11, 0.50006599129, 4274.5183108324],
      [75e-11, 2.07323762803, 15664.03552270859],
      [77e-11, 0.4666517878, 16207.886271502],
      [81e-11, 4.10452219483, 161710.6187862324],
      [71e-11, 3.91415328513, 7875.6718636242],
      [81e-11, 0.91938383406, 74.7815985673],
      [83e-11, 4.69916218791, 23006.42599258639],
      [69e-11, 0.98999300277, 6393.2821712108],
      [65e-11, 5.41938745446, 28628.3362260996],
      [73e-11, 2.45564765251, 15508.6151232744],
      [65e-11, 3.02336771694, 5959.570433334],
      [64e-11, 0.18375587635, 1066.49547719],
      [8e-10, 5.81239171612, 12341.8069042809],
      [66e-11, 2.15105504851, 38.0276726358],
      [67e-11, 5.14047250153, 9814.6041002912],
      [62e-11, 2.43313614978, 10138.1095169486],
      [68e-11, 2.24442548639, 24383.0791084414],
      [78e-11, 1.39649333997, 9411.4646150872],
      [59e-11, 4.95362151577, 35707.7100829074],
      [73e-11, 1.35229143121, 5327.4761083828],
      [57e-11, 3.16018882154, 5490.300961524],
      [72e-11, 5.91833527334, 10881.0995774812],
      [67e-11, 0.66414713064, 29864.334027309],
      [65e-11, 0.30352816135, 7018.9523635232],
      [59e-11, 5.36231868425, 10239.5838660108],
      [56e-11, 3.22196331515, 2636.725472637],
      [68e-11, 5.32086226658, 3116.6594122598],
      [59e-11, 1.63156134967, 61306.0115970658],
      [54e-11, 4.29491690425, 21947.1113727],
      [7e-10, 0.29271565928, 6528.9074962208],
      [57e-11, 5.89190132575, 34513.2630726828],
      [54e-11, 2.51856815404, 6279.1945146334],
      [74e-11, 1.38235845304, 9967.4538999816],
      [54e-11, 0.92276712152, 6286.9571853494],
      [7e-10, 5.00933012248, 6453.7487206106],
      [53e-11, 3.86543309344, 32370.9789915656],
      [55e-11, 4.51794544854, 34911.412076091],
      [63e-11, 5.41479412056, 11502.8376165305],
      [63e-11, 2.34416220742, 11510.7019230567],
      [56e-11, 0.91310629913, 9910.583327509],
      [67e-11, 4.03308763854, 34596.3646546524],
      [6e-10, 5.57024703495, 5756.9080032458],
      [72e-11, 2.80863088166, 10866.8724834796],
      [66e-11, 6.12047940728, 12074.488407524],
      [51e-11, 2.59519527563, 11396.5634485742],
      [62e-11, 5.14746754396, 25287.7237993998],
      [54e-11, 2.50994032776, 5999.2165311262],
      [51e-11, 4.51195861837, 29822.7832363242],
      [59e-11, 0.44167237876, 250570.6758572191],
      [51e-11, 3.6884906676, 6262.7205305926],
      [49e-11, 0.54704693048, 22594.05489571199],
      [65e-11, 2.38423614501, 52670.0695933026],
      [69e-11, 5.34363738671, 66813.5648357332],
      [56e-11, 2.67216180349, 17892.93839400359],
      [49e-11, 4.18361320516, 18606.4989460002],
      [55e-11, 0.83886167974, 20452.8694122218],
      [5e-10, 1.46327331958, 37455.7264959744],
      [58e-11, 3.34847975377, 33990.6183442862],
      [65e-11, 1.45522693982, 76251.32777062019],
      [56e-11, 2.356506642, 37724.7534197482],
      [48e-11, 1.80689447612, 206.1855484372],
      [56e-11, 3.84224878744, 5483.254724826],
      [53e-11, 0.17334326094, 77717.29458646949],
      [53e-11, 0.79879700631, 77710.24834977149],
      [47e-11, 0.43240779709, 735.8765135318],
      [53e-11, 4.58786566028, 11616.976091013],
      [48e-11, 6.20230111054, 4171.4255366138],
      [52e-11, 2.9171905303, 6993.0088985497],
      [57e-11, 3.42008310383, 50317.2034395308],
      [48e-11, 0.12356889012, 13362.4497067992],
      [6e-10, 5.52056066934, 949.1756089698],
      [45e-11, 3.37963782356, 10763.779709261],
      [47e-11, 5.50958184902, 12779.4507954208],
      [52e-11, 5.42770349015, 310145.1528239236],
      [61e-11, 2.93237974631, 5791.4125575326],
      [44e-11, 2.87440620802, 8584.6616659008],
      [46e-11, 4.0314179656, 10667.8004820432],
      [44e-11, 1.21579107625, 6272.4391846416],
      [47e-11, 2.57670800912, 11492.542675792],
      [44e-11, 3.62570223167, 63658.8777508376],
      [51e-11, 0.84531181151, 12345.739057544],
      [46e-11, 1.17584556517, 149.5631971346],
      [43e-11, 0.01524970172, 37853.8754993826],
      [43e-11, 0.79038834934, 640.8776073822],
      [44e-11, 2.22554419931, 6293.7125153412],
      [49e-11, 1.01528394907, 149144.46708624958],
      [41e-11, 3.27146326065, 8858.3149443206],
      [45e-11, 3.03765521215, 65236.2212932854],
      [58e-11, 5.45843180927, 1975.492545856],
      [41e-11, 1.32190847146, 2547.8375382324],
      [47e-11, 3.67626039848, 28313.288804661],
      [47e-11, 6.21438985953, 10991.3058987006],
      [4e-10, 2.37237751212, 8273.8208670324],
      [56e-11, 1.09773690181, 77376.2010224076],
      [4e-10, 2.35698541041, 2699.7348193176],
      [43e-11, 5.28030897946, 17796.9591667858],
      [54e-11, 2.59175932091, 22910.44676536859],
      [55e-11, 0.07988985505, 83467.15635301729],
      [41e-11, 4.47510694062, 5618.3198048614],
      [4e-10, 1.35670430524, 27177.8515292002],
      [41e-11, 2.48011323946, 6549.6828917132],
      [5e-10, 2.56387920528, 82576.9812209953],
      [42e-11, 4.78798367468, 7856.89627409019],
      [47e-11, 2.75482175292, 18202.21671665939],
      [39e-11, 1.97008298629, 24491.4257925834],
      [42e-11, 4.04346599946, 7863.9425107882],
      [39e-11, 3.0103393642, 853.196381752],
      [38e-11, 0.49178679251, 38650.173506199],
      [44e-11, 1.35931241699, 21393.5419698576],
      [36e-11, 4.86047906533, 4157.1984426122],
      [43e-11, 5.64354880978, 1062.9050485382],
      [39e-11, 3.92736779879, 3903.9113764198],
      [4e-10, 5.3969491832, 9498.2122306346],
      [43e-11, 2.40863861919, 29424.634232916],
      [46e-11, 2.08022244271, 12573.2652469836],
      [5e-10, 6.15760345261, 78051.34191383338]
    ],
    "1": [
      [0.00103018607, 1.10748968172, 6283.0758499914],
      [1721238e-11, 1.06442300386, 12566.1516999828],
      [702217e-11, 3.14159265359, 0],
      [32345e-11, 1.02168583254, 18849.2275499742],
      [30801e-11, 2.84358443952, 5507.5532386674],
      [24978e-11, 1.31906570344, 5223.6939198022],
      [18487e-11, 1.42428709076, 1577.3435424478],
      [10077e-11, 5.91385248388, 10977.078804699],
      [8635e-11, 0.27158192945, 5486.777843175],
      [8654e-11, 1.42046854427, 6275.9623029906],
      [5069e-11, 1.68613408916, 5088.6288397668],
      [4985e-11, 6.01402338185, 6286.5989683404],
      [4667e-11, 5.98749245692, 529.6909650946],
      [4395e-11, 0.51800423445, 4694.0029547076],
      [387e-10, 4.74932206877, 2544.3144198834],
      [3755e-11, 5.07053801166, 796.2980068164],
      [41e-9, 1.08424801084, 9437.762934887],
      [3518e-11, 0.02290216978, 83996.84731811189],
      [3436e-11, 0.94937503872, 71430.69561812909],
      [3221e-11, 6.15628775321, 2146.1654164752],
      [3418e-11, 5.4115158188, 775.522611324],
      [2863e-11, 5.48433323746, 10447.3878396044],
      [2525e-11, 0.24296913555, 398.1490034082],
      [2205e-11, 4.94892172085, 6812.766815086],
      [2186e-11, 0.41991932164, 8031.0922630584],
      [2828e-11, 3.41986300734, 2352.8661537718],
      [2554e-11, 6.13241770582, 6438.4962494256],
      [1932e-11, 5.31374587091, 8429.2412664666],
      [2427e-11, 3.09118902115, 4690.4798363586],
      [173e-10, 1.53685999718, 4705.7323075436],
      [225e-10, 3.6883639562, 7084.8967811152],
      [2094e-11, 1.281690604, 1748.016413067],
      [1483e-11, 3.22226346483, 7234.794256242],
      [1434e-11, 0.81293662216, 14143.4952424306],
      [1754e-11, 3.22883705112, 6279.5527316424],
      [1583e-11, 4.09815978783, 11499.6562227928],
      [1575e-11, 5.53890314149, 3154.6870848956],
      [1847e-11, 1.82041234937, 7632.9432596502],
      [1499e-11, 3.63177937611, 11513.8833167944],
      [1337e-11, 4.64442556061, 6836.6452528338],
      [1275e-11, 2.69329661394, 1349.8674096588],
      [1348e-11, 6.15284035323, 5746.271337896],
      [1126e-11, 3.35676107739, 17789.845619785],
      [147e-10, 3.65282991735, 1194.4470102246],
      [1101e-11, 4.4974742767, 4292.3308329504],
      [1168e-11, 2.58033028504, 13367.9726311066],
      [1236e-11, 5.64980098028, 5760.4984318976],
      [985e-11, 0.65326301914, 5856.4776591154],
      [928e-11, 2.3255501829, 10213.285546211],
      [1073e-11, 5.82672338169, 12036.4607348882],
      [918e-11, 0.76907130762, 16730.4636895958],
      [876e-11, 1.50335727807, 11926.2544136688],
      [1023e-11, 5.62071200879, 6256.7775301916],
      [853e-11, 0.6567813463, 155.4203994342],
      [802e-11, 4.10519132094, 951.7184062506],
      [859e-11, 1.42880883564, 5753.3848848968],
      [992e-11, 1.1423800161, 1059.3819301892],
      [814e-11, 1.63584008733, 6681.2248533996],
      [664e-11, 4.55039663226, 5216.5803728014],
      [627e-11, 1.50782904323, 5643.1785636774],
      [644e-11, 4.19480024859, 6040.3472460174],
      [59e-10, 6.18371704849, 4164.311989613],
      [635e-11, 0.5242358477, 6290.1893969922],
      [65e-10, 0.97935492869, 25132.3033999656],
      [568e-11, 2.30121525349, 10973.55568635],
      [549e-11, 5.26737827342, 3340.6124266998],
      [547e-11, 2.20143332641, 1592.5960136328],
      [526e-11, 0.92464258271, 11371.7046897582],
      [493e-11, 5.91036281399, 3894.1818295422],
      [483e-11, 1.6600571154, 12168.0026965746],
      [514e-11, 3.59683072524, 10969.9652576982],
      [516e-11, 3.97164781773, 17298.1823273262],
      [529e-11, 5.0353867768, 9917.6968745098],
      [487e-11, 2.50544745305, 6127.6554505572],
      [419e-11, 4.05235655996, 10984.1923516998],
      [538e-11, 5.54081539813, 553.5694028424],
      [402e-11, 2.16859478359, 7860.4193924392],
      [552e-11, 2.32219865498, 11506.7697697936],
      [367e-11, 3.39145698451, 6496.3749454294],
      [36e-10, 5.34467204596, 7079.3738568078],
      [334e-11, 3.61346365667, 11790.6290886588],
      [454e-11, 0.28755421898, 801.8209311238],
      [419e-11, 3.69613970002, 10575.4066829418],
      [319e-11, 0.30793759304, 16200.7727245012],
      [376e-11, 5.81560210508, 7058.5984613154],
      [364e-11, 1.08425056923, 6309.3741697912],
      [294e-11, 4.54798604178, 11856.2186514245],
      [29e-10, 1.26451946335, 8635.9420037632],
      [394e-11, 4.15683669084, 26.2983197998],
      [26e-10, 5.09424572996, 10177.2576795336],
      [241e-11, 2.25766000302, 11712.9553182308],
      [239e-11, 1.06936978753, 242.728603974],
      [276e-11, 3.44260568764, 5884.9268465832],
      [255e-11, 5.38496803122, 21228.3920235458],
      [307e-11, 4.24313885601, 3738.761430108],
      [213e-11, 3.44661200485, 213.299095438],
      [198e-11, 0.69427265195, 1990.745017041],
      [195e-11, 5.16563409007, 12352.8526045448],
      [213e-11, 3.89937836808, 13916.0191096416],
      [214e-11, 4.00445200772, 5230.807466803],
      [184e-11, 5.59805976614, 6283.14316029419],
      [184e-11, 2.85275392124, 7238.6755916],
      [179e-11, 2.54259058252, 14314.1681130498],
      [236e-11, 5.58826125715, 6069.7767545534],
      [189e-11, 2.72689937708, 6062.6632075526],
      [184e-11, 6.04216273598, 6283.0085396886],
      [225e-11, 1.66128561344, 4732.0306273434],
      [23e-10, 3.62591335086, 6284.0561710596],
      [172e-11, 0.97566476085, 3930.2096962196],
      [162e-11, 2.19467339429, 18073.7049386502],
      [215e-11, 1.04672844028, 3496.032826134],
      [182e-11, 5.17782354566, 17253.04110768959],
      [167e-11, 2.17754938066, 6076.8903015542],
      [167e-11, 4.75672473773, 17267.26820169119],
      [149e-11, 0.80944185798, 709.9330485583],
      [149e-11, 0.17584214812, 9779.1086761254],
      [192e-11, 5.00680790235, 11015.1064773348],
      [141e-11, 4.38420380014, 4136.9104335162],
      [158e-11, 4.60969054283, 9623.6882766912],
      [133e-11, 3.30507062245, 154717.6098876827],
      [166e-11, 6.13191098325, 3.523118349],
      [181e-11, 1.60715321141, 7.1135470008],
      [15e-10, 5.28136702046, 13517.8701062334],
      [142e-11, 0.49788089569, 25158.6017197654],
      [124e-11, 6.03440459813, 9225.539273283],
      [124e-11, 0.99251562639, 65147.6197681377],
      [128e-11, 1.92032744711, 22483.84857449259],
      [124e-11, 3.99739675184, 4686.8894077068],
      [121e-11, 2.37814805239, 167283.7615876655],
      [123e-11, 5.6231511294, 5642.1982426092],
      [117e-11, 5.81755956156, 12569.6748183318],
      [157e-11, 3.40236948518, 16496.3613962024],
      [13e-10, 2.10499918142, 1589.0728952838],
      [116e-11, 0.55839966736, 5849.3641121146],
      [123e-11, 5.81645568991, 6282.0955289232],
      [11e-10, 0.42176497674, 6172.869528772],
      [15e-10, 4.26279600865, 3128.3887650958],
      [106e-11, 2.27436561182, 5429.8794682394],
      [114e-11, 1.52894564202, 12559.038152982],
      [121e-11, 0.39459045915, 12132.439962106],
      [104e-11, 2.41845930933, 426.598190876],
      [109e-11, 5.82786999856, 16858.4825329332],
      [102e-11, 4.4662648491, 23543.23050468179],
      [1e-9, 2.93812275274, 4535.0594369244],
      [97e-11, 3.97935904984, 6133.5126528568],
      [98e-11, 0.87616810121, 6525.8044539654],
      [11e-10, 6.22339014386, 12146.6670561076],
      [98e-11, 3.17344332543, 10440.2742926036],
      [96e-11, 2.44128701699, 3097.88382272579],
      [99e-11, 5.75642493267, 7342.4577801806],
      [9e-10, 0.18984343165, 13119.72110282519],
      [99e-11, 5.58884724219, 2388.8940204492],
      [91e-11, 6.04278320182, 20426.571092422],
      [8e-10, 1.29028142103, 5650.2921106782],
      [86e-11, 3.94529200528, 10454.5013866052],
      [85e-11, 1.92836879835, 29088.811415985],
      [76e-11, 2.70726317966, 143571.32428481648],
      [91e-11, 5.63859073351, 8827.3902698748],
      [76e-11, 1.80783856698, 28286.9904848612],
      [75e-11, 3.40858032804, 5481.2549188676],
      [7e-10, 4.53719487231, 17256.6315363414],
      [89e-11, 1.10064490942, 11769.8536931664],
      [66e-11, 2.78384937771, 536.8045120954],
      [68e-11, 3.88199295043, 17260.1546546904],
      [88e-11, 3.88075269535, 7477.522860216],
      [61e-11, 6.17558202197, 11087.2851259184],
      [6e-10, 4.34824715818, 6206.8097787158],
      [82e-11, 4.59843208943, 9388.0059094152],
      [79e-11, 1.63139280394, 4933.2084403326],
      [81e-11, 1.55550779371, 9380.9596727172],
      [78e-11, 4.20905757519, 5729.506447149],
      [58e-11, 5.76889633224, 3634.6210245184],
      [6e-10, 0.93813100594, 12721.572099417],
      [71e-11, 6.11408885148, 8662.240323563],
      [57e-11, 5.48112524468, 18319.5365848796],
      [7e-10, 0.01749174864, 14945.3161735544],
      [74e-11, 1.0997604582, 16460.33352952499],
      [56e-11, 1.63036186739, 15720.8387848784],
      [55e-11, 4.86788348404, 13095.8426650774],
      [6e-10, 5.93729841267, 12539.853380183],
      [54e-11, 0.22608242982, 15110.4661198662],
      [54e-11, 2.30250047594, 16062.1845261168],
      [64e-11, 2.13513754101, 7875.6718636242],
      [59e-11, 5.87963500139, 5331.3574437408],
      [58e-11, 2.30546168615, 955.5997416086],
      [49e-11, 1.93839278478, 5333.9002410216],
      [54e-11, 5.80331607119, 12043.574281889],
      [54e-11, 4.44671053809, 4701.1165017084],
      [49e-11, 0.30241161485, 6805.6532680852],
      [46e-11, 2.76898193028, 6709.6740408674],
      [46e-11, 3.98449608961, 98068.53671630539],
      [49e-11, 3.72022009896, 12323.4230960088],
      [45e-11, 3.30065998328, 22003.9146348698],
      [48e-11, 0.71071357303, 6303.4311693902],
      [61e-11, 1.66030429494, 6262.300454499],
      [47e-11, 1.26317154881, 11919.140866668],
      [51e-11, 1.08020906825, 10988.808157535],
      [45e-11, 0.89150445122, 51868.2486621788],
      [43e-11, 0.57756724285, 24356.7807886416],
      [43e-11, 1.61526242998, 6277.552925684],
      [45e-11, 2.96132920534, 8982.810669309],
      [43e-11, 5.74295325645, 11403.676995575],
      [55e-11, 3.14274403422, 33019.0211122046],
      [57e-11, 0.06379726305, 15671.0817594066],
      [41e-11, 2.53761820726, 6262.7205305926],
      [4e-10, 1.53130436944, 18451.07854656599],
      [52e-11, 1.71451922581, 1551.045222648],
      [55e-11, 0.89439119424, 11933.3679606696],
      [45e-11, 3.88495384656, 60530.4889857418],
      [4e-10, 4.75740908001, 38526.574350872],
      [4e-10, 3.77498297348, 26087.9031415742],
      [39e-11, 2.97113832621, 2118.7638603784],
      [4e-10, 3.36050962605, 10021.8372800994],
      [47e-11, 1.67051113434, 6303.8512454838],
      [52e-11, 5.21827368711, 77713.7714681205],
      [47e-11, 4.26356628717, 21424.4666443034],
      [37e-11, 1.66712389942, 6819.8803620868],
      [37e-11, 0.65746800933, 12029.3471878874],
      [35e-11, 3.36255650927, 24072.9214697764],
      [36e-11, 0.11087914947, 10344.2950653858],
      [4e-10, 4.14725582115, 2787.0430238574],
      [35e-11, 5.93650887012, 31570.7996493912],
      [36e-11, 2.15108874765, 30774.5016425748],
      [36e-11, 1.75078825382, 16207.886271502],
      [34e-11, 2.75708224536, 12139.5535091068],
      [34e-11, 6.168913788, 24491.4257925834],
      [34e-11, 2.31528650443, 55798.4583583984],
      [32e-11, 4.21446357042, 15664.03552270859],
      [34e-11, 3.19783054699, 32217.2001810808],
      [39e-11, 1.24979117796, 6418.1409300268],
      [38e-11, 5.89832942685, 640.8776073822],
      [33e-11, 4.80200120107, 16723.350142595],
      [32e-11, 1.72442327688, 27433.88921587499],
      [35e-11, 4.44608896525, 18202.21671665939],
      [31e-11, 4.5279073128, 6702.5604938666],
      [34e-11, 3.96287980676, 18216.443810661],
      [3e-10, 5.06259854444, 226858.23855437007],
      [34e-11, 1.43910280005, 49515.382508407],
      [3e-10, 0.29303163371, 13521.7514415914],
      [29e-11, 2.0263384022, 11609.8625440122],
      [3e-10, 2.5492323024, 9924.8104215106],
      [32e-11, 4.91793198558, 11300.5842213564],
      [3e-10, 0.23284423547, 23581.2581773176],
      [29e-11, 1.62807736495, 639.897286314],
      [28e-11, 3.84568936822, 2699.7348193176],
      [29e-11, 1.83149729794, 29822.7832363242],
      [33e-11, 4.60320094415, 19004.6479494084],
      [27e-11, 1.86151121799, 6288.5987742988],
      [3e-10, 4.4649407224, 36147.4098773004],
      [28e-11, 5.19684492912, 5863.5912061162],
      [35e-11, 4.52695674113, 36949.2308084242],
      [27e-11, 3.52528177609, 10770.8932562618],
      [26e-11, 1.48499438453, 11080.1715789176],
      [35e-11, 2.82154380962, 19402.7969528166],
      [25e-11, 2.46339998836, 6279.4854213396],
      [26e-11, 4.97688894643, 16737.5772365966],
      [27e-11, 0.408271125, 12964.300703391],
      [29e-11, 4.15148654061, 45892.73043315699],
      [26e-11, 4.56404104286, 17796.9591667858],
      [25e-11, 2.89309528854, 6286.6662786432],
      [26e-11, 4.82914580957, 1066.49547719],
      [31e-11, 3.93096113738, 29864.334027309],
      [24e-11, 6.14987193584, 18606.4989460002],
      [24e-11, 3.74225964547, 29026.48522950779],
      [25e-11, 5.70460621565, 27707.5424942948],
      [25e-11, 5.33928840652, 15141.390794312],
      [23e-11, 2.37624087345, 17996.0311682222],
      [26e-11, 1.34231351782, 18875.525869774],
      [22e-11, 5.5079162612, 6245.0481773556],
      [24e-11, 1.33998410121, 19800.9459562248],
      [23e-11, 0.2251228089, 6279.7894925736],
      [22e-11, 1.17576471775, 11925.2740926006],
      [22e-11, 3.5860360664, 6915.8595893046],
      [23e-11, 3.21621246666, 6286.3622074092],
      [29e-11, 2.09564449439, 15265.8865193004],
      [22e-11, 4.74660932338, 28230.18722269139],
      [21e-11, 2.30688751432, 5999.2165311262],
      [28e-11, 3.92087592807, 18208.349942592],
      [21e-11, 3.22643339385, 25934.1243310894],
      [21e-11, 3.04956726238, 6566.9351688566],
      [27e-11, 5.35645770522, 33794.5437235286],
      [25e-11, 5.91542362188, 6489.2613984286],
      [2e-10, 1.52296293311, 135.0650800354],
      [19e-11, 1.78134428631, 156137.47598479927],
      [19e-11, 0.34388684087, 5327.4761083828],
      [26e-11, 3.41701003233, 25287.7237993998],
      [19e-11, 2.86664271911, 18422.62935909819],
      [19e-11, 4.71432851499, 77690.75950573849],
      [19e-11, 2.54227398241, 77736.78343050249],
      [2e-10, 5.91915117116, 48739.859897083]
    ],
    "2": [
      [4359385e-11, 5.78455133808, 6283.0758499914],
      [123633e-11, 5.57935427994, 12566.1516999828],
      [12342e-11, 3.14159265359, 0],
      [8792e-11, 3.62777893099, 77713.7714681205],
      [5689e-11, 1.86958905084, 5573.1428014331],
      [3302e-11, 5.47034879713, 18849.2275499742],
      [1471e-11, 4.47964125007, 5507.5532386674],
      [1013e-11, 2.81323115556, 5223.6939198022],
      [854e-11, 3.107765669, 1577.3435424478],
      [1102e-11, 2.84173992403, 161000.6857376741],
      [648e-11, 5.47348203398, 775.522611324],
      [608e-11, 1.37894173533, 6438.4962494256],
      [499e-11, 4.4164924225, 6286.5989683404],
      [416e-11, 0.90332697974, 10977.078804699],
      [404e-11, 3.2056726953, 5088.6288397668],
      [351e-11, 1.81081728907, 5486.777843175],
      [466e-11, 3.65086758149, 7084.8967811152],
      [458e-11, 5.38585314743, 149854.4001348079],
      [304e-11, 3.51015066341, 796.2980068164],
      [266e-11, 6.17413982699, 6836.6452528338],
      [281e-11, 1.8387467254, 4694.0029547076],
      [262e-11, 1.41420110644, 2146.1654164752],
      [264e-11, 3.14103683911, 71430.69561812909],
      [319e-11, 5.35037932146, 3154.6870848956],
      [238e-11, 2.17695432424, 155.4203994342],
      [229e-11, 4.7596958807, 7234.794256242],
      [291e-11, 4.61776401638, 4690.4798363586],
      [211e-11, 0.21864885298, 4705.7323075436],
      [204e-11, 4.22895113488, 1349.8674096588],
      [195e-11, 4.58550676556, 529.6909650946],
      [255e-11, 2.81442711144, 1748.016413067],
      [182e-11, 5.70454011389, 6040.3472460174],
      [18e-10, 6.02147727878, 4292.3308329504],
      [186e-11, 1.58690991244, 6309.3741697912],
      [167e-11, 2.88802733052, 9437.762934887],
      [166e-11, 1.99990574734, 8031.0922630584],
      [16e-10, 0.04412738495, 2544.3144198834],
      [197e-11, 2.01089431842, 1194.4470102246],
      [165e-11, 5.78372596774, 83996.84731811189],
      [214e-11, 3.38300910371, 7632.9432596502],
      [14e-10, 0.36669664351, 10447.3878396044],
      [151e-11, 0.95519595275, 6127.6554505572],
      [136e-11, 1.48417295645, 2352.8661537718],
      [128e-11, 5.48057748834, 951.7184062506],
      [126e-11, 5.26866506592, 6279.5527316424],
      [127e-11, 3.77552907014, 6812.766815086],
      [103e-11, 4.95897533789, 398.1490034082],
      [104e-11, 0.70183576826, 1592.5960136328],
      [101e-11, 1.14481598642, 3894.1818295422],
      [131e-11, 0.76624310306, 553.5694028424],
      [109e-11, 5.41063597567, 6256.7775301916],
      [78e-11, 5.84775340741, 242.728603974],
      [97e-11, 1.94685257714, 11856.2186514245],
      [1e-9, 5.19725292131, 244287.60000722768],
      [76e-11, 0.70480774041, 8429.2412664666],
      [8e-10, 6.18430772683, 1059.3819301892],
      [68e-11, 5.29561709093, 14143.4952424306],
      [85e-11, 5.39487308005, 25132.3033999656],
      [55e-11, 5.16874637579, 7058.5984613154],
      [63e-11, 0.48494730699, 801.8209311238],
      [58e-11, 4.07254840265, 13367.9726311066],
      [51e-11, 3.89696552232, 12036.4607348882],
      [51e-11, 5.56335232286, 1990.745017041],
      [6e-10, 2.2504659671, 8635.9420037632],
      [49e-11, 5.58163417371, 6290.1893969922],
      [51e-11, 3.87240194908, 26.2983197998],
      [51e-11, 4.19300909995, 7860.4193924392],
      [41e-11, 3.97169191582, 10973.55568635],
      [41e-11, 3.5708091923, 7079.3738568078],
      [56e-11, 2.76959005761, 90955.5516944961],
      [42e-11, 1.91461189163, 7477.522860216],
      [42e-11, 0.42775891995, 10213.285546211],
      [42e-11, 1.06925480488, 709.9330485583],
      [38e-11, 6.17935925345, 9917.6968745098],
      [5e-10, 0.81691517401, 11506.7697697936],
      [53e-11, 1.45828359397, 233141.3144043615],
      [38e-11, 3.32444534628, 5643.1785636774],
      [47e-11, 6.21543665927, 6681.2248533996],
      [37e-11, 0.3635930998, 10177.2576795336],
      [45e-11, 5.29587706357, 10575.4066829418],
      [34e-11, 5.63446915337, 6525.8044539654],
      [34e-11, 5.36385158519, 4933.2084403326],
      [35e-11, 5.36152295839, 25158.6017197654],
      [42e-11, 5.08837645072, 11015.1064773348],
      [42e-11, 4.22496037505, 88860.05707098669],
      [39e-11, 1.99171699618, 6284.0561710596],
      [29e-11, 3.1908862817, 11926.2544136688],
      [29e-11, 0.14996158324, 12168.0026965746],
      [3e-10, 1.58346276808, 9779.1086761254],
      [26e-11, 4.16210340581, 12569.6748183318],
      [36e-11, 2.74684637873, 3738.761430108],
      [26e-11, 0.7282491532, 1589.0728952838],
      [31e-11, 5.34906371821, 143571.32428481648],
      [25e-11, 0.10240267494, 22483.84857449259],
      [3e-10, 3.47110495524, 14945.3161735544],
      [26e-11, 3.89359701125, 5753.3848848968],
      [24e-11, 1.18744224678, 4535.0594369244],
      [33e-11, 2.99317143244, 3930.2096962196],
      [24e-11, 1.57253767584, 6496.3749454294],
      [24e-11, 3.47434797542, 4136.9104335162],
      [22e-11, 3.91230073719, 6275.9623029906],
      [25e-11, 4.02978941287, 3128.3887650958],
      [23e-11, 1.07724492065, 12721.572099417],
      [21e-11, 1.89591807148, 16730.4636895958],
      [25e-11, 2.42198937013, 5729.506447149],
      [2e-10, 1.78163489101, 17789.845619785],
      [21e-11, 0.49258939822, 29088.811415985],
      [26e-11, 4.14947806747, 2388.8940204492],
      [27e-11, 2.54785812264, 3496.032826134],
      [2e-10, 4.29944129273, 16858.4825329332],
      [21e-11, 5.97796936723, 7.1135470008],
      [19e-11, 0.80292033311, 16062.1845261168],
      [24e-11, 4.89894141052, 17260.1546546904],
      [25e-11, 1.37003752175, 6282.0955289232],
      [22e-11, 4.92663152168, 18875.525869774],
      [23e-11, 5.68902059771, 16460.33352952499],
      [23e-11, 3.03021283729, 66567.48586525429],
      [16e-11, 3.89713736666, 5331.3574437408],
      [16e-11, 5.68562539832, 12559.038152982],
      [16e-11, 3.95085099736, 3097.88382272579],
      [16e-11, 3.99041783945, 6283.14316029419],
      [2e-10, 6.106439191, 167283.7615876655],
      [15e-11, 4.09775914607, 11712.9553182308],
      [16e-11, 5.717699407, 17298.1823273262],
      [16e-11, 3.28894009404, 5884.9268465832],
      [15e-11, 4.4256424368, 13517.8701062334],
      [16e-11, 4.4345208093, 6283.0085396886],
      [14e-11, 1.44384279999, 4164.311989613],
      [14e-11, 4.47380919159, 11790.6290886588],
      [14e-11, 4.77646531825, 7342.4577801806],
      [11e-11, 2.56768522896, 5481.2549188676],
      [11e-11, 1.514433322, 16200.7727245012],
      [11e-11, 0.88708889185, 21228.3920235458],
      [14e-11, 4.50116508534, 640.8776073822]
    ],
    "3": [
      [144595e-11, 4.27319433901, 6283.0758499914],
      [6729e-11, 3.91706261708, 12566.1516999828],
      [774e-11, 0, 0],
      [247e-11, 3.73021571217, 18849.2275499742],
      [36e-11, 2.8008140905, 6286.5989683404],
      [33e-11, 5.62990083112, 6127.6554505572],
      [18e-11, 3.72826142555, 6438.4962494256],
      [16e-11, 4.26011484232, 6525.8044539654],
      [14e-11, 3.47817116396, 6256.7775301916],
      [12e-11, 3.55747379482, 25132.3033999656],
      [1e-10, 4.43995693209, 4705.7323075436],
      [1e-10, 4.2804525547, 83996.84731811189],
      [9e-11, 5.36457057335, 6040.3472460174],
      [8e-11, 1.78458957263, 5507.5532386674],
      [9e-11, 0.4727519993, 6279.5527316424],
      [9e-11, 1.34741231639, 6309.3741697912],
      [9e-11, 0.77092900708, 5729.506447149],
      [7e-11, 3.50146897332, 7058.5984613154],
      [5e-11, 2.890710617, 775.522611324],
      [6e-11, 2.36514111314, 6836.6452528338]
    ],
    "4": [
      [3858e-11, 2.56389016346, 6283.0758499914],
      [306e-11, 2.26911740541, 12566.1516999828],
      [53e-11, 3.44031471924, 5573.1428014331],
      [15e-11, 2.03136359366, 18849.2275499742],
      [13e-11, 2.05688873673, 77713.7714681205],
      [7e-11, 4.4121885448, 161000.6857376741],
      [4e-11, 5.33854414781, 6438.4962494256],
      [6e-11, 3.81514213664, 149854.4001348079],
      [4e-11, 4.26602478239, 6127.6554505572]
    ],
    "5": [
      [86e-11, 1.21805304895, 6283.0758499914],
      [12e-11, 0.65572878044, 12566.1516999828]
    ]
  },
  name: "earth",
  type: "B"
};
var vsop87Bearth_default = m2;

// node_modules/date-holidays-parser/src/vsop87Bearth.js
var vsop87Bearth = vsop87Bearth_default;

// node_modules/date-holidays-parser/src/Equinox.js
var import_moment_timezone2 = __toESM(require_moment_timezone2(), 1);
var earth2 = new planetposition_default.Planet(vsop87Bearth);
var Equinox = class extends CalEvent {
  /**
   * @param {object} [opts]
   * @param {string} opts.season - type of season (spring|summer|autumn|winter)
   * @param {number|string} opts.offset - offset in days
   */
  constructor(opts) {
    opts = opts || {};
    super(opts);
    this._season = opts.season;
    this._timezone = opts.timezone || "GMT";
  }
  inYear(year) {
    let jde;
    switch (this._season) {
      case "march": {
        jde = solstice_default.march2(year, earth2);
        break;
      }
      case "june": {
        jde = solstice_default.june2(year, earth2);
        break;
      }
      case "september": {
        jde = solstice_default.september2(year, earth2);
        break;
      }
      case "december": {
        jde = solstice_default.december2(year, earth2);
        break;
      }
    }
    const str = new julian_default.Calendar().fromJDE(jde).toDate().toISOString();
    let date;
    if (/^[+-]\d{2}:\d{2}?$/.test(this._timezone)) {
      date = (0, import_moment_timezone2.default)(str).utcOffset(this._timezone);
    } else {
      date = (0, import_moment_timezone2.default)(str).tz(this._timezone);
    }
    const floorDate = {
      year,
      month: date.month() + 1,
      day: date.date()
    };
    const d3 = new CalDate(floorDate).setOffset(this.offset);
    this.dates.push(d3);
    return this;
  }
};

// node_modules/date-chinese/src/vsop87Bearth.js
var vsop87Bearth2 = vsop87Bearth_default;

// node_modules/date-chinese/src/Chinese.js
var earth3 = new planetposition_default.Planet(vsop87Bearth2);
var lunarOffset = moonphase_default.meanLunarMonth / 2;
var p2 = 180 / Math.PI;
var epochY = -2636;
var epoch = new julian_default.CalendarGregorian(epochY, 2, 15).toJDE();
function toYear3(jde) {
  return new julian_default.CalendarGregorian().fromJDE(jde).toYear();
}
function toFixed(val, e) {
  return parseFloat(val.toFixed(e), 10);
}
var CalendarChinese = class _CalendarChinese {
  /**
   * constructor
   *
   * @param {Number|Array|Object} cycle - chinese 60 year cicle; if `{Array}` than `[cycle, year, ..., day]`
   * @param {Number} year - chinese year of cycle
   * @param {Number} month - chinese month
   * @param {Number} leap - `true` if leap month
   * @param {Number} day - chinese day
   */
  constructor(cycle, year, month, leap, day) {
    this.set(cycle, year, month, leap, day);
    this._epochY = epochY;
    this._epoch = epoch;
    this._cache = {
      // cache for results
      lon: {},
      sue: {},
      ny: {}
    };
  }
  /**
   * set a new chinese date
   *
   * @param {Number|Array|Object} cycle - chinese 60 year cicle; if `{Array}` than `[cycle, year, ..., day]`
   * @param {Number} year - chinese year of cycle
   * @param {Number} month - chinese month
   * @param {Number} leap - `true` if leap month
   * @param {Number} day - chinese day
   */
  set(cycle, year, month, leap, day) {
    if (cycle instanceof _CalendarChinese) {
      this.cycle = cycle.cycle;
      this.year = cycle.year;
      this.month = cycle.month;
      this.leap = cycle.leap;
      this.day = cycle.day;
    } else if (Array.isArray(cycle)) {
      this.cycle = cycle[0];
      this.year = cycle[1];
      this.month = cycle[2];
      this.leap = cycle[3];
      this.day = cycle[4];
    } else {
      this.cycle = cycle;
      this.year = year;
      this.month = month;
      this.leap = leap;
      this.day = day;
    }
    return this;
  }
  /**
   * returns chinese date
   * @returns {Array}
   */
  get() {
    return [this.cycle, this.year, this.month, this.leap, this.day];
  }
  /**
   * get Gregorian year from Epoch / Cycle
   * @return {Number} year
   */
  yearFromEpochCycle() {
    return this._epochY + (this.cycle - 1) * 60 + (this.year - 1);
  }
  /**
   * convert gregorian date to chinese calendar date
   *
   * @param {Number} year - (int) year in Gregorian or Julian Calendar
   * @param {Number} month - (int)
   * @param {Number} day - needs to be in correct (chinese) timezone
   * @return {Object} this
   */
  fromGregorian(year, month, day) {
    const j = this.midnight(new julian_default.CalendarGregorian(year, month, day).toJDE());
    if (month === 1 && day <= 20)
      year--;
    this._from(j, year);
    return this;
  }
  /**
   * convert date to chinese calendar date
   *
   * @param {Date} date - javascript date object
   * @return {Object} this
   */
  fromDate(date) {
    const j = this.midnight(new julian_default.CalendarGregorian().fromDate(date).toJDE());
    this._from(j, date.getFullYear());
    return this;
  }
  /**
   * convert JDE to chinese calendar date
   *
   * @param {Number} jde - date in JDE
   * @return {Object} this
   */
  fromJDE(jde) {
    const j = this.midnight(jde);
    const gc = new julian_default.CalendarGregorian().fromJDE(j);
    if (gc.month === 1 && gc.day < 20)
      gc.year--;
    this._from(j, gc.year);
    return this;
  }
  /**
   * common conversion from JDE, year to chinese date
   *
   * @private
   * @param {Number} j - date in JDE
   * @param {Number} year - gregorian year
   */
  _from(j, year) {
    let ny = this.newYear(year);
    if (ny > j) {
      ny = this.newYear(year - 1);
    }
    let nm = this.previousNewMoon(j);
    if (nm < ny) {
      nm = ny;
    }
    const years2 = 1.5 + (ny - this._epoch) / base_default.BesselianYear;
    this.cycle = 1 + Math.trunc((years2 - 1) / 60);
    this.year = 1 + Math.trunc((years2 - 1) % 60);
    this.month = this.inMajorSolarTerm(nm).term;
    const m3 = Math.round((nm - ny) / moonphase_default.meanLunarMonth);
    if (m3 === 0) {
      this.month = 1;
      this.leap = false;
    } else {
      this.leap = this.isLeapMonth(nm);
    }
    if (m3 > this.month) {
      this.month = m3;
    } else if (this.leap) {
      this.month--;
    }
    this.day = 1 + Math.trunc(toFixed(j, 3) - toFixed(nm, 3));
  }
  /**
   * convert chinese date to gregorian date
   *
   * @param {Number} [gyear] - (int) gregorian year
   * @return {Object} date in gregorian (preleptic) calendar; Timezone is Standard Chinese / Bejing Time
   *   {Number} year - (int)
   *   {Number} month - (int)
   *   {Number} day - (int)
   */
  toGregorian(gyear) {
    const jde = this.toJDE(gyear);
    const gc = new julian_default.CalendarGregorian().fromJDE(jde + 0.5);
    return {
      year: gc.year,
      month: gc.month,
      day: Math.trunc(gc.day)
    };
  }
  /**
   * convert chinese date to Date
   *
   * @param {Number} [gyear] - (int) gregorian year
   * @return {Date} javascript date object in gregorian (preleptic) calendar
   */
  toDate(gyear) {
    const jde = this.toJDE(gyear);
    return new julian_default.CalendarGregorian().fromJDE(toFixed(jde, 4)).toDate();
  }
  /**
   * convert chinese date to JDE
   *
   * @param {Number} [gyear] - (int) gregorian year
   * @return {Number} date in JDE
   */
  toJDE(gyear) {
    const years2 = gyear || this.yearFromEpochCycle();
    const ny = this.newYear(years2);
    let nm = ny;
    if (this.month > 1) {
      nm = this.previousNewMoon(ny + this.month * 29);
      const st = this.inMajorSolarTerm(nm).term;
      const lm = this.isLeapMonth(nm);
      if (st > this.month) {
        nm = this.previousNewMoon(nm - 1);
      } else if (st < this.month || lm && !this.leap) {
        nm = this.nextNewMoon(nm + 1);
      }
    }
    if (this.leap) {
      nm = this.nextNewMoon(nm + 1);
    }
    const jde = nm + this.day - 1;
    return jde;
  }
  /**
   * timeshift to UTC
   *
   * @param {CalendarGregorian} gcal - gregorian calendar date
   * @return {Number} timeshift in fraction of day
   */
  timeshiftUTC(gcal) {
    if (gcal.toYear() >= 1929) {
      return 8 / 24;
    }
    return 1397 / 180 / 24;
  }
  /**
   * time/date at midnight - truncate `jde` to actual day
   *
   * @param {Number} jde - julian ephemeris day
   * @return {Number} truncated jde
   */
  midnight(jde) {
    const gcal = new julian_default.CalendarGregorian().fromJDE(jde);
    const ts = 0.5 - this.timeshiftUTC(gcal);
    let mn2 = Math.trunc(gcal.toJD() - ts) + ts;
    mn2 = gcal.fromJD(mn2).toJDE();
    if (toFixed(jde, 5) === toFixed(mn2, 5) + 1) {
      return jde;
    }
    return mn2;
  }
  /**
   * get major solar term `Z1...Z12` for a given date in JDE
   *
   * @param {Number} jde - date of new moon
   * @returns {Number} major solar term part of that month
   */
  inMajorSolarTerm(jde) {
    const lon = this._cache.lon[jde] || solar_default.apparentVSOP87(earth3, jde).lon;
    this._cache.lon[jde] = lon;
    const lonDeg = lon * p2 - 1e-13;
    const term = (2 + Math.floor(lonDeg / 30)) % 12 + 1;
    return { term, lon: lonDeg };
  }
  /**
   * Test if date `jde` is inside a leap month
   * `jde` and previous new moon need to have the same major solar term
   *
   * @param {Number} jde - date of new moon
   * @returns {Boolean} `true` if previous new moon falls into same solar term
   */
  isLeapMonth(jde) {
    const t1 = this.inMajorSolarTerm(jde);
    const next = this.nextNewMoon(this.midnight(jde + lunarOffset));
    const t2 = this.inMajorSolarTerm(next);
    const r = t1.term === t2.term;
    return r;
  }
  /**
   * next new moon since `jde`
   *
   * @param {Number} jde - date in julian ephemeris days
   * @return {Number} jde at midnight
   */
  nextNewMoon(jde) {
    let nm = this.midnight(moonphase_default.newMoon(toYear3(jde)));
    let cnt = 0;
    while (nm < jde && cnt++ < 4) {
      nm = this.midnight(moonphase_default.newMoon(toYear3(jde + cnt * lunarOffset)));
    }
    return nm;
  }
  /**
   * next new moon since `jde`
   *
   * @param {Number} jde - date in julian ephemeris days
   * @return {Number} jde at midnight
   */
  previousNewMoon(jde) {
    let nm = this.midnight(moonphase_default.newMoon(toYear3(jde)));
    let cnt = 0;
    while (nm > jde && cnt++ < 4) {
      nm = this.midnight(moonphase_default.newMoon(toYear3(jde - cnt * lunarOffset)));
    }
    return nm;
  }
  /**
   * chinese new year for a given gregorian year
   *
   * @param {Number} gyear - gregorian year (int)
   * @param {Number} jde at midnight
   */
  newYear(gyear) {
    gyear = Math.trunc(gyear);
    if (this._cache.ny[gyear])
      return this._cache.ny[gyear];
    const sue1 = this._cache.sue[gyear - 1] || solstice_default.december2(gyear - 1, earth3);
    const sue2 = this._cache.sue[gyear] || solstice_default.december2(gyear, earth3);
    this._cache.sue[gyear - 1] = sue1;
    this._cache.sue[gyear] = sue2;
    const m11n = this.previousNewMoon(this.midnight(sue2 + 1));
    const m12 = this.nextNewMoon(this.midnight(sue1 + 1));
    const m13 = this.nextNewMoon(this.midnight(m12 + lunarOffset));
    this.leapSui = Math.round((m11n - m12) / moonphase_default.meanLunarMonth) === 12;
    let ny = m13;
    if (this.leapSui && (this.isLeapMonth(m12) || this.isLeapMonth(m13))) {
      ny = this.nextNewMoon(this.midnight(m13 + moonphase_default.meanLunarMonth / 2));
    }
    this._cache.ny[gyear] = ny;
    return ny;
  }
  /**
   * get solar term from solar longitude
   *
   * @param {Number} term - jiéqì solar term 1 .. 24
   * @param {Number} [gyear] - (int) gregorian year
   * @returns {Number} jde at midnight
   */
  solarTerm(term, gyear) {
    if (gyear && term <= 3)
      gyear--;
    const years2 = gyear || this.yearFromEpochCycle();
    const lon = (term + 20) % 24 * 15 % 360;
    let st = solstice_default.longitude(years2, earth3, lon / p2);
    st = this.midnight(st);
    return st;
  }
  /**
   * get major solar term
   *
   * @param {Number} term - zhōngqì solar term Z1 .. Z12
   * @param {Number} [gyear] - (int) gregorian year
   * @returns {Number} jde at midnight
   */
  majorSolarTerm(term, gyear) {
    return this.solarTerm(term * 2, gyear);
  }
  /**
   * get minor solar term
   *
   * @param {Number} term - jiéqì solar term J1 .. J12
   * @param {Number} [gyear] - (int) gregorian year
   * @returns {Number} jde at midnight
   */
  minorSolarTerm(term, gyear) {
    return this.solarTerm(term * 2 - 1, gyear);
  }
  /**
   * Qı̄ngmíng - Pure brightness Festival
   *
   * @param {Number} [gyear] - (int) gregorian year
   * @returns {Number} jde at midnight
   */
  qingming(gyear) {
    return this.solarTerm(5, gyear);
  }
};

// node_modules/date-chinese/src/Korean.js
var epochY2 = -2333;
var epoch2 = new julian_default.CalendarGregorian(epochY2, 1, 27).toJDE();
var UTC_DATES = [
  {
    date: /* @__PURE__ */ new Date("1961-10-09T15:00:00.000Z"),
    // 1961-10-10T00:00:00+0900
    shift: 9 / 24
  },
  // +9:00:00h (135° East)
  {
    date: /* @__PURE__ */ new Date("1954-03-20T15:30:00.000Z"),
    // 1954-03-21T00:00:00+0830
    shift: 8.5 / 24
  },
  {
    date: /* @__PURE__ */ new Date("1911-12-31T15:00:00.000Z"),
    // 1912-01-01T00:00:00+0900
    shift: 9 / 24
  },
  {
    date: /* @__PURE__ */ new Date("1908-03-31T15:30:00.000Z"),
    // 1908-04-01T00:00:00+0830
    shift: 8.5 / 24
  }
];
var CalendarKorean = class extends CalendarChinese {
  constructor(cycle, year, month, leap, day) {
    super(cycle, year, month, leap, day);
    this._epochY = epochY2;
    this._epoch = epoch2;
  }
  /**
   * timeshift to UTC
   *
   * @param {CalendarGregorian} gcal - gregorian calendar date
   * @return {Number} timeshift in fraction of day
   */
  timeshiftUTC(gcal) {
    const date = gcal.toDate();
    for (const i in UTC_DATES) {
      if (date >= UTC_DATES[i].date) {
        return UTC_DATES[i].shift;
      }
    }
    return 3809 / 450 / 24;
  }
};

// node_modules/date-chinese/src/Vietnamese.js
var CalendarVietnamese = class extends CalendarChinese {
  /**
   * timeshift to UTC
   *
   * @param {CalendarGregorian} gcal - gregorian calendar date
   * @return {Number} timeshift in fraction of day
   */
  timeshiftUTC(gcal) {
    if (gcal.toYear() >= 1968) {
      return 7 / 24;
    }
    return 8 / 24;
  }
};

// node_modules/date-chinese/src/Japanese.js
var UTC_DATES2 = [
  {
    date: /* @__PURE__ */ new Date("1888-02-11T15:00:00.000Z"),
    // 1888-02-12T00:00:00+0900
    shift: 9 / 24
  }
  // +9:00:00h (135° East) Japanese standard meridian
];

// node_modules/date-holidays-parser/src/Chinese.js
var Chinese = class extends CalEvent {
  /**
   * @param {object} [opts]
   */
  constructor(opts) {
    opts = opts || {};
    super(opts);
    switch (opts.fn) {
      case "chinese":
        this.cal = new CalendarChinese();
        break;
      case "korean":
        this.cal = new CalendarKorean();
        break;
      case "vietnamese":
        this.cal = new CalendarVietnamese();
        break;
    }
  }
  inYear(year) {
    let d3;
    let jde;
    let date;
    const opts = this.opts;
    if (opts.solarterm) {
      jde = this.cal.solarTerm(opts.solarterm, year);
      date = this.cal.fromJDE(jde).toGregorian();
      d3 = new CalDate(date).setOffset(opts.day - 1);
    } else {
      this.cal.set(opts.cycle, opts.year, opts.month, opts.leapMonth, opts.day);
      jde = this.cal.toJDE(year);
      date = this.cal.fromJDE(jde).toGregorian();
      d3 = new CalDate(date);
    }
    this.dates.push(d3);
    return this;
  }
};

// node_modules/date-bengali-revised/src/convert.js
var monthNames = ["বৈশাখ", "জ্যৈষ্ঠ", "আষাঢ়", "শ্রাবণ", "ভাদ্র", "আশ্বিন", "কার্তিক", "অগ্রহায়ণ", "পৌষ", "মাঘ", "ফাল্গুন", "চৈত্র"];
var weekDays = ["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পতিবার", "শুক্রবার", "শনিবার"];
var seasonNames = ["গ্রীষ্ম", "বর্ষা", "শরৎ", "হেমন্ত", "শীত", "বসন্ত"];
var digits = ["০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯"];
var banglas;
var createBanglas = () => {
  banglas = digits.reduce((o, c, i) => {
    o[c] = i;
    return o;
  }, {});
};
var digitToBangla = (number) => String(number).replace(/\d/g, (digit) => digits[digit]);
var banglaToDigit = (bangla) => {
  if (!banglas)
    createBanglas();
  const month = monthNames.indexOf(bangla);
  const str = month !== -1 ? month + 1 : String(bangla).replace(/./g, (bangla2) => {
    const r = banglas[bangla2];
    return r !== void 0 ? r : bangla2;
  });
  return Number(str);
};
var weekDay = (day) => weekDays[day];
var monthName = (month) => monthNames[month - 1];
var seasonName = (month) => seasonNames[Math.floor((month - 1) / 2)];

// node_modules/date-bengali-revised/src/index.js
var YEAR0 = 593;
var MILLISECONDS_PER_DAY = 864e5;
var monthDaysNorm = [31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30];
var monthDaysLeap = [31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 31, 30];
var isLeapYear2 = (year) => year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
var UTC6 = 6;
var toEpoch = (year) => Date.UTC(year, 3, 13, UTC6);
var CalendarBengaliRevised = class {
  /**
   * @constructor
   * @param {Number|String} year - bengali year
   * @param {Number|String} month - (int) 1...12
   * @param {Number|String} day - 1...31
   * @return {Object} this
   */
  constructor(year, month, day) {
    Object.assign(this, {
      year: banglaToDigit(year),
      month: banglaToDigit(month) || 1,
      day: banglaToDigit(day) || 1
    });
  }
  /**
   * convert gregorian date to bengali calendar date
   * @param {Number} year - (int) year in Gregorian Calendar
   * @param {Number} month - (int)
   * @param {Number} day - (int)
   * @return {Object} this
   */
  fromGregorian(year, month, day) {
    const monthDays = isLeapYear2(year) ? monthDaysLeap : monthDaysNorm;
    let _year = year;
    if (month < 4 || month === 4 && day < 14) {
      _year -= 1;
    }
    this.year = _year - YEAR0;
    const date = Date.UTC(year, month - 1, day, UTC6);
    let days2 = Math.floor((date - toEpoch(_year)) / MILLISECONDS_PER_DAY);
    for (let i = 0; i < monthDays.length; i++) {
      if (days2 <= monthDays[i]) {
        this.month = i + 1;
        break;
      }
      days2 -= monthDays[i];
    }
    this.day = days2;
    return this;
  }
  /**
   * convert date to bengali calendar date
   * @param {Date} date - javascript date object - uses local date
   * @return {Object} this
   */
  fromDate(date) {
    return this.fromGregorian(date.getFullYear(), date.getMonth() + 1, date.getDate());
  }
  /**
   * convert bengali date to gregorian date
   * @return {Object} date in gregorian (preleptic) calendar
   *   {Number} year - (int)
   *   {Number} month - (int) 1...12
   *   {Number} day - (int) 1...31
   */
  toGregorian() {
    const date = this.toDate();
    return {
      year: date.getUTCFullYear(),
      month: date.getUTCMonth() + 1,
      day: date.getUTCDate()
    };
  }
  /**
   * convert bengali date to Date
   * @return {Date} javascript date object in gregorian (preleptic) calendar
   */
  toDate() {
    const year = this.year + YEAR0;
    const epoch3 = toEpoch(year);
    const _year = this.month > 10 ? year + 1 : year;
    const monthDays = isLeapYear2(_year) ? monthDaysLeap : monthDaysNorm;
    let days2 = this.day;
    for (let i = 0; i < this.month - 1; i++) {
      days2 += monthDays[i];
    }
    const date = new Date(days2 * MILLISECONDS_PER_DAY + epoch3);
    return date;
  }
  /**
   * format date in bengali
   * @param {String} formatStr - string formatter
   *
   * | Input | Description  |
   * | ----- | ------------ |
   * | Y     | Year with any number of digits and sign |
   * | Q     | Season Name  |
   * | M     | Month number |
   * | MMMM  | Month name   |
   * | D     | Day of month |
   * | dddd  | Day name     |
   *
   * @return {String}
   */
  format(formatStr) {
    formatStr = formatStr || "D M, Y";
    if (/dddd/.test(formatStr)) {
      const date = this.toDate();
      formatStr = formatStr.replace(/dddd/g, weekDay(date.getUTCDay()));
    }
    return formatStr.replace(/Y/g, digitToBangla(this.year)).replace(/Q/g, seasonName(this.month)).replace(/MMMM/g, monthName(this.month)).replace(/M/g, digitToBangla(this.month)).replace(/D/g, digitToBangla(this.day));
  }
};
var src_default2 = CalendarBengaliRevised;

// node_modules/date-holidays-parser/src/BengaliRevised.js
var BengaliRevised = class extends CalEvent {
  /**
   * @param {object} [opts]
   */
  constructor(opts) {
    opts = opts || {};
    super(opts);
  }
  inYear(year) {
    const opts = this.opts;
    const date = new src_default2(year - 593, opts.month, opts.day).toGregorian();
    const d3 = new CalDate(date);
    this.dates.push(d3);
    return this;
  }
};

// node_modules/date-holidays-parser/src/CalEventFactory.js
var CalEventFactory = class {
  constructor(opts) {
    switch (opts.fn) {
      case "easter":
        return new Easter(opts);
      case "julian":
        return new Julian(opts);
      case "hebrew":
        return new Hebrew(opts);
      case "islamic":
        return new Hijri(opts);
      case "jalaali":
        return new Jalaali(opts);
      case "equinox":
        return new Equinox(opts);
      case "chinese":
      case "korean":
      case "vietnamese":
        return new Chinese(opts);
      case "bengali-revised":
        return new BengaliRevised(opts);
      default:
        return new CalEvent(opts);
    }
  }
};

// node_modules/date-holidays-parser/src/DateFn.js
var DateFn = class {
  /**
   * @param {string} rule - unparsed rule
   * @param {array} holidays - all holidays rules (required for bridge day calculations)
   */
  constructor(ruleStr, holidays) {
    const parser = new Parser();
    this.ruleStr = ruleStr;
    this.rules = parser.parse(ruleStr);
    this.ok = !parser.error;
    this.holidays = holidays;
    this.opts = holidays ? holidays[ruleStr] : {};
    this.event = void 0;
    this.cache = /* @__PURE__ */ new Map();
  }
  /**
   * @param {number} year
   * @returns {this}
   */
  inYear(year) {
    if (this.cache.has(year)) {
      this.event = this.cache.get(year);
      return this;
    }
    let ruleFn;
    const postProc = new PostRule(this.ruleStr, this.opts, this.holidays);
    this.rules.forEach((rule) => {
      if (rule.fn) {
        const calEvent = new CalEventFactory(rule).inYear(year - 1).inYear(year).inYear(year + 1);
        postProc.push(calEvent);
        ruleFn = new Rule(calEvent);
      } else {
        if (ruleFn.resolve(rule)) {
          postProc.resolve(rule, year);
        }
      }
    });
    const event = postProc.getEvent(year);
    this.cache.set(year, event);
    this.event = event;
    return this;
  }
  get(timezone) {
    return this.event.get(timezone);
  }
};

// node_modules/date-holidays-parser/src/HolidayRule.js
var HolidayRule = class {
  constructor(ruleObj) {
    const { rule, fn, opts, ...other } = ruleObj;
    Object.assign(this, { rule, ...other });
  }
  /**
   * disable rule in year (month)
   * @param {number} year
   * @param {number} [month] - 1..12
   */
  disableIn(year, month) {
    if (!toNumber3(year))
      return;
    month = month < 1 && month > 12 ? void 0 : month < 10 ? "0" + Number(month) : month;
    const dateStr = [year, month].filter(Boolean).join("-");
    this.disable = (this.disable || []).concat(dateStr).sort();
  }
};

// node_modules/date-holidays-parser/src/Holidays.js
var TYPES = ["observance", "optional", "school", "bank", "public"];
var Holidays = class {
  constructor(data2, country, state, region, opts) {
    if (!data2) {
      throw new TypeError("need holiday data");
    }
    this._data = data2;
    this.init(country, state, region, opts);
  }
  /**
   * initialize holidays for a country/state/region
   * @param {String|Object} country - if object, use `{ country: {String}, state: {String}, region: {String} }`
   * @param {String} [state] - specifies state
   * @param {String} [region] - specifies region
   * @param {Object} [opts] - options
   * @param {Array|String} [opts.languages] - set language(s) with ISO 639-1 shortcodes
   * @param {String} [opts.timezone] - set timezone
   * @param {Array} [opts.types] - holiday types to consider; priority is in ascending order (low ... high)
   */
  init(...args) {
    const [country, state, region, opts] = getArgs(...args);
    this.__conf = null;
    this.__types = opts.types && opts.types.length ? opts.types : TYPES;
    this.holidays = {};
    this.setLanguages();
    this.__conf = Data.splitName(country, state, region);
    this.__data = new Data(opts.data || this._data, this.__conf);
    if (opts.languages) {
      this.setLanguages(opts.languages);
    } else {
      this.setLanguages(this.__data.getLanguages(this.__conf));
    }
    const holidays = this.__data.getRules();
    if (holidays) {
      this.__timezone = opts.timezone || this.__data.getTimezones()[0];
      Object.keys(holidays).forEach((rule) => {
        this.setHoliday(rule, holidays[rule]);
      });
      return true;
    }
  }
  /**
   * set (custom) holiday
   * @throws {TypeError}
   * @param {String} rule - rule for holiday (check supported grammar) or date in ISO Format, e.g. 12-31 for 31st Dec
   * @param {Object|String} [opts] - holiday options (if String, then opts is used as name)
   * @param {Object} opts.name - translated holiday names e.g. `{ en: 'name', es: 'nombre', ... }`
   * @param {String} opts.type - holiday type `public|bank|school|observance`
   * @returns {Boolean} `true` if holiday could be set
   */
  setHoliday(rule, opts) {
    if (opts === false) {
      if (this.holidays[rule]) {
        this.holidays[rule] = false;
        return true;
      }
      return false;
    }
    if (!opts || typeof opts === "string") {
      opts = opts || rule;
      const lang2 = this.getLanguages()[0];
      opts = utils_default.set({ type: "public" }, ["name", lang2], opts);
    }
    if (opts.active) {
      if (!Array.isArray(opts.active)) {
        throw TypeError(".active is not of type Array: " + rule);
      }
      opts.active = opts.active.map((a) => {
        const from2 = toDate2(a.from);
        const to2 = toDate2(a.to);
        if (!(from2 || to2)) {
          throw TypeError(".active needs .from or .to property: " + rule);
        }
        return { from: from2, to: to2 };
      });
    }
    if (!this.__types.includes(opts.type)) {
      return false;
    }
    this.holidays[rule] = opts;
    const fn = new DateFn(rule, this.holidays);
    if (fn.ok) {
      this.holidays[rule].fn = fn;
      return true;
    } else {
      console.error("could not parse rule: " + rule);
    }
    return false;
  }
  /**
   * get all holidays for `year` with names using preferred `language`
   * @param {String|Date} [year] - if omitted, the current year is chosen
   * @param {String} [language] - ISO 639-1 code for language
   * @returns {Holiday[]} of found holidays in given year sorted by Date:
   * ```
   * {String} date - ISO Date String of (start)-date in local format
   * {Date} start - start date of holiday
   * {Date} end - end date of holiday
   * {String} name - name of holiday using `language` (if available)
   * {String} type - type of holiday `public|bank|school|observance`
   * ```
   */
  getHolidays(year, language) {
    year = toYear2(year);
    const langs = this.getLanguages();
    if (language) {
      langs.unshift(language);
    }
    const startSorter = (a, b) => +a.start - +b.start;
    const typeIndex = (a) => this.__types.indexOf(a.type);
    const typeSorter = (a, b) => typeIndex(b) - typeIndex(a);
    const ruleIndex = (a) => /substitutes|and if /.test(a.rule) ? 1 : 0;
    const ruleLength = (a) => String(a.rule || "").length;
    const ruleSorter = (a, b) => ruleIndex(a) - ruleIndex(b) || ruleLength(a) - ruleLength(b);
    const filterMap = {};
    const arr = Object.keys(this.holidays).reduce((arr2, rule) => {
      if (this.holidays[rule].fn) {
        this._dateByRule(year, rule).forEach((o) => {
          arr2.push({ ...this._translate(o, langs), rule });
        });
      }
      return arr2;
    }, []).sort((a, b) => startSorter(a, b) || typeSorter(a, b) || ruleSorter(a, b)).filter((item) => {
      const hash = item.name + +item.start;
      if (!filterMap[hash]) {
        filterMap[hash] = true;
        return true;
      }
      return false;
    });
    return arr;
  }
  /**
   * check whether `date` is a holiday or not
   * @param {Date|String} [date]
   * @returns {Holiday[]|false} holiday:
   * ```
   * {String} date - ISO Date String of (start)-date in local format
   * {Date} start - start date of holiday
   * {Date} end - end date of holiday
   * {String} name - name of holiday using `language` (if available)
   * {String} type - type of holiday `public|bank|school|observance`
   * ```
   */
  isHoliday(date) {
    date = date ? new Date(date) : /* @__PURE__ */ new Date();
    const d3 = new CalDate();
    d3.fromTimezone(date, this.__timezone);
    const year = d3.year;
    const rules = Object.keys(this.holidays);
    const days2 = [];
    for (const rule of rules) {
      const hd = [].concat(this._dateByRule(year, rule));
      for (const hdrule of hd) {
        if (hdrule && date >= hdrule.start && date < hdrule.end) {
          days2.push(this._translate(hdrule));
        }
      }
    }
    return days2.length ? days2 : false;
  }
  /**
   * set or update rule
   * @param {HolidayRule|object} holidayRule
   * @returns {boolean} `true` if holiday could be set, returns `true`
   */
  setRule(holidayRule) {
    const { rule, ...opts } = holidayRule;
    return this.setHoliday(rule, opts);
  }
  /**
   * unset rule
   * @param {String} rule - rule for holiday (check supported grammar) or date in ISO Format, e.g. 12-31 for 31st Dec
   * @returns {boolean} `true` if holiday could be set, returns `true`
   */
  unsetRule(rule) {
    return this.setHoliday(rule, false);
  }
  /**
   * get available rules for selected country, (state, region)
   * @returns {HolidayRule[]}
   */
  getRules() {
    return Object.entries(this.holidays).map(([ruleStr, obj]) => {
      return new HolidayRule({ ...obj, rule: ruleStr });
    });
  }
  /**
   * get rule for selected country, (state, region)
   * @param {String} rule - rule for holiday (check supported grammar) or date in ISO Format, e.g. 12-31 for 31st Dec
   * @returns {HolidayRule|undefined}
   */
  getRule(rule) {
    if (this.holidays[rule]) {
      return new HolidayRule({ ...this.holidays[rule], rule });
    }
  }
  /**
   * Query for available Countries, States, Regions
   * @param {String} [country]
   * @param {String} [state]
   * @param {String} [lang] - ISO-639 language shortcode
   * @returns {Object} shortcode, name pairs of supported countries, states, regions
   */
  query(country, state, lang2) {
    const o = Data.splitName(country, state);
    if (!o || !o.country) {
      return this.getCountries(lang2);
    } else if (!o.state) {
      return this.getStates(o.country, lang2);
    } else {
      return this.getRegions(o.country, o.state, lang2);
    }
  }
  /**
   * get supported countries
   * @param {String} [lang] - ISO-639 language shortcode
   * @returns {Object} shortcode, name pairs of supported countries
   * ```js
   * { AD: 'Andorra',
   *   US: 'United States' }
   * ```
   */
  getCountries(lang2) {
    return this.__data.getCountries(lang2);
  }
  /**
   * get supported states for a given country
   * @param {String} country - shortcode of country
   * @param {String} [lang] - ISO-639 language shortcode
   * @returns {Object} shortcode, name pairs of supported states, regions
   * ```js
   * { al: 'Alabama', ...
   *   wy: 'Wyoming' }
   * ```
   */
  getStates(country, lang2) {
    return this.__data.getStates(country, lang2);
  }
  /**
   * get supported regions for a given country, state
   * @param {String} country - shortcode of country
   * @param {String} state - shortcode of state
   * @param {String} [lang] - ISO-639 language shortcode
   * @returns {Object} shortcode, name pairs of supported regions
   * ```js
   * { no: 'New Orleans' }
   * ```
   */
  getRegions(country, state, lang2) {
    return this.__data.getRegions(country, state, lang2);
  }
  /**
   * sets timezone
   * @param {String} timezone - see `moment-timezone`
   * if `timezone` is `undefined`, then all dates are considered local dates
   */
  setTimezone(timezone) {
    this.__timezone = timezone;
  }
  /**
   * get timezones for country, state, region
   * @returns {Array} of {String}s containing the timezones
   */
  getTimezones() {
    if (this.__data) {
      return this.__data.getTimezones();
    }
  }
  /**
   * set language(s) for holiday names
   * @param {Array|String} language
   * @returns {Array} set languages
   */
  setLanguages(language) {
    if (typeof language === "string") {
      language = [language];
    }
    const tmp = {};
    this.__languages = [].concat(
      language,
      this.__conf ? this.__data.getLanguages(this.__conf) : [],
      "en"
    ).filter(function(l) {
      if (!l || tmp[l]) {
        return false;
      }
      tmp[l] = 1;
      return true;
    });
  }
  /**
   * get languages for selected country, state, region
   * @returns {Array} containing ISO 639-1 language shortcodes
   */
  getLanguages() {
    return this.__languages;
  }
  /**
   * get default day off as weekday
   * @returns {String} weekday of day off
   */
  getDayOff() {
    if (this.__conf) {
      return this.__data.getDayOff();
    }
  }
  /**
   * @private
   * @param {Number} year
   * @param {String} rule
   */
  _dateByRule(year, rule) {
    const _rule = this.holidays[rule];
    if (!_rule || !_rule.fn || !_rule.fn.inYear) {
      return [];
    }
    const dates = _rule.fn.inYear(year).get(this.__timezone).map((date) => {
      const odate = utils_default.merge(
        {},
        utils_default.omit(date, ["substitute"]),
        utils_default.omit(_rule, ["fn", "enable", "disable", "substitute", "active"])
      );
      if (_rule.substitute && date.substitute) {
        odate.substitute = true;
      }
      return odate;
    });
    return dates;
  }
  /**
   * translate holiday object `o` to a language
   * @private
   * @param {Object} o
   * @param {Array} langs - languages for translation
   * @returns {Object} translated holiday object
   */
  _translate(o, langs) {
    if (o && typeof o.name === "object") {
      langs = langs || this.getLanguages();
      for (const lang2 of langs) {
        const name = o.name[lang2];
        if (name) {
          o.name = name;
          break;
        }
      }
      if (o.substitute) {
        for (const lang2 of langs) {
          const subst = this.__data.getSubstitueNames();
          const name = subst[lang2];
          if (name) {
            o.name += " (" + name + ")";
            break;
          }
        }
      }
    }
    return o;
  }
};
function getArgs(country, state, region, opts) {
  if (typeof region === "object") {
    opts = region;
    region = null;
  } else if (typeof state === "object") {
    opts = state;
    state = null;
  } else if (typeof country === "object" && !country.country) {
    opts = country;
  }
  opts = opts || {};
  return [country, state, region, opts];
}

// node_modules/date-holidays/src/data.js
var data = {
  "version": "2025-04-18",
  "license": "CC-BY-SA-3",
  "holidays": {
    "AD": {
      "names": {
        "ca": "Andorra",
        "es": "Andorra",
        "en": "Andorra"
      },
      "dayoff": "sunday",
      "langs": [
        "ca",
        "es"
      ],
      "zones": [
        "Europe/Andorra"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "03-14": {
          "_name": "Constitution Day"
        },
        "05-01": {
          "_name": "05-01"
        },
        "08-15": {
          "_name": "08-15"
        },
        "09-08": {
          "name": {
            "en": "Our Lady of Meritxell",
            "es": "Nuestra Sra. De Meritxell",
            "ca": "Mare de Déu de Meritxell"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-24": {
          "type": "bank",
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "easter -47": {
          "_name": "easter -47"
        },
        "easter -3 14:00": {
          "type": "bank",
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        }
      },
      "regions": {
        "07": {
          "name": "Andorra la Vella",
          "days": {
            "1st saturday in August P3D": {
              "name": {
                "en": "Andorra La Vella Festival",
                "ca": "Andorra La Vella Festival"
              }
            }
          }
        }
      }
    },
    "AE": {
      "names": {
        "en": "United Arab Emirates",
        "ar": "دولة الإمارات العربية المتحدة"
      },
      "langs": [
        "ar"
      ],
      "zones": [
        "Asia/Dubai"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01",
          "name": {
            "ar": "رأس السنة الميلادية"
          }
        },
        "12-02": {
          "name": {
            "en": "National Day",
            "ar": "اليوم الوطني"
          }
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        },
        "27 Rajab": {
          "_name": "27 Rajab"
        },
        "1 Ramadan": {
          "_name": "1 Ramadan"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        }
      }
    },
    "AG": {
      "names": {
        "en": "Antigua & Barbuda"
      },
      "langs": [
        "en"
      ],
      "dayoff": "sunday",
      "weekend": [
        "saturday",
        "sunday"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "08-01": {
          "name": {
            "en": "J'Ouvert Morning"
          }
        },
        "08-02": {
          "name": {
            "en": "Last Lap"
          }
        },
        "11-01 if saturday,sunday then next monday": {
          "_name": "Independence Day"
        },
        "12-09": {
          "name": {
            "en": "V.C Bird Day"
          }
        },
        "12-25 and if saturday then next monday if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true
        },
        "12-26 and if sunday then next monday": {
          "_name": "12-26",
          "substitute": true
        }
      },
      "regions": {
        "10": {
          "name": "Barbuda",
          "days": {
            "easter 47 P4D": {
              "name": {
                "en": "Caribana"
              },
              "type": "observance"
            }
          }
        }
      }
    },
    "AI": {
      "names": {
        "en": "Anguilla"
      },
      "langs": [
        "en"
      ],
      "dayoff": "sunday",
      "weekend": [
        "saturday",
        "sunday"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-02": {
          "name": {
            "en": "James Ronald Webster Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-30": {
          "name": {
            "en": "Anguilla Day"
          }
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "2nd monday in June": {
          "name": {
            "en": "Celebration of the Birthday of Her Majesty the Queen"
          }
        },
        "1st monday in August": {
          "name": {
            "en": "August Monday"
          }
        },
        "1st thursday in August": {
          "name": {
            "en": "August Thursday"
          }
        },
        "1st friday in August": {
          "_name": "Constitution Day"
        },
        "12-19": {
          "name": {
            "en": "National Heroes and Heroines Day"
          }
        },
        "12-25 and if saturday then next monday if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true
        },
        "12-26 and if sunday then next monday": {
          "_name": "12-26",
          "substitute": true
        }
      }
    },
    "AL": {
      "names": {
        "sq": "Shqipëri",
        "en": "Albania"
      },
      "dayoff": "sunday",
      "langs": [
        "sq",
        "es"
      ],
      "zones": [
        "Europe/Tirane"
      ],
      "days": {
        "01-01 and if sunday then next tuesday": {
          "_name": "01-01",
          "substitute": true
        },
        "01-02 and if sunday then next monday": {
          "name": {
            "sq": "Festa e Vitit të Ri",
            "en": "New Year Holiday"
          },
          "substitute": true
        },
        "03-02": {
          "name": {
            "sq": "Dita e Besëlidhjes së Lezhës",
            "en": "League of Lezhë day"
          },
          "type": "observance"
        },
        "03-07": {
          "name": {
            "sq": "Dita e Mësuesit",
            "en": "Teacher's Day"
          },
          "type": "observance"
        },
        "03-08": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "03-14 and if sunday then next monday": {
          "name": {
            "sq": "Dita e Verës",
            "en": "Summer Day"
          },
          "substitute": true
        },
        "03-22 and if sunday then next monday": {
          "name": {
            "sq": "Dita e Sulltan Nevruzit",
            "en": "Sultan Nevruz's Day"
          },
          "substitute": true
        },
        "04-01": {
          "_name": "04-01",
          "type": "observance"
        },
        "easter": {
          "name": {
            "sq": "Pashkët Katolike",
            "en": "Catholic Easter"
          }
        },
        "easter 1": {
          "name": {
            "sq": "Pashkët Katolike",
            "en": "Catholic Easter"
          }
        },
        "orthodox": {
          "name": {
            "sq": "Pashkët Ortodokse",
            "en": "Orthodox Easter"
          }
        },
        "orthodox 1": {
          "name": {
            "sq": "Pashkët Ortodokse",
            "en": "Orthodox Easter"
          }
        },
        "05-01 and if sunday then next monday": {
          "_name": "05-01",
          "substitute": true
        },
        "06-01": {
          "name": {
            "sq": "Dita Ndërkombëtare e Fëmijëve",
            "en": "Children's Day"
          },
          "type": "observance"
        },
        "10-19 and if sunday then next monday": {
          "name": {
            "sq": "Dita e Nënë Terezës",
            "en": "Mother Teresa Day"
          },
          "substitute": true,
          "active": [
            {
              "from": 2004
            }
          ]
        },
        "11-22": {
          "name": {
            "sq": "Dita e Alfabetit",
            "en": "Alphabet Day"
          },
          "type": "observance"
        },
        "11-28 and if sunday then next monday": {
          "_name": "Independence Day",
          "substitute": true
        },
        "11-29 and if sunday then next monday": {
          "_name": "Liberation Day",
          "substitute": true
        },
        "12-08 and if sunday then next monday": {
          "name": {
            "sq": "Dita Kombëtare e Rinisë",
            "en": "Youth Day"
          },
          "substitute": true,
          "active": [
            {
              "from": 2010
            }
          ]
        },
        "12-24": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25 and if sunday then next monday": {
          "_name": "12-25",
          "substitute": true
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      },
      "regions": {}
    },
    "AM": {
      "names": {
        "hy": "Հայաստան",
        "en": "Armenia"
      },
      "dayoff": "sunday",
      "langs": [
        "hy"
      ],
      "zones": [
        "Asia/Yerevan"
      ],
      "days": {
        "12-31": {
          "_name": "12-31"
        },
        "01-01 P2D": {
          "_name": "01-01"
        },
        "01-03 P3D": {
          "name": {
            "en": "Pre-Christmas holidays",
            "hy": "Նախածննդյան տոներ"
          }
        },
        "01-06": {
          "_name": "12-25"
        },
        "01-28": {
          "name": {
            "en": "Army Day",
            "hy": "Բանակի օր"
          }
        },
        "02-21": {
          "name": {
            "en": "Mother Language Day",
            "hy": "Մայրենի լեզվի օր"
          },
          "type": "observance"
        },
        "easter -52": {
          "name": {
            "en": "St. Vartan the good work and the duty days",
            "hy": "Սուրբ Վարդանանց տոն՝ բարի գործի եւ ազգային տուրքի օր"
          },
          "type": "observance"
        },
        "03-08": {
          "_name": "03-08"
        },
        "04-07": {
          "name": {
            "en": "Motherhood and Beauty Day",
            "hy": "Մայրության, գեղեցկության եւ սիրո տոն"
          },
          "type": "observance"
        },
        "04-24": {
          "_name": "Mothers Day"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-08": {
          "name": {
            "en": "Yerkrapah Day",
            "hy": "Երկրապահի օր"
          },
          "type": "observance"
        },
        "05-09": {
          "name": {
            "en": "Victory and Peace Day",
            "hy": "Հաղթանակի եւ Խաղաղության տոն"
          }
        },
        "05-28": {
          "name": {
            "en": "Republic Day",
            "hy": "Հանրապետության օր"
          }
        },
        "06-01": {
          "name": {
            "en": "The day of protection of children rights",
            "hy": "Երեխաների իրավունքների պաշտպանության օր"
          },
          "type": "observance"
        },
        "07-05": {
          "_name": "Constitution Day"
        },
        "09-01": {
          "name": {
            "en": "Knowledge, Literacy and Education Day",
            "hy": "Գիտելիքի, գրի եւ դպրության օր"
          },
          "type": "observance"
        },
        "09-21": {
          "_name": "Independence Day"
        },
        "2nd saturday in October": {
          "name": {
            "en": "Translator's Day",
            "hy": "Թարգմանչաց տոն"
          },
          "type": "observance"
        },
        "12-07": {
          "name": {
            "en": "Earthquake Remembrance Day",
            "hy": "Երկրաշարժի զոհերի հիշատակի օր"
          },
          "type": "observance"
        }
      }
    },
    "AO": {
      "names": {
        "pt": "Angola",
        "en": "Angola"
      },
      "dayoff": "sunday",
      "zones": [
        "Africa/Lagos"
      ],
      "langs": [
        "pt"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-04": {
          "name": {
            "pt": "Dia do Início da Luta Armada de Libertação Nacional",
            "en": "Liberation Day"
          }
        },
        "easter -47": {
          "_name": "easter -47"
        },
        "03-08": {
          "name": {
            "pt": "Dia Internacional da Mulher",
            "en": "International Woman's Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "04-04": {
          "name": {
            "pt": "Dia da Paz",
            "en": "Peace Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "1st sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "09-17": {
          "name": {
            "pt": "Fundador da Nação e Dia dos Heróis Nacionais",
            "en": "National Hero Day"
          }
        },
        "11-02": {
          "_name": "11-02"
        },
        "11-11": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "AR": {
      "names": {
        "es": "Argentina",
        "en": "Argentina"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Argentina/Buenos_Aires",
        "America/Argentina/Cordoba",
        "America/Argentina/Salta",
        "America/Argentina/Jujuy",
        "America/Argentina/Tucuman",
        "America/Argentina/Catamarca",
        "America/Argentina/La_Rioja",
        "America/Argentina/San_Juan",
        "America/Argentina/Mendoza",
        "America/Argentina/San_Luis",
        "America/Argentina/Rio_Gallegos",
        "America/Argentina/Ushuaia"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "2013-01-31": {
          "name": {
            "en": "Bicentennial of the Assembly of the Year XIII",
            "es": "Bicentenario de la Asamblea General Constituyente de 1813"
          }
        },
        "2013-02-20": {
          "name": {
            "en": "Bicentennial of the Battle of Salta",
            "es": "Bicentenario de la Batalla de Salta"
          }
        },
        "2012-02-27": {
          "name": {
            "en": "Bicentennial of the Creation and First Oath of Allegiance to the Argentine Flag",
            "es": "Bicentenario de la creación y primera jura de la bandera argentina"
          }
        },
        "easter -48": {
          "_name": "easter -48",
          "active": [
            {
              "to": "1976-06-14"
            },
            {
              "from": "2010-11-03"
            }
          ]
        },
        "easter -47": {
          "_name": "easter -47",
          "active": [
            {
              "to": "1976-06-14"
            },
            {
              "from": "2010-11-03"
            }
          ]
        },
        "03-24": {
          "name": {
            "en": "Day of Remembrance for Truth and Justice",
            "es": "Día Nacional de la Memoria por la Verdad y la Justicia"
          },
          "active": [
            {
              "from": "2006-03-21"
            }
          ]
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "bank"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "1983-04-02": {
          "name": {
            "en": "Day of the Malvinas, South Georgia and South Sandwich Islands",
            "es": "Día de las Islas Malvinas, Georgias del Sur y Sandwich del Sur"
          }
        },
        "04-02 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Day of the Veterans and the Fallen in the Malvinas War",
            "es": "Día del Veterano y de los Caídos en la guerra en Malvinas"
          },
          "active": [
            {
              "from": "2000-12-22",
              "to": "2006-06-30"
            }
          ]
        },
        "04-02": {
          "name": {
            "en": "Day of the Veterans and the Fallen in the Malvinas War",
            "es": "Día del Veterano y de los Caídos en la Guerra de Malvinas"
          },
          "active": [
            {
              "from": "2006-07-01"
            }
          ],
          "disable": [
            "2020-04-02"
          ],
          "enable": [
            "2020-03-31"
          ]
        },
        "05-01": {
          "_name": "05-01"
        },
        "2010-05-24": {
          "name": {
            "en": "National Holiday for the Bicentennial of the May Revolution",
            "es": "Feriado Nacional por el Bicentenario de la Revolución de Mayo"
          }
        },
        "2022-05-18": {
          "name": {
            "en": "National Census 2022",
            "es": "Censo Nacional 2022"
          }
        },
        "05-25": {
          "name": {
            "en": "Day of the First National Government",
            "es": "Primer Gobierno Patrio"
          }
        },
        "06-10": {
          "name": {
            "en": "Day of Affirmation of Argentine Rights over the Malvinas, Islands and Antarctic Sector",
            "es": "Día de la Afirmación de los Derechos Argentinos sobre las Malvinas, Islas y Sector Antártico"
          },
          "active": [
            {
              "from": "1984-03-23",
              "to": "1988-05-17"
            }
          ]
        },
        "06-10 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Day of Affirmation of Argentine Rights over the Malvinas, Islands and Antarctic Sector",
            "es": "Día de la Afirmación de los Derechos Argentinos sobre las Malvinas, Islas y Sector Antártico"
          },
          "active": [
            {
              "from": "1988-05-18",
              "to": "2000-12-15"
            }
          ]
        },
        "06-17 if tuesday,wednesday then previous monday if thursday then next monday": {
          "name": {
            "en": "Anniversary of the Passing to Immortality of General Martín Miguel de Güemes",
            "es": "Día Paso a la Inmortalidad del General Martín Miguel de Güemes"
          },
          "active": [
            {
              "from": "2016-06-11"
            }
          ]
        },
        "06-20": {
          "name": {
            "en": "National Flag Day",
            "es": "Día de la Bandera"
          },
          "active": [
            {
              "from": "1938-06-08",
              "to": "1988-05-23"
            },
            {
              "from": "1991-12-18",
              "to": "1995-01-10"
            },
            {
              "from": "2010-11-03"
            }
          ]
        },
        "06-20 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "National Flag Day",
            "es": "Día de la Bandera"
          },
          "active": [
            {
              "from": "1988-05-24",
              "to": "1991-12-17"
            }
          ]
        },
        "3rd monday in June": {
          "name": {
            "en": "National Flag Day",
            "es": "Día de la Bandera"
          },
          "active": [
            {
              "from": "1995-01-11",
              "to": "2010-11-02"
            }
          ]
        },
        "07-09": {
          "_name": "Independence Day"
        },
        "08-17": {
          "name": {
            "en": "Anniversary of the Passing to Immortality of General José de San Martín",
            "es": "Paso a la Inmortalidad del General José de San Martín"
          },
          "active": [
            {
              "from": "1938-09-01",
              "to": "1988-05-23"
            },
            {
              "from": "1994-09-30",
              "to": "1995-01-10"
            }
          ]
        },
        "08-17 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Anniversary of the Passing to Immortality of General José de San Martín",
            "es": "Paso a la Inmortalidad del General José de San Martín"
          },
          "active": [
            {
              "from": "1988-05-24",
              "to": "1994-09-29"
            },
            {
              "from": "2017-01-24"
            }
          ]
        },
        "3rd monday in August": {
          "name": {
            "en": "Anniversary of the Passing to Immortality of General José de San Martín",
            "es": "Paso a la Inmortalidad del General José de San Martín"
          },
          "active": [
            {
              "from": "1995-01-11",
              "to": "2017-01-23"
            }
          ],
          "disable": [
            "2011-08-15"
          ],
          "enable": [
            "2011-08-22"
          ]
        },
        "2012-09-24": {
          "name": {
            "en": "Bicentennial of the Battle of Tucumán",
            "es": "Bicentenario de la Batalla de Tucumán"
          }
        },
        "10-12": {
          "name": {
            "en": "The Day of the Race",
            "es": "Día de la Raza"
          },
          "active": [
            {
              "to": "1976-06-14"
            },
            {
              "from": "1982-10-12",
              "to": "1988-05-23"
            }
          ]
        },
        "10-12 if tuesday,wednesday then previous monday if thursday,friday then next monday #1": {
          "name": {
            "en": "The Day of the Race",
            "es": "Día de la Raza"
          },
          "active": [
            {
              "from": "1988-05-24",
              "to": "2008-10-02"
            }
          ],
          "disable": [
            "2001-10-15",
            "2002-10-12"
          ],
          "enable": [
            "2001-10-08",
            "2002-10-14"
          ]
        },
        "10-12 if tuesday,wednesday then previous monday if thursday,friday,saturday,sunday then next monday": {
          "name": {
            "en": "The Day of the Race",
            "es": "Día de la Raza"
          },
          "active": [
            {
              "from": "2008-10-03",
              "to": "2010-11-02"
            }
          ]
        },
        "2nd monday in October": {
          "name": {
            "en": "Day of Respect for Cultural Diversity",
            "es": "Día del Respeto a la Diversidad Cultural"
          },
          "active": [
            {
              "from": "2010-11-03",
              "to": "2017-01-23"
            }
          ]
        },
        "10-12 if tuesday,wednesday then previous monday if thursday,friday then next monday #2": {
          "name": {
            "en": "Day of Respect for Cultural Diversity",
            "es": "Día del Respeto a la Diversidad Cultural"
          },
          "active": [
            {
              "from": "2017-01-24"
            }
          ]
        },
        "2010-10-27": {
          "name": {
            "en": "National Census 2010",
            "es": "Censo Nacional 2010"
          }
        },
        "4th monday in November": {
          "name": {
            "en": "Day of National Sovereignty",
            "es": "Día de la Soberanía Nacional"
          },
          "active": [
            {
              "from": "2010-11-03",
              "to": "2017-01-23"
            }
          ],
          "disable": [
            "2015-11-23"
          ],
          "enable": [
            "2015-11-27"
          ]
        },
        "11-20 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Day of National Sovereignty",
            "es": "Día de la Soberanía Nacional"
          },
          "active": [
            {
              "from": "2017-01-24"
            }
          ]
        },
        "12-08": {
          "_name": "12-08",
          "active": [
            {
              "from": "1995-01-11"
            }
          ]
        },
        "12-24 12:00": {
          "_name": "12-24",
          "type": "optional"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31 12:00": {
          "_name": "12-31",
          "type": "optional"
        },
        "2011-03-25": {
          "_name": "Bridge Day"
        },
        "2011-12-09": {
          "_name": "Bridge Day"
        },
        "2012-04-30": {
          "_name": "Bridge Day"
        },
        "2012-12-24": {
          "_name": "Bridge Day"
        },
        "2013-04-01": {
          "_name": "Bridge Day"
        },
        "2013-06-21": {
          "_name": "Bridge Day"
        },
        "2014-05-02": {
          "_name": "Bridge Day"
        },
        "2014-12-26": {
          "_name": "Bridge Day"
        },
        "2015-03-23": {
          "_name": "Bridge Day"
        },
        "2015-12-07": {
          "_name": "Bridge Day"
        },
        "2016-07-08": {
          "_name": "Bridge Day"
        },
        "2016-12-09": {
          "_name": "Bridge Day"
        },
        "2018-04-30": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2018-12-24": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2018-12-31": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2019-07-08": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2019-08-19": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2019-10-14": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2020-03-23": {
          "_name": "Bridge Day"
        },
        "2020-07-10": {
          "_name": "Bridge Day"
        },
        "2020-12-07": {
          "_name": "Bridge Day"
        },
        "2021-05-24": {
          "_name": "Bridge Day"
        },
        "2021-10-08": {
          "_name": "Bridge Day"
        },
        "2021-11-22": {
          "_name": "Bridge Day"
        },
        "2022-10-07": {
          "_name": "Bridge Day"
        },
        "2022-11-21": {
          "_name": "Bridge Day"
        },
        "2022-12-09": {
          "_name": "Bridge Day"
        },
        "2023-05-26": {
          "_name": "Bridge Day"
        },
        "2023-06-19": {
          "_name": "Bridge Day"
        },
        "2023-10-13": {
          "_name": "Bridge Day"
        },
        "2024-04-01": {
          "_name": "Bridge Day"
        },
        "2024-06-21": {
          "_name": "Bridge Day"
        },
        "2024-10-11": {
          "_name": "Bridge Day"
        },
        "2025-05-02": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2025-08-15": {
          "_name": "Bridge Day",
          "type": "bank"
        },
        "2025-11-21": {
          "_name": "Bridge Day",
          "type": "bank"
        }
      }
    },
    "AS": {
      "names": {
        "en": "American Samoa"
      },
      "dayoff": "sunday",
      "zones": [
        "Pacific/Pago_Pago"
      ],
      "langs": [
        "en"
      ],
      "_days": [
        "US"
      ],
      "days": {
        "3rd monday in February": {
          "name": {
            "en": "Washington's Birthday"
          }
        },
        "03-17": false,
        "04-15 if friday then next monday if saturday,sunday then next tuesday": false,
        "04-17 and if sunday then next monday": {
          "name": {
            "en": "American Samoa Flag Day"
          },
          "substitute": true
        },
        "07-16": {
          "name": {
            "en": "Manu'a Cession Day"
          },
          "type": "optional",
          "note": "Goverment offices closed"
        },
        "2nd sunday in October": {
          "name": {
            "en": "White Sunday"
          },
          "type": "observance",
          "note": "christian"
        },
        "12-24 12:00": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-31 12:00": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "AT": {
      "names": {
        "de-at": "Österreich",
        "en": "Austria"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Vienna"
      ],
      "langs": [
        "de-at",
        "de"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "easter -2 prior to 2019": {
          "_name": "easter -2",
          "type": "optional"
        },
        "easter -1": {
          "_name": "easter -1",
          "type": "observance"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "name": {
            "de-at": "Staatsfeiertag"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-26": {
          "_name": "National Holiday"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-24 14:00 if sunday then 00:00": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 14:00 if sunday then 00:00": {
          "_name": "12-31",
          "type": "bank"
        }
      },
      "states": {
        "1": {
          "name": "Burgenland",
          "days": {
            "11-11": {
              "name": {
                "de-at": "Martinstag"
              }
            }
          }
        },
        "2": {
          "names": {
            "de": "Kärnten",
            "en": "Carinthia"
          },
          "days": {
            "03-19": {
              "_name": "03-19",
              "type": "school"
            },
            "10-10": {
              "name": {
                "de-at": "Tag der Volksabstimmung"
              }
            }
          }
        },
        "3": {
          "names": {
            "de": "Niederösterreich",
            "en": "Lower Austria"
          },
          "days": {
            "11-15": {
              "name": {
                "de-at": "Leopoldi-Tag"
              },
              "type": "optional",
              "note": "In Niederösterreich haben nur Schüler und Beamten frei"
            }
          }
        },
        "4": {
          "names": {
            "de": "Oberösterreich",
            "en": "Upper Austria"
          },
          "days": {
            "05-04": {
              "name": {
                "de-at": "Florian"
              }
            }
          }
        },
        "5": {
          "names": {
            "de": "Land Salzburg",
            "en": "Salzburg"
          },
          "days": {
            "09-24": {
              "name": {
                "de-at": "Rupert"
              }
            }
          }
        },
        "6": {
          "names": {
            "de": "Steiermark",
            "en": "Styria"
          },
          "days": {
            "03-19": {
              "_name": "03-19",
              "type": "school"
            }
          }
        },
        "7": {
          "names": {
            "de": "Tirol",
            "en": "Tyrol"
          },
          "days": {
            "03-19": {
              "_name": "03-19",
              "type": "school"
            }
          }
        },
        "8": {
          "name": "Vorarlberg",
          "days": {
            "03-19": {
              "_name": "03-19",
              "type": "school"
            }
          }
        },
        "9": {
          "names": {
            "de": "Wien",
            "en": "Vienna"
          },
          "days": {
            "11-15": {
              "name": {
                "de-at": "Leopoldi-Tag"
              },
              "type": "optional",
              "note": "In Wien haben nur Schüler frei"
            }
          }
        }
      }
    },
    "AU": {
      "names": {
        "en": "Australia"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Australia/Sydney",
        "Australia/Lord_Howe",
        "Antarctica/Macquarie",
        "Australia/Hobart",
        "Australia/Currie",
        "Australia/Melbourne",
        "Australia/Broken_Hill",
        "Australia/Brisbane",
        "Australia/Lindeman",
        "Australia/Adelaide",
        "Australia/Darwin",
        "Australia/Perth",
        "Australia/Eucla"
      ],
      "days": {
        "01-01 and if saturday,sunday then next monday": {
          "_name": "01-01"
        },
        "01-26 if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Australia Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-25": {
          "name": {
            "en": "Anzac Day"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "1st sunday in September": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "12-25 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-26"
        },
        "2022-09-22": {
          "name": {
            "en": "National Day of Mourning for Queen Elizabeth II"
          }
        }
      },
      "states": {
        "ACT": {
          "name": "Australian Capital Territory",
          "zones": [
            "Australia/Sydney"
          ],
          "days": {
            "2nd monday in March": {
              "name": {
                "en": "Canberra Day"
              }
            },
            "04-25": false,
            "04-25 if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Anzac Day"
              }
            },
            "2020-04-27": {
              "name": {
                "en": "Declared public holiday"
              },
              "type": "public"
            },
            "monday after 05-27": {
              "name": {
                "en": "Reconciliation Day"
              }
            },
            "2nd monday in June": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "2nd monday in June #1": {
              "name": {
                "en": "King's Birthday"
              },
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "1st monday in October": {
              "name": {
                "en": "Labour Day"
              }
            }
          }
        },
        "NSW": {
          "name": "New South Wales",
          "zones": [
            "Australia/Sydney"
          ],
          "days": {
            "2nd monday in June": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "2nd monday in June #1": {
              "name": {
                "en": "King's Birthday"
              },
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "1st monday in August": {
              "name": {
                "en": "Bank Holiday"
              },
              "type": "bank"
            },
            "1st monday in October": {
              "name": {
                "en": "Labour Day"
              }
            }
          }
        },
        "NT": {
          "name": "Northern Territory",
          "zones": [
            "Australia/Darwin"
          ],
          "days": {
            "easter": false,
            "04-25": false,
            "04-25 if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Anzac Day"
              }
            },
            "1st monday in May": {
              "name": {
                "en": "May Day"
              }
            },
            "2nd monday in June": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "2nd monday in June #1": {
              "name": {
                "en": "King's Birthday"
              },
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "1st monday in August": {
              "name": {
                "en": "Picnic Day"
              }
            },
            "1st monday in October": false,
            "12-24 19:00": {
              "_name": "12-24"
            },
            "12-25 and if saturday then next monday if sunday then next tuesday": false,
            "12-25 if saturday then next monday if sunday then next tuesday": {
              "substitute": true,
              "_name": "12-25"
            },
            "12-26 and if saturday then next monday if sunday then next tuesday": false,
            "12-26 if saturday then next monday if sunday then next tuesday": {
              "substitute": true,
              "_name": "12-26"
            },
            "12-31 19:00": {
              "_name": "12-31"
            }
          }
        },
        "QLD": {
          "name": "Queensland",
          "zones": [
            "Australia/Brisbane",
            "Australia/Lindeman"
          ],
          "days": {
            "04-25": false,
            "04-25 if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Anzac Day"
              }
            },
            "1st monday in May": {
              "name": {
                "en": "Labour Day"
              }
            },
            "2nd monday in June": false,
            "1st monday in October": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "1st monday in October #1": {
              "name": "King's Birthday",
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "12-24 18:00": {
              "_name": "12-24"
            }
          }
        },
        "SA": {
          "name": "South Australia",
          "zones": [
            "Australia/Adelaide"
          ],
          "days": {
            "easter": false,
            "2nd monday in March": {
              "name": {
                "en": "Adelaide Cup Day"
              }
            },
            "2nd monday in June": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "2nd monday in June #1": {
              "name": {
                "en": "King's Birthday"
              },
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "1st monday in October": {
              "name": {
                "en": "Labour Day"
              }
            },
            "12-24 19:00": {
              "_name": "12-24"
            },
            "12-25 and if saturday then next monday if sunday then next tuesday": false,
            "12-25 if saturday then next monday if sunday then next tuesday": {
              "substitute": true,
              "_name": "12-25"
            },
            "12-26 and if saturday then next monday if sunday then next tuesday": false,
            "12-26 if saturday then next monday if sunday then next tuesday": {
              "substitute": true,
              "name": "Proclamation Day"
            },
            "12-31 19:00": {
              "_name": "12-31"
            }
          }
        },
        "TAS": {
          "name": "Tasmania",
          "zones": [
            "Australia/Hobart"
          ],
          "days": {
            "01-01 and if saturday,sunday then next monday": false,
            "01-01 if saturday then next monday if sunday then next tuesday": {
              "substitute": true,
              "_name": "01-01"
            },
            "2nd monday in March": {
              "name": {
                "en": "Eight Hours Day"
              }
            },
            "easter -1": false,
            "easter": false,
            "easter +2": {
              "name": "Easter Tuesday",
              "type": "optional",
              "note": "Public Service employees or contract dependent"
            },
            "2nd monday in June": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "2nd monday in June #1": {
              "name": {
                "en": "King's Birthday"
              },
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "1st monday in October": false,
            "12-26 and if saturday then next monday if sunday then next tuesday": false,
            "12-26 if saturday then next monday if sunday then next tuesday": {
              "substitute": true,
              "_name": "12-26"
            }
          }
        },
        "VIC": {
          "name": "Victoria",
          "zones": [
            "Australia/Melbourne"
          ],
          "days": {
            "2nd monday in March": {
              "name": {
                "en": "Labour Day"
              }
            },
            "2nd monday in June": {
              "name": {
                "en": "Queen's Birthday"
              },
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "2nd monday in June #1": {
              "name": {
                "en": "King's Birthday"
              },
              "active": [
                {
                  "from": "2022-09-09"
                }
              ]
            },
            "1st monday in October": false,
            "1st friday before October": {
              "name": {
                "en": "AFL Grand Final Friday"
              },
              "note": "Date might differ as dependent on AFL schedule"
            },
            "1st tuesday in November": {
              "name": {
                "en": "Melbourne Cup"
              }
            }
          }
        },
        "WA": {
          "name": "Western Australia",
          "zones": [
            "Australia/Perth",
            "Australia/Eucla"
          ],
          "days": {
            "1st monday in March": {
              "name": {
                "en": "Labour Day"
              }
            },
            "easter -1": false,
            "easter": false,
            "04-25": false,
            "04-25 and if saturday,sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Anzac Day"
              }
            },
            "1st monday in June": {
              "name": {
                "en": "Western Australia Day"
              }
            },
            "2nd monday in June": false,
            "monday before October": {
              "name": {
                "en": "Queen's Birthday"
              },
              "note": "Might be on a different day; is proclaimed by Governor",
              "active": [
                {
                  "to": "2022-09-08"
                }
              ]
            },
            "monday before October #1": {
              "name": {
                "en": "King's Birthday"
              },
              "note": "Might be on a different day; is proclaimed by Governor",
              "active": [
                {
                  "from": "2022-09-09"
                }
              ],
              "disable": [
                "2024-09-30"
              ],
              "enable": [
                "2024-09-23"
              ]
            },
            "1st monday in October": false
          }
        }
      }
    },
    "AW": {
      "names": {
        "pap": "Aruba",
        "nl": "Aruba",
        "en": "Aruba"
      },
      "dayoff": "sunday",
      "zones": [
        "America/Curacao"
      ],
      "langs": [
        "pap",
        "nl"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-25": {
          "name": {
            "pap": "Dia di Betico",
            "nl": "Herdenking G. F. Croes",
            "en": "Betico Croes Day"
          }
        },
        "easter -48": {
          "_name": "easter -48"
        },
        "03-18 and if saturday then previous friday if sunday then next monday": {
          "substitute": true,
          "name": {
            "pap": "Dia di Himno y Bandera",
            "nl": "Herdenking Vlag en Volkslied",
            "en": "National Anthem and Flag Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-27": {
          "name": {
            "pap": "Aña di Rey",
            "nl": "Koningsdag",
            "en": "Kings Day"
          }
        },
        "05-01 if sunday then next monday": {
          "_name": "05-01"
        },
        "06-24": {
          "name": {
            "pap": "Dera Gai",
            "nl": "Dera Gai",
            "en": "Dera Gai"
          },
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "12-05": {
          "name": {
            "nl": "Sinterklaasavond",
            "en": "St. Nicholas' Eve"
          },
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "AX": {
      "names": {
        "sv": "Landskapet Åland",
        "en": "Åland Islands"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Helsinki"
      ],
      "langs": [
        "sv"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "03-30": {
          "name": {
            "sv": "Ålands demilitariseringsdag",
            "en": "Demilitarization Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "06-09": {
          "name": {
            "sv": "Självstyrelsedagen",
            "en": "Autonomy Day"
          }
        },
        "friday after 06-19": {
          "name": {
            "sv": "Midsommarafton",
            "en": "Midsummer Eve"
          },
          "type": "bank"
        },
        "saturday after 06-20": {
          "name": {
            "sv": "Midsommardagen",
            "en": "Midsummer Day"
          }
        },
        "12-06": {
          "_name": "Independence Day"
        },
        "12-24 12:00": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 12:00": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "AZ": {
      "names": {
        "az": "Azərbaycan Respublikası",
        "en": "Azerbaijan"
      },
      "dayoff": "sunday",
      "weekend": [
        "saturday",
        "sunday"
      ],
      "zones": [
        "Asia/Baku"
      ],
      "langs": [
        "az"
      ],
      "days": {
        "01-01 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-02 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-20": {
          "name": {
            "az": "Qara Yanvar",
            "en": "Martyrs' Day"
          },
          "type": "observance"
        },
        "03-08 and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "03-08"
        },
        "03-20": {
          "name": {
            "az": "Novruz",
            "en": "Spring Festival"
          },
          "active": [
            {
              "from": 2011
            }
          ]
        },
        "05-09 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Faşizm üzərində qələbə günü",
            "en": "Day of Victory over Fascism"
          }
        },
        "05-28 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Respublika günü",
            "en": "Republic Day"
          }
        },
        "06-15 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Azərbaycan xalqının Milli Qurtuluş günü",
            "en": "National Salvation Day"
          }
        },
        "06-26 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Azərbaycan Respublikasının Silahlı Qüvvələri günü",
            "en": "Azerbaijan Armed Forces Day"
          }
        },
        "10-18 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Dövlət Müstəqilliyi günü",
            "en": "Independence Day"
          }
        },
        "11-09 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Dövlət Bayrağı günü",
            "en": "Flag Day"
          }
        },
        "11-12": {
          "name": {
            "az": "Konstitusiya günü",
            "en": "Constitution Day"
          }
        },
        "11-17": {
          "name": {
            "az": "Milli Dirçəliş günü",
            "en": "National Revival Day"
          }
        },
        "12-31 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "az": "Dünya azərbaycanlıların həmrəyliyi günü",
            "en": "International Solidarity Day of Azerbaijanis"
          }
        },
        "1 Shawwal and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "1 Shawwal"
        },
        "2 Shawwal and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "10 Dhu al-Hijjah"
        },
        "11 Dhu al-Hijjah and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "BA": {
      "names": {
        "bs": "Bosna i Hercegovina",
        "sr": "Боснa и Херцеговина",
        "hr": "Bosna i Hercegovina",
        "en": "Bosnia and Herzegovina"
      },
      "langs": [
        "bs",
        "sr",
        "hr"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if sunday then next tuesday": {
          "_name": "01-01",
          "substitute": true
        },
        "01-02 and if sunday then next monday": {
          "name": {
            "en": "2nd day of the New Year",
            "bs": "Drugi dan Nove Godine"
          },
          "substitute": true
        },
        "05-01 and if sunday then next tuesday": {
          "_name": "05-01",
          "substitute": true
        },
        "05-02 and if sunday then next monday": {
          "name": {
            "en": "2nd day of the Labour Day",
            "bs": "Drugi dan Dana rada"
          },
          "substitute": true
        },
        "01-06": {
          "_name": "01-06"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-02": {
          "_name": "11-02"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "julian 01-01": {
          "_name": "julian 01-01"
        },
        "orthodox": {
          "_name": "orthodox"
        },
        "julian 08-15": {
          "_name": "08-15",
          "note": "orthodox"
        },
        "julian 12-25": {
          "_name": "julian 12-25"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "10 Dhu al-Hijjah P4D": {
          "_name": "10 Dhu al-Hijjah"
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        }
      },
      "states": {
        "BIH": {
          "name": "Federation of Bosnia and Herzegovina",
          "days": {
            "03-01": {
              "_name": "Independence Day"
            },
            "11-25": {
              "name": {
                "en": "Statehood Day",
                "bs": "Dan državnosti"
              }
            }
          },
          "regions": {
            "W": {
              "name": "Western Herzegovina",
              "days": {
                "11-25": false
              }
            }
          }
        },
        "BRC": {
          "name": "Brčko District",
          "days": {
            "03-08": {
              "name": {
                "en": "Day of the Establishment of the District"
              }
            }
          }
        },
        "SRP": {
          "name": "Republika Srpska",
          "days": {
            "01-09": {
              "name": {
                "en": "Republic Day",
                "bs": "Dan Republike"
              }
            },
            "05-09": {
              "name": {
                "en": "Victory Day",
                "bs": "Dan pobjede"
              }
            },
            "11-21": {
              "name": {
                "en": "Dayton Agreement Day",
                "bs": "Dan uspostave Opšteg okvirnog sporazuma za mir u Bosni i Hercegovini"
              }
            }
          }
        }
      }
    },
    "BB": {
      "names": {
        "en": "Barbados"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "America/Barbados"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-21": {
          "name": {
            "en": "Errol Barrow Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-28": {
          "name": {
            "en": "National Heroes Day"
          }
        },
        "05-01 if sunday then next monday": {
          "name": {
            "en": "May Day"
          }
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "08-01": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "1st monday in August": {
          "name": {
            "en": "Kadooment Day"
          }
        },
        "11-30": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if sunday then next tuesday": {
          "_name": "Public Holiday"
        },
        "12-26": {
          "_name": "12-26"
        },
        "substitutes 12-26 if sunday then next monday": {
          "_name": "Public Holiday"
        }
      }
    },
    "BD": {
      "names": {
        "bn": "গণপ্রজাতন্ত্রী বাংলাদেশ",
        "en": "People's Republic of Bangladesh"
      },
      "langs": [
        "bn"
      ],
      "zones": [
        "Asia/Dhaka"
      ],
      "dayoff": "friday",
      "weekend": [
        "friday",
        "saturday"
      ],
      "days": {
        "bengali-revised 11-9": {
          "name": {
            "bn": "শহীদ দিবস",
            "en": "Language Martyrs' Day"
          }
        },
        "bengali-revised 12-3": {
          "name": {
            "bn": "মুজিব জয়ন",
            "en": "Mujib's Birthday & Children's Day"
          }
        },
        "bengali-revised 12-12": {
          "name": {
            "bn": "স্বাধীনতা দিবস",
            "en": "Independence Day"
          }
        },
        "bengali-revised 1-1": {
          "name": {
            "bn": "পহেলা বৈশাখ",
            "en": "Bengali New Year's Day"
          }
        },
        "bengali-revised 1-18": {
          "_name": "05-01",
          "name": {
            "bn": "মে দিবস",
            "en": "May Day"
          }
        },
        "bengali-revised 4-31": {
          "name": {
            "bn": "জাতীয় শোক দিবস",
            "en": "National Mourning Day"
          }
        },
        "bengali-revised 9-2": {
          "name": {
            "bn": "বিজয় দিবস",
            "en": "Victory Day"
          }
        },
        "10 Muharram": {
          "_name": "10 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        },
        "05-19": {
          "name": {
            "bn": "বুদ্ধ পূর্ণিমা",
            "en": "Buddha's Birthday"
          },
          "enable": [
            "2016-05-21",
            "2017-05-10",
            "2018-04-29",
            "2019-05-19",
            "2020-05-07"
          ],
          "disable": [
            "2016-05-19",
            "2017-05-19",
            "2018-05-19",
            "2019-05-19",
            "2020-05-19"
          ]
        },
        "08-24": {
          "name": {
            "bn": "জন্মাষ্টমী",
            "en": "Krishna Janmashtami"
          },
          "enable": [
            "2016-08-25",
            "2017-08-14",
            "2018-09-02",
            "2019-08-24",
            "2020-08-11"
          ],
          "disable": [
            "2016-08-24",
            "2017-08-24",
            "2018-08-24",
            "2019-08-24",
            "2020-08-24"
          ]
        },
        "10-08": {
          "name": {
            "bn": "দুর্গা পূজা",
            "en": "Durga Puja"
          },
          "enable": [
            "2016-10-11",
            "2017-09-30",
            "2018-10-19",
            "2019-10-08",
            "2020-10-25"
          ],
          "disable": [
            "2016-10-08",
            "2017-10-08",
            "2018-10-08",
            "2019-10-08",
            "2020-10-08"
          ]
        },
        "bengali-revised 9-11": {
          "_name": "12-25"
        },
        "03-25": {
          "name": {
            "en": "Genocide Remembrance Day"
          },
          "type": "observance"
        },
        "11-21": {
          "name": {
            "en": "Armed Forces Day"
          },
          "type": "observance"
        },
        "12-14": {
          "name": {
            "en": "Martyred Intellectuals Day"
          },
          "type": "observance"
        }
      }
    },
    "BE": {
      "names": {
        "fr": "Belgique",
        "nl": "België",
        "de": "Belgien",
        "en": "Belgium"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Brussels"
      ],
      "langs": [
        "fr",
        "nl",
        "de"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06",
          "name": {
            "de": "Erscheinung des Herrn"
          },
          "type": "observance"
        },
        "02-14": {
          "_name": "02-14",
          "type": "observance"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "07-21": {
          "_name": "National Holiday"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-02": {
          "_name": "11-02",
          "type": "observance"
        },
        "11-11": {
          "name": {
            "de": "Waffenstillstand",
            "fr": "Armistice",
            "nl": "Wapenstilstand"
          }
        },
        "11-15": {
          "name": {
            "nl": "Koningsdag",
            "fr": "Fête du Roi",
            "de": "Festtag des Königs"
          },
          "type": "observance"
        },
        "12-06": {
          "_name": "12-06",
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        }
      },
      "states": {
        "BRU": {
          "name": "Bruxelles",
          "langs": [
            "fr",
            "nl"
          ],
          "days": {
            "05-08": {
              "name": {
                "nl": "Feest van de Iris",
                "fr": "Fête de l'Iris"
              },
              "type": "observance"
            }
          }
        },
        "DE": {
          "name": "Deutschsprachige Gemeinschaft",
          "langs": [
            "de"
          ],
          "days": {
            "11-15": {
              "name": {
                "de": "Tag der Deutschsprachigen Gemeinschaft",
                "fr": "Jour de la Communauté Germanophone",
                "nl": "Feestdag van de Duitstalige Gemeenschap"
              },
              "type": "observance"
            }
          }
        },
        "VLG": {
          "name": "Vlaamse Gemeenschap",
          "langs": [
            "nl"
          ],
          "days": {
            "07-11": {
              "name": {
                "de": "Festtag der Wallonischen Region",
                "fr": "Fête de la Région wallonne",
                "nl": "Feestdag van de Vlaamse Gemeenschap"
              },
              "type": "observance"
            },
            "11-02": {
              "_name": "11-02",
              "type": "observance",
              "note": "day-off for employees of the flemish government"
            },
            "11-15": {
              "name": {
                "nl": "Koningsdag",
                "fr": "Fête du Roi",
                "de": "Festtag des Königs"
              },
              "type": "observance",
              "note": "day-off for employees of the flemish government"
            },
            "12-26": {
              "_name": "12-26",
              "type": "observance",
              "note": "day-off for employees of the flemish government"
            }
          }
        },
        "WAL": {
          "name": "Communauté française",
          "langs": [
            "fr"
          ],
          "days": {
            "09-27": {
              "name": {
                "de": "Tag der Französischsprachigen Gemeinschaft",
                "fr": "La fête de la communauté française",
                "nl": "Feestdag van de Franse Gemeenschap"
              },
              "type": "observance"
            }
          }
        }
      }
    },
    "BF": {
      "names": {
        "fr": "Burkina Faso",
        "en": "Burkina Faso"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-03": {
          "name": {
            "fr": "Soulèvement populaire",
            "en": "Anniversary of the 1966 Upper Voltan coup d'état"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "05-01": {
          "_name": "05-01"
        },
        "08-05": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-11": {
          "name": {
            "fr": "Fête nationale",
            "en": "Proclamation of the Republic"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "BG": {
      "names": {
        "bg": "България",
        "en": "Bulgaria"
      },
      "langs": [
        "bg"
      ],
      "zones": [
        "Europe/Sofia"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-01": {
          "name": {
            "bg": "Баба Марта",
            "en": "Granny March Day"
          },
          "type": "observance"
        },
        "03-03": {
          "name": {
            "bg": "Ден на Освобождението на България от Османската Империя",
            "en": "Liberation Day"
          }
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox": {
          "_name": "easter"
        },
        "orthodox 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-06": {
          "name": {
            "bg": "Гергьовден",
            "en": "St. George's Day"
          }
        },
        "05-07": {
          "name": {
            "bg": "Ден на радиото и телевизията",
            "en": "Radio and Television Day"
          },
          "type": "observance"
        },
        "05-24": {
          "name": {
            "bg": "Ден на азбуката, културата и просветата",
            "en": "Bulgarian Education and Culture, and Slavonic Literature Day"
          }
        },
        "09-06": {
          "name": {
            "bg": "Ден на съединението",
            "en": "Unification Day"
          }
        },
        "09-22": {
          "_name": "Independence Day"
        },
        "11-01": {
          "name": {
            "bg": "Ден на народните будители",
            "en": "Revival Leaders' Day"
          },
          "type": "school"
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "type": "observance"
        }
      }
    },
    "BH": {
      "names": {
        "ar": "مملكة البحرين",
        "en": "Bahrain"
      },
      "langs": [
        "ar"
      ],
      "zones": [
        "Asia/Qatar"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "ar": "يوم العمال"
          }
        },
        "12-16": {
          "name": {
            "ar": "اليوم الوطني",
            "en": "National Day"
          }
        },
        "12-17": {
          "name": {
            "ar": "يوم الجلوس",
            "en": "Accession Day"
          }
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "10 Muharram": {
          "_name": "10 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "9 Dhu al-Hijjah": {
          "_name": "9 Dhu al-Hijjah"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "BI": {
      "names": {
        "rn": "Republika y'Uburundi",
        "fr": "République du Burundi",
        "en": "Burundi"
      },
      "dayoff": "sunday",
      "langs": [
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-05": {
          "name": {
            "fr": "Jour de l'Unité",
            "en": "Unity Day"
          }
        },
        "04-06": {
          "name": {
            "fr": "Jour de Ntaryamira",
            "en": "Ntaryamira Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "07-01": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-13": {
          "name": {
            "fr": "Jour de Rwagasore",
            "en": "Rwagasore Day"
          }
        },
        "10-21": {
          "name": {
            "fr": "Jour de Ndadaye",
            "en": "Ndadaye Day"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "2015-07-24": {
          "_name": "Public Holiday",
          "name": {
            "fr": "Jour l'élection des Sénateurs"
          }
        }
      }
    },
    "BJ": {
      "names": {
        "fr": "République du Bénin",
        "en": "Benin"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-10": {
          "name": {
            "fr": "Fête du Vodoun"
          }
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "05-01": {
          "_name": "05-01"
        },
        "08-01": {
          "_name": "Independence Day",
          "name": {
            "fr": "Fête Nationale"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        }
      }
    },
    "BL": {
      "names": {
        "fr": "St. Barthélemy",
        "en": "St. Barths"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "America/St_Barthelemy"
      ],
      "_days": "FR",
      "days": {
        "easter -48": {
          "_name": "easter -48",
          "type": "observance"
        },
        "easter -47": {
          "_name": "easter -47",
          "type": "Observance"
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "easter -21": {
          "name": {
            "fr": "Mi-Carême",
            "en": "Laetare Sunday"
          },
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "bank"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "08-24": {
          "name": {
            "fr": "Fête de Saint Barthélemy",
            "en": "Saint Barth"
          },
          "type": "observance"
        },
        "10-09": {
          "_name": "Abolition of Slavery"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "BM": {
      "names": {
        "en": "Bermuda"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Atlantic/Bermuda"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if saturday, sunday then next monday": {
          "_name": "01-01",
          "substitute": true,
          "type": "bank",
          "note": "Goverment offices close"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "friday before 06-01": {
          "name": {
            "en": "Bermuda Day"
          }
        },
        "3nd monday in June": {
          "name": {
            "en": "National Heroes Day"
          }
        },
        "thursday before 08-04": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "friday before 08-05": {
          "name": {
            "en": "Somers' Day"
          }
        },
        "monday after 09-01": {
          "name": {
            "en": "Labour Day"
          }
        },
        "11-11": {
          "name": {
            "en": "Remembrance Day"
          }
        },
        "substitutes 11-11 if saturday, sunday then next monday": {
          "name": {
            "en": "Remembrance Day"
          },
          "substitute": true,
          "type": "bank",
          "note": "Goverment offices close"
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if saturday then next monday if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true,
          "type": "bank",
          "note": "Goverment offices close"
        },
        "12-26": {
          "_name": "12-26"
        },
        "substitutes 12-26 if saturday then next monday if sunday then next tuesday": {
          "_name": "12-26",
          "substitute": true,
          "type": "bank",
          "note": "Goverment offices close"
        }
      }
    },
    "BN": {
      "names": {
        "ms": "Negara Brunei Darussalam",
        "en": "Brunei"
      },
      "langs": [
        "ms",
        "en"
      ],
      "zones": [
        "Asia/Brunei"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01",
          "name": {
            "ms": "Awal Tahun Masihi"
          }
        },
        "02-23": {
          "name": {
            "en": "National Day",
            "ms": "Hari Kebangsaan"
          }
        },
        "03-31": {
          "name": {
            "en": "Armed Forces Day",
            "ms": "Hari Angkatan Bersenjata Diraja Brunei"
          }
        },
        "07-15": {
          "name": {
            "en": "Sultan's Birthday",
            "ms": "Hari Keputeraan KDYMM Sultan Brunei"
          }
        },
        "1 Ramadan": {
          "_name": "1 Ramadan"
        },
        "17 Ramadan": {
          "name": {
            "en": "Nuzul Al-Quran",
            "ms": "Hari Nuzul Al-Quran"
          }
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "27 Rajab": {
          "_name": "27 Rajab"
        },
        "12-25": {
          "_name": "12-25"
        },
        "chinese 01-0-01": {
          "name": {
            "en": "Chinese New Year",
            "ms": "Tahun Baru Cina"
          }
        }
      }
    },
    "BO": {
      "names": {
        "es": "Bolivia",
        "en": "Bolivia"
      },
      "dayoff": "sunday",
      "langs": [
        "es",
        "qu",
        "ay"
      ],
      "zones": [
        "America/La_Paz"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "name": {
            "en": "New Year's Day (substitutes)",
            "es": "Año Nuevo (substituto)"
          }
        },
        "01-22": {
          "name": {
            "en": "Plurinational State Foundation Day",
            "es": "Día de la Creación del Estado Plurinacional de Bolivia"
          }
        },
        "substitutes 01-22 if sunday then next monday": {
          "name": {
            "en": "Plurinational State Foundation Day (substitutes)",
            "es": "Día de la Creación del Estado Plurinacional de Bolivia (substituto)"
          }
        },
        "02-02": {
          "name": {
            "en": "Feast of the Virgin of Candelaria",
            "qu": "Mamacha Candelaria",
            "es": "Fiesta de la Virgen de Candelaria"
          },
          "type": "observance"
        },
        "easter -48": {
          "_name": "easter -48",
          "name": {
            "es": "Lunes de Carnaval"
          }
        },
        "easter -47": {
          "_name": "easter -47",
          "name": {
            "es": "Martes de Carnaval"
          }
        },
        "03-19": {
          "name": {
            "en": "Father's Day",
            "es": "Día del Padre"
          },
          "type": "observance"
        },
        "03-23": {
          "name": {
            "en": "Day of the Sea",
            "es": "Día del Mar"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "04-12": {
          "name": {
            "en": "Children's Day",
            "es": "Día del Niño"
          },
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "substitutes 05-01 if sunday then next monday": {
          "_name": "05-01",
          "name": {
            "en": "Labour Day (substitutes)",
            "es": "Día del Trabajo (substituto)"
          }
        },
        "05-27": {
          "name": {
            "en": "Mother's Day",
            "es": "Día de la Madre"
          },
          "type": "observance"
        },
        "06-06": {
          "name": {
            "en": "Teacher's Day",
            "es": "Día del Maestro"
          },
          "type": "observance"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "06-21": {
          "name": {
            "en": "Andean Amazonian Chaqueño New Year",
            "ay": "Willkakuti",
            "es": "Año Nuevo Andino Amazónico Chaqueño"
          }
        },
        "substitutes 06-21 if sunday then next monday": {
          "name": {
            "en": "Andean Amazonic Chacoan New Year (substitutes)",
            "ay": "Willkakuti (substituto)",
            "es": "Año Nuevo Andino Amazónico Chaqueño (substituto)"
          }
        },
        "08-06": {
          "_name": "Independence Day"
        },
        "substitutes 08-06 if sunday then next monday": {
          "name": {
            "en": "Independence Day (substitutes)",
            "es": "Día de la Independencia (substituto)"
          }
        },
        "08-17": {
          "name": {
            "en": "Flag Day",
            "es": "Día de la Bandera"
          },
          "type": "observance"
        },
        "09-21": {
          "name": {
            "en": "Student's Day",
            "es": "Día del Estudiante"
          },
          "type": "observance"
        },
        "10-11": {
          "name": {
            "es": "Día de la Mujer Boliviana",
            "en": "Bolivian Woman's Day"
          },
          "type": "observance"
        },
        "11-01": {
          "_name": "11-01",
          "name": {
            "es": "Todos Santos"
          },
          "type": "observance"
        },
        "11-02": {
          "_name": "11-02",
          "name": {
            "es": "Todos Santos"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if sunday then next monday": {
          "_name": "12-25",
          "name": {
            "en": "Christmas Day (substitutes)",
            "es": "Navidad (substituto)"
          }
        }
      },
      "states": {
        "B": {
          "name": "Beni",
          "days": {
            "11-18": {
              "name": {
                "es": "Efemérides del Beni",
                "en": "Beni Day"
              }
            },
            "substitutes 11-18 if sunday then next monday": {
              "name": {
                "es": "Efemérides del Beni (substituto)",
                "en": "Beni Day (substitutes)"
              }
            }
          }
        },
        "C": {
          "name": "Cochabamba",
          "days": {
            "09-14": {
              "name": {
                "es": "Efemérides de Cochabamba",
                "en": "Cochabamba Day"
              }
            },
            "substitutes 09-14 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Cochabamba (substituto)",
                "en": "Cochabamba Day (substitutes)"
              }
            }
          }
        },
        "H": {
          "name": "Chuquisaca",
          "days": {
            "05-25": {
              "name": {
                "es": "Efemérides de Chuquisaca",
                "en": "Chuquisaca Day"
              }
            },
            "substitutes 05-25 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Chuquisaca (substituto)",
                "en": "Chuquisaca Day (substitutes)"
              }
            }
          }
        },
        "L": {
          "name": "La Paz",
          "days": {
            "07-16": {
              "name": {
                "es": "Efemérides de La Paz",
                "en": "La Paz Day"
              }
            },
            "substitutes 07-16 if sunday then next monday": {
              "name": {
                "es": "Efemérides de La Paz (substituto)",
                "en": "La Paz Day (substitutes)"
              }
            }
          }
        },
        "N": {
          "name": "Pando",
          "days": {
            "09-24": {
              "name": {
                "es": "Efemérides de Pando",
                "en": "Pando Day"
              }
            },
            "substitutes 09-24 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Pando (substituto)",
                "en": "Pando Day (substitutes)"
              }
            }
          }
        },
        "O": {
          "name": "Oruro",
          "days": {
            "02-10": {
              "name": {
                "es": "Efemérides de Oruro",
                "en": "Oruro Day"
              }
            },
            "substitutes 02-10 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Oruro (substituto)",
                "en": "Oruro Day (substitutes)"
              }
            }
          }
        },
        "P": {
          "name": "Potosí",
          "days": {
            "11-10": {
              "name": {
                "es": "Efemérides de Potosí",
                "en": "Potosí Day"
              }
            },
            "substitutes 11-10 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Potosí (substituto)",
                "en": "Potosí Day (substitutes)"
              }
            }
          }
        },
        "S": {
          "name": "Santa Cruz",
          "days": {
            "09-24": {
              "name": {
                "es": "Efemérides de Santa Cruz",
                "en": "Santa Cruz Day"
              }
            },
            "substitutes 09-24 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Santa Cruz (substituto)",
                "en": "Santa Cruz Day (substitutes)"
              }
            }
          }
        },
        "T": {
          "name": "Tarija",
          "days": {
            "04-15": {
              "name": {
                "es": "Efemérides de Tarija",
                "en": "Tarija Day"
              }
            },
            "substitutes 04-15 if sunday then next monday": {
              "name": {
                "es": "Efemérides de Tarija (substituto)",
                "en": "Tarija Day (substitutes)"
              }
            }
          }
        }
      }
    },
    "BQ": {
      "names": {
        "nl": "Caribisch Nederland",
        "en": "Caribbean Netherlands"
      },
      "dayoff": "sunday",
      "zones": [
        "America/Curacao"
      ],
      "langs": [
        "nl",
        "en",
        "pap"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-27": {
          "name": {
            "pap": "Aña di Rey",
            "nl": "Koningsdag",
            "en": "Kings Day"
          }
        },
        "05-01 if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "12-05": {
          "name": {
            "nl": "Sinterklaasavond",
            "en": "St. Nicholas' Eve"
          },
          "type": "observance"
        },
        "12-15": {
          "name": {
            "pap": "Dia di Reino",
            "nl": "Koninkrijksdag",
            "en": "Kingdom Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      },
      "regions": {
        "BO": {
          "name": "Bonaire",
          "days": {
            "easter -48": {
              "_name": "easter -48",
              "name": {
                "en": "Carnival Monday"
              }
            },
            "04-30": {
              "name": {
                "en": "Rincon Day",
                "pap": "Dia di Rincon"
              }
            },
            "09-06": {
              "name": {
                "nl": "Boneiru Dag",
                "en": "Bonaire Day",
                "pap": "Dia di Boneiru"
              }
            }
          }
        },
        "SA": {
          "name": "Saba",
          "days": {
            "1st monday in August": {
              "_name": "easter -48",
              "name": {
                "en": "Carnival Monday"
              }
            },
            "1st friday in December": {
              "name": {
                "en": "Saba Day"
              }
            }
          }
        },
        "SE": {
          "name": "Sint Eustatius",
          "days": {
            "08-01": {
              "name": {
                "en": "Emancipation Day"
              }
            },
            "11-16": {
              "name": {
                "en": "Statia Day"
              }
            }
          }
        }
      }
    },
    "BR": {
      "names": {
        "pt": "Brasil",
        "en": "Brazil"
      },
      "dayoff": "sunday",
      "langs": [
        "pt"
      ],
      "zones": [
        "America/Sao_Paulo",
        "America/Noronha",
        "America/Belem",
        "America/Fortaleza",
        "America/Recife",
        "America/Araguaina",
        "America/Maceio",
        "America/Bahia",
        "America/Campo_Grande",
        "America/Cuiaba",
        "America/Santarem",
        "America/Porto_Velho",
        "America/Boa_Vista",
        "America/Manaus",
        "America/Eirunepe",
        "America/Rio_Branco"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "04-21": {
          "name": {
            "pt": "Dia de Tiradentes",
            "en": "Tiradentes' Day"
          }
        },
        "easter -50 PT110H": {
          "name": {
            "pt": "Carnaval",
            "en": "Carnival"
          },
          "type": "optional"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 60": {
          "_name": "easter 60",
          "type": "optional"
        },
        "06-12": {
          "name": {
            "pt": "Dia dos Namorados",
            "en": "Lovers' Day"
          },
          "type": "observance"
        },
        "2nd sunday in August": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "09-07": {
          "_name": "Independence Day"
        },
        "10-12": {
          "name": {
            "pt": "Nossa Senhora Aparecida",
            "en": "Our Lady of Aparecida"
          }
        },
        "1st sunday in October in even years": {
          "name": {
            "pt": "Dia de Eleição",
            "en": "Election Day"
          }
        },
        "1st sunday before 11-01 in even years": {
          "name": {
            "pt": "Dia de Eleição",
            "en": "Election Day"
          }
        },
        "11-02": {
          "_name": "11-02"
        },
        "11-15": {
          "name": {
            "pt": "Proclamação da República",
            "en": "Republic Day"
          }
        },
        "11-20": {
          "name": {
            "pt": "Dia da Consciência Negra",
            "en": "Black Awareness Day"
          },
          "active": [
            {
              "from": "2023-12-21T00:00:00.000Z"
            }
          ]
        },
        "12-24 14:00": {
          "_name": "12-24",
          "type": "optional"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31 14:00": {
          "_name": "12-31",
          "type": "optional"
        }
      },
      "states": {
        "AC": {
          "name": "Acre",
          "zones": [
            "America/Rio_Branco"
          ],
          "days": {
            "01-12": {
              "name": {
                "pt": "Dia do evangélico"
              },
              "active": [
                {
                  "from": "2004-01-29T00:00:00.000Z"
                }
              ]
            },
            "03-08": {
              "name": {
                "pt": "Alusivo ao Dia Internacional da Mulher"
              },
              "active": [
                {
                  "from": "2001-09-14T00:00:00.000Z"
                }
              ]
            },
            "06-15": {
              "name": {
                "pt": "Aniversário do estado"
              },
              "active": [
                {
                  "from": "1964-09-02T00:00:00.000Z"
                }
              ]
            },
            "09-05": {
              "name": {
                "pt": "Dia da Amazônia"
              },
              "active": [
                {
                  "from": "2004-01-05T00:00:00.000Z"
                }
              ]
            },
            "11-17": {
              "name": {
                "pt": "Assinatura do Tratado de Petrópolis"
              },
              "type": "optional",
              "active": [
                {
                  "from": "2012-02-21T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "AL": {
          "name": "Alagoas",
          "zones": [
            "America/Maceio"
          ],
          "days": {
            "06-24": {
              "name": {
                "pt": "São João"
              },
              "active": [
                {
                  "from": "1993-07-07T00:00:00.000Z"
                }
              ]
            },
            "06-29": {
              "name": {
                "pt": "São Pedro"
              },
              "active": [
                {
                  "from": "1993-07-07T00:00:00.000Z"
                }
              ]
            },
            "09-16": {
              "name": {
                "pt": "Emancipação política"
              }
            },
            "11-20": {
              "name": {
                "pt": "Morte de Zumbi dos Palmares"
              },
              "active": [
                {
                  "from": "1995-08-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "AM": {
          "name": "Amazonas",
          "zones": [
            "America/Manaus"
          ],
          "days": {
            "09-05": {
              "name": {
                "pt": "Elevação do Amazonas à categoria de província"
              },
              "active": [
                {
                  "from": "1977-12-21T00:00:00.000Z"
                }
              ]
            },
            "11-20": {
              "name": {
                "pt": "Dia da Consciência Negra"
              },
              "active": [
                {
                  "from": "2010-07-08T00:00:00.000Z",
                  "to": "2023-12-21T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "AP": {
          "name": "Amapá",
          "zones": [
            "America/Belem"
          ],
          "days": {
            "03-19": {
              "name": {
                "pt": "Dia de São José"
              },
              "note": "Santo padroeiro do Estado do Amapá",
              "active": [
                {
                  "from": "2002-04-16T00:00:00.000Z"
                }
              ]
            },
            "09-13": {
              "name": {
                "pt": "Criação do Território Federal"
              }
            }
          }
        },
        "BA": {
          "name": "Bahia",
          "zones": [
            "America/Bahia"
          ],
          "days": {
            "07-02": {
              "name": {
                "pt": "Independência da Bahia"
              }
            }
          }
        },
        "CE": {
          "name": "Ceará",
          "zones": [
            "America/Fortaleza"
          ],
          "days": {
            "03-25": {
              "name": {
                "pt": "Data magna do estado"
              },
              "active": [
                {
                  "from": "2011-12-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "DF": {
          "name": "Distrito Federal",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "04-21": {
              "name": {
                "pt": "Fundação de Brasília"
              }
            },
            "11-30": {
              "name": {
                "pt": "Dia do Evangélico"
              },
              "type": "public",
              "active": [
                {
                  "from": "1995-12-04T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "MA": {
          "name": "Maranhão",
          "zones": [
            "America/Belem"
          ],
          "days": {
            "07-28": {
              "name": {
                "pt": "Adesão do Maranhão à independência do Brasil"
              },
              "active": [
                {
                  "from": "1964-10-02T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "MG": {
          "name": "Minas Gerais",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "04-21": {
              "name": {
                "pt": "Data magna do estado"
              }
            }
          },
          "regions": {
            "BH": {
              "name": "Belo Horizonte",
              "days": {
                "08-15": {
                  "_name": "08-15",
                  "name": {
                    "pt": "Assunção de Nossa Senhora"
                  },
                  "type": "public"
                },
                "12-08": {
                  "_name": "12-08",
                  "type": "public"
                }
              }
            }
          }
        },
        "MS": {
          "name": "Mato Grosso do Sul",
          "zones": [
            "America/Campo_Grande"
          ],
          "days": {
            "10-11": {
              "name": {
                "pt": "Criação do estado"
              },
              "active": [
                {
                  "from": "1979-10-29T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "MT": {
          "name": "Mato Grosso",
          "zones": [
            "America/Cuiaba"
          ],
          "days": {
            "11-20": {
              "name": {
                "pt": "Dia da Consciência Negra"
              },
              "active": [
                {
                  "from": "2002-12-27T00:00:00.000Z",
                  "to": "2023-12-21T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "PA": {
          "name": "Pará",
          "zones": [
            "America/Santarem"
          ],
          "days": {
            "08-15": {
              "name": {
                "pt": "Adesão do Grão-Pará à independência do Brasil"
              },
              "active": [
                {
                  "from": "1996-09-10T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "PB": {
          "name": "Paraíba",
          "zones": [
            "America/Recife"
          ],
          "days": {
            "07-26": {
              "name": {
                "pt": "Homenagem à memória do ex-presidente João Pessoa"
              }
            },
            "08-05": {
              "name": {
                "pt": "Nossa Senhora das Neves"
              },
              "note": "Fundação do Estado em 1585 e dia da sua padroeira",
              "active": [
                {
                  "from": "1967-08-30T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "PE": {
          "name": "Pernambuco",
          "zones": [
            "America/Recife"
          ],
          "days": {
            "1st sunday in March": {
              "name": {
                "pt": "Revolução Pernambucana de 1817"
              },
              "active": [
                {
                  "from": "2009-07-02T00:00:00.000Z"
                }
              ]
            }
          },
          "regions": {
            "RE": {
              "name": "Recife",
              "days": {
                "06-24": {
                  "name": {
                    "pt": "São João",
                    "en": "Saint John's Day"
                  },
                  "type": "public"
                },
                "07-16": {
                  "name": {
                    "pt": "Nossa Senhora do Carmo"
                  },
                  "type": "public"
                },
                "12-08": {
                  "_name": "12-08",
                  "name": {
                    "pt": "Nossa Senhora da Conceição"
                  },
                  "type": "public"
                }
              }
            }
          }
        },
        "PI": {
          "name": "Piauí",
          "zones": [
            "America/Fortaleza"
          ],
          "days": {
            "10-19": {
              "name": {
                "pt": "Dia do Piauí"
              },
              "active": [
                {
                  "from": "1937-01-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "PR": {
          "name": "Paraná",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "12-19": {
              "name": {
                "pt": "Emancipação política do estado do Paraná"
              },
              "active": [
                {
                  "from": "1962-12-18T00:00:00.000Z"
                }
              ]
            }
          },
          "regions": {
            "CU": {
              "name": "Curitiba",
              "days": {
                "09-08": {
                  "name": {
                    "pt": "Nossa Senhora da Luz dos Pinhais"
                  },
                  "type": "public"
                }
              }
            }
          }
        },
        "RJ": {
          "name": "Rio de Janeiro",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "easter -47": {
              "name": {
                "pt": "Carnaval"
              },
              "active": [
                {
                  "from": "2008-05-14T00:00:00.000Z"
                }
              ]
            },
            "04-23": {
              "name": {
                "pt": "Dia de São Jorge"
              },
              "active": [
                {
                  "from": "2008-03-05T00:00:00.000Z"
                }
              ]
            },
            "3rd tuesday in October": {
              "name": {
                "pt": "Dia do Comércio"
              },
              "type": "observance",
              "note": "feriado para os comerciantes e trabalhadores da construção civil"
            },
            "11-20": {
              "name": {
                "pt": "Dia da Consciência Negra"
              },
              "active": [
                {
                  "from": "2002-11-11T00:00:00.000Z",
                  "to": "2023-12-21T00:00:00.000Z"
                }
              ]
            }
          },
          "regions": {
            "RJ": {
              "name": "Rio de Janeiro",
              "days": {
                "01-20": {
                  "name": {
                    "pt": "Dia de São Sebastião"
                  },
                  "type": "public",
                  "active": [
                    {
                      "from": "1988-06-27T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "RN": {
          "name": "Rio Grande do Norte",
          "zones": [
            "America/Recife"
          ],
          "days": {
            "10-03": {
              "name": {
                "pt": "Mártires de Cunhaú e Uruaçu"
              },
              "active": [
                {
                  "from": "2006-12-06T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "RO": {
          "name": "Rondônia",
          "zones": [
            "America/Porto_Velho"
          ],
          "days": {
            "01-04": {
              "name": {
                "pt": "Criação do estado"
              },
              "active": [
                {
                  "from": "2010-04-22T00:00:00.000Z"
                }
              ]
            },
            "06-18": {
              "name": {
                "pt": "Dia do evangélico"
              },
              "active": [
                {
                  "from": "2001-12-20T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "RR": {
          "name": "Roraima",
          "zones": [
            "America/Boa_Vista"
          ],
          "days": {
            "10-05": {
              "name": {
                "pt": "Criação do estado"
              }
            }
          }
        },
        "RS": {
          "name": "Rio Grande do Sul",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "09-20": {
              "name": {
                "pt": "Proclamação da República Rio-Grandense"
              }
            }
          }
        },
        "SC": {
          "name": "Santa Catarina",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "08-11": {
              "name": {
                "pt": "Dia de Santa Catarina"
              },
              "active": [
                {
                  "from": "2004-01-22T00:00:00.000Z",
                  "to": "2005-07-15T00:00:00.000Z"
                }
              ]
            },
            "08-11 if monday,tuesday,wednesday,thursday,friday,saturday then next sunday": {
              "name": {
                "pt": "Dia de Santa Catarina"
              },
              "active": [
                {
                  "from": "2005-07-15T00:00:00.000Z"
                }
              ]
            },
            "11-25": {
              "name": {
                "pt": "Dia de Santa Catarina de Alexandria"
              },
              "active": [
                {
                  "from": "1996-12-26T00:00:00.000Z",
                  "to": "2005-07-15T00:00:00.000Z"
                }
              ]
            },
            "11-25 if monday,tuesday,wednesday,thursday,friday,saturday then next sunday": {
              "name": {
                "pt": "Dia de Santa Catarina de Alexandria"
              },
              "active": [
                {
                  "from": "2005-07-15T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "SE": {
          "name": "Sergipe",
          "zones": [
            "America/Recife"
          ],
          "days": {
            "07-08": {
              "name": {
                "pt": "Emancipação política de Sergipe"
              }
            }
          }
        },
        "SP": {
          "name": "São Paulo",
          "zones": [
            "America/Sao_Paulo"
          ],
          "days": {
            "07-09": {
              "name": {
                "pt": "Revolução Constitucionalista"
              },
              "active": [
                {
                  "from": "1997-03-05T00:00:00.000Z"
                }
              ]
            },
            "11-20": {
              "name": {
                "pt": "Dia da Consciência Negra"
              },
              "active": [
                {
                  "from": "2023-09-12T00:00:00.000Z",
                  "to": "2023-12-21T00:00:00.000Z"
                }
              ]
            }
          },
          "regions": {
            "SP": {
              "name": "São Paulo",
              "days": {
                "easter 60": {
                  "_name": "easter 60",
                  "type": "public"
                },
                "01-25": {
                  "name": {
                    "pt": "Aniversário da Cidade",
                    "en": "City Birthday"
                  },
                  "type": "public"
                },
                "11-20": {
                  "name": {
                    "pt": "Dia da Consciência Negra"
                  },
                  "active": [
                    {
                      "from": "2004-01-07T00:00:00.000Z"
                    }
                  ]
                }
              }
            }
          }
        },
        "TO": {
          "name": "Tocantins",
          "zones": [
            "America/Araguaina"
          ],
          "days": {
            "10-05": {
              "name": {
                "pt": "Criação do estado"
              },
              "active": [
                {
                  "from": "1989-11-17T00:00:00.000Z"
                }
              ]
            },
            "03-18": {
              "name": {
                "pt": "Autonomia do Estado"
              },
              "active": [
                {
                  "from": "1998-03-17T00:00:00.000Z"
                }
              ]
            },
            "09-08": {
              "name": {
                "pt": "Nossa Senhora da Natividade"
              },
              "note": "Padroeira do Estado",
              "active": [
                {
                  "from": "1993-12-28T00:00:00.000Z"
                }
              ]
            }
          }
        }
      }
    },
    "BS": {
      "names": {
        "en": "Bahamas"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "America/Nassau"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-10 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Majority Rule Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "1st friday in June": {
          "_name": "05-01",
          "name": {
            "en": "Randol Fawkes Labour Day"
          }
        },
        "07-10 and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "1st monday in August": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "10-12 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "National Heroes' Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "BW": {
      "names": {
        "en": "Botswana"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01",
          "note": "except mining industy"
        },
        "01-02": {
          "name": {
            "en": "New Year's Holiday"
          },
          "note": "except mining industy"
        },
        "substitutes 01-02 if monday then next tuesday": {
          "name": {
            "en": "Public Holiday"
          },
          "note": "except mining industy"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1",
          "note": "except mining industy"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1",
          "note": "except mining industy"
        },
        "easter 39": {
          "_name": "easter 39",
          "note": "except mining industy"
        },
        "05-01": {
          "_name": "05-01",
          "note": "except mining industy"
        },
        "substitutes 05-01 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          },
          "note": "except mining industy"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "07-01": {
          "name": {
            "en": "Sir Seretse Khama Day"
          },
          "note": "except mining industy"
        },
        "substitutes 07-01 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          },
          "note": "except mining industy"
        },
        "3rd monday in July": {
          "name": {
            "en": "President’s Day"
          },
          "note": "except mining industy"
        },
        "tuesday after 3rd monday in July": {
          "name": {
            "en": "President’s Day Holiday"
          },
          "note": "except mining industy"
        },
        "09-30": {
          "name": {
            "en": "Botswana Day"
          }
        },
        "substitutes 09-30 if saturday,sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "name": {
            "en": "Family Day"
          },
          "note": "except mining industy"
        },
        "substitutes 12-26 if monday then next tuesday": {
          "name": {
            "en": "Public Holiday"
          }
        }
      }
    },
    "BY": {
      "names": {
        "be": "Рэспубліка Беларусь",
        "ru": "Республика Беларусь",
        "en": "Belarus"
      },
      "zones": [
        "Europe/Minsk"
      ],
      "langs": [
        "be",
        "ru"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "julian 12-25": {
          "_name": "12-25",
          "name": {
            "be": "Каляды праваслаўныя"
          }
        },
        "easter": {
          "_name": "easter",
          "name": {
            "be": "Вялiкдзень каталiцкi"
          },
          "type": "observance"
        },
        "orthodox": {
          "name": {
            "en": "Orthodox Easter",
            "be": "Вялiкдзень праваслаўны"
          },
          "type": "observance"
        },
        "orthodox +9": {
          "name": {
            "en": "Commemoration Day",
            "be": "Радунiца"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-09": {
          "name": {
            "en": "Victory Day",
            "be": "Дзень Перамогi"
          }
        },
        "07-03": {
          "_name": "Independence Day",
          "active": [
            {
              "from": 1996
            }
          ]
        },
        "11-07": {
          "name": {
            "en": "October Revolution Day",
            "be": "Дзень Кастрычніцкай рэвалюцыі"
          }
        },
        "12-25": {
          "_name": "12-25",
          "name": {
            "be": "Каляды каталiцкiя"
          }
        }
      }
    },
    "BZ": {
      "names": {
        "en": "Belize"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "America/Belize"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-09 if friday,saturday,sunday then next monday if tuesday,wednesday,thursday then previous monday": {
          "name": {
            "en": "Baron Bliss Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 if sunday then next monday": {
          "_name": "05-01"
        },
        "05-24 if friday,saturday,sunday then next monday if tuesday,wednesday,thursday then previous monday": {
          "name": {
            "en": "Commonwealth Day, Sovereign's Day"
          }
        },
        "09-10 if sunday then next monday": {
          "name": {
            "en": "Saint George's Caye Day, National Day"
          }
        },
        "09-21 if sunday then next monday": {
          "_name": "Independence Day"
        },
        "10-12 if friday,saturday,sunday then next monday if tuesday,wednesday,thursday then previous monday": {
          "name": {
            "en": "Day of the Americas"
          }
        },
        "11-19 if sunday then next monday": {
          "name": {
            "en": "Garifuna Settlement Day"
          }
        },
        "12-25 and if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true
        },
        "12-26 and if sunday then next monday": {
          "_name": "12-26",
          "substitute": true
        }
      }
    },
    "CA": {
      "names": {
        "en": "Canada",
        "fr": "Canada"
      },
      "zones": [
        "America/Toronto",
        "America/St_Johns",
        "America/Halifax",
        "America/Glace_Bay",
        "America/Moncton",
        "America/Goose_Bay",
        "America/Blanc-Sablon",
        "America/Nipigon",
        "America/Thunder_Bay",
        "America/Iqaluit",
        "America/Pangnirtung",
        "America/Resolute",
        "America/Atikokan",
        "America/Rankin_Inlet",
        "America/Winnipeg",
        "America/Rainy_River",
        "America/Regina",
        "America/Swift_Current",
        "America/Edmonton",
        "America/Cambridge_Bay",
        "America/Yellowknife",
        "America/Inuvik",
        "America/Creston",
        "America/Dawson_Creek",
        "America/Fort_Nelson",
        "America/Vancouver",
        "America/Whitehorse",
        "America/Dawson"
      ],
      "langs": [
        "en",
        "fr"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-02": {
          "name": {
            "en": "Groundhog Day",
            "fr": "Jour de la marmotte"
          },
          "type": "observance"
        },
        "02-14": {
          "_name": "02-14",
          "type": "observance"
        },
        "03-17": {
          "name": {
            "en": "St. Patrick’s Day",
            "fr": "Fête de la Saint-Patrick"
          },
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "2nd sunday after 05-01": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "monday before 05-25": {
          "name": {
            "en": "Victoria Day",
            "fr": "Fête de la Reine"
          }
        },
        "3rd sunday after 06-01": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "07-01": {
          "name": {
            "en": "Canada Day",
            "fr": "Fête du Canada"
          }
        },
        "monday after 08-01": {
          "name": {
            "en": "Civic Holiday",
            "fr": "Premier lundi d’août"
          }
        },
        "1st monday in September": {
          "_name": "05-01"
        },
        "09-30 since 2021": {
          "name": {
            "en": "National Day for Truth and Reconciliation",
            "fr": "Journée nationale de la vérité et de la réconciliation"
          }
        },
        "2nd monday after 10-01": {
          "name": {
            "en": "Thanksgiving",
            "fr": "Action de grâce"
          }
        },
        "10-31 18:00": {
          "name": {
            "en": "Halloween",
            "fr": "l'Halloween"
          },
          "type": "observance"
        },
        "11-11": {
          "name": {
            "en": "Remembrance Day",
            "fr": "Jour du Souvenir"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      },
      "states": {
        "AB": {
          "name": "Alberta",
          "zones": [
            "America/Edmonton"
          ],
          "days": {
            "3rd monday after 02-01": {
              "name": {
                "en": "Family Day",
                "fr": "Fête de la famille"
              }
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "monday after 08-01": {
              "name": {
                "en": "Heritage Day",
                "fr": "Fête du patrimoine"
              },
              "type": "optional"
            }
          }
        },
        "BC": {
          "name": "British Columbia",
          "zones": [
            "America/Vancouver",
            "America/Edmonton",
            "America/Creston",
            "America/Dawson_Creek"
          ],
          "days": {
            "2nd monday after 02-01": {
              "name": {
                "en": "Family Day",
                "fr": "Fête de la famille"
              },
              "active": [
                {
                  "to": 2019
                }
              ]
            },
            "3rd monday after 02-01": {
              "name": {
                "en": "Family Day",
                "fr": "Fête de la famille"
              },
              "active": [
                {
                  "from": 2019
                }
              ]
            }
          }
        },
        "MB": {
          "name": "Manitoba",
          "zones": [
            "America/Winnipeg"
          ],
          "days": {
            "3rd monday after 02-01": {
              "name": {
                "en": "Louis Riel Day",
                "fr": "Journée Louis Riel"
              }
            }
          }
        },
        "NB": {
          "name": "New Brunswick",
          "zones": [
            "America/Moncton"
          ],
          "days": {
            "monday after 08-01": {
              "name": {
                "en": "New Brunswick Day",
                "fr": "Jour de Nouveau Brunswick"
              }
            },
            "3rd monday after 02-01": {
              "name": {
                "en": "Family Day",
                "fr": "Fête de la famille"
              },
              "active": [
                {
                  "from": 2018
                }
              ]
            }
          }
        },
        "NL": {
          "name": "Newfoundland and Labrador",
          "zones": [
            "America/St_Johns",
            "America/Goose_Bay"
          ],
          "days": {
            "03-17": {
              "name": {
                "en": "Saint Patrick's Day",
                "fr": "Jour de la Saint-Patrick"
              },
              "type": "optional"
            },
            "04-23": {
              "name": {
                "en": "Saint George's Day",
                "fr": "Jour de St. George"
              },
              "type": "optional"
            },
            "06-24": {
              "name": {
                "en": "Discovery Day",
                "fr": "Journée découverte"
              },
              "type": "optional"
            },
            "07-12": {
              "name": {
                "en": "Orangemen's Day",
                "fr": "Fête des orangistes"
              },
              "type": "optional"
            },
            "11-11": {
              "name": {
                "en": "Armistice Day",
                "fr": "Jour de l'Armistice"
              }
            }
          }
        },
        "NS": {
          "name": "Nova Scotia",
          "zones": [
            "America/Halifax",
            "America/Moncton"
          ],
          "days": {
            "3rd monday after 02-01": {
              "name": {
                "en": "Heritage Day",
                "fr": "Fête du Patrimoine"
              }
            },
            "monday after 08-01": {
              "name": {
                "en": "Natal Day",
                "fr": "Jour de la Fondation"
              }
            }
          }
        },
        "NT": {
          "name": "Northwest Territories",
          "zones": [
            "America/Yellowknife",
            "America/Inuvik"
          ],
          "days": {
            "06-21": {
              "name": {
                "en": "National Indigenous Peoples Day",
                "fr": "Journée nationale des Autochthones"
              }
            }
          }
        },
        "NU": {
          "name": "Nunavut",
          "zones": [
            "America/Iqaluit",
            "America/Pangnirtung",
            "America/Resolute",
            "America/Rankin_Inlet",
            "America/Atikokan",
            "America/Cambridge_Bay"
          ],
          "days": {
            "07-09": {
              "name": {
                "en": "Nunavut Day"
              },
              "type": "bank"
            }
          }
        },
        "ON": {
          "name": "Ontario",
          "zones": [
            "America/Toronto",
            "America/Nipigon",
            "America/Thunder_Bay",
            "America/Atikokan",
            "America/Rainy_River",
            "America/Winnipeg"
          ],
          "days": {
            "3rd monday after 02-01": {
              "name": {
                "en": "Family Day",
                "fr": "Fête de la famille"
              }
            },
            "easter 1": {
              "_name": "easter 1"
            }
          }
        },
        "PE": {
          "name": "Prince Edward Island",
          "days": {
            "3rd monday after 02-01": {
              "name": {
                "en": "Islander Day",
                "fr": "Fête des Insulaires"
              }
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "3rd friday after 08-01": {
              "name": {
                "en": "Gold Cup Parade Day",
                "fr": "Défilé de la Coupe d'or"
              }
            }
          }
        },
        "QC": {
          "name": "Quebec",
          "zones": [
            "America/Blanc-Sablon",
            "America/Toronto",
            "America/Nipigon"
          ],
          "days": {
            "easter -2": {
              "_name": "easter -2",
              "note": "Either Good Friday or Easter Monday, at the employer’s option"
            },
            "easter 1": {
              "_name": "easter 1",
              "note": "Either Good Friday or Easter Monday, at the employer’s option"
            },
            "monday before 05-25": {
              "name": {
                "en": "National Patriots' Day",
                "fr": "Journée nationale des patriotes"
              }
            },
            "06-24": {
              "name": {
                "en": "National Holiday",
                "fr": "Fête nationale du Québec"
              }
            },
            "monday after 08-01": false
          }
        },
        "SK": {
          "name": "Saskatchewan",
          "zones": [
            "America/Regina",
            "America/Swift_Current",
            "America/Edmonton"
          ],
          "days": {
            "3rd monday after 02-01": {
              "name": {
                "en": "Family Day",
                "fr": "Fête de la famille"
              }
            },
            "3rd monday after 08-01": {
              "name": {
                "en": "Saskatchewan Day"
              }
            }
          }
        },
        "YT": {
          "name": "Yukon",
          "zones": [
            "America/Whitehorse",
            "America/Dawson"
          ],
          "days": {
            "easter 1": {
              "_name": "easter 1"
            },
            "3rd monday after 08-01": {
              "name": {
                "en": "Discovery Day",
                "fr": "Jour de la Découverte"
              }
            }
          }
        }
      }
    },
    "CC": {
      "names": {
        "en": "Cocos (Keeling) Islands"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Indian/Cocos"
      ],
      "dayoff": "sunday",
      "days": {
        "chinese 01-0-01 and if sunday then next tuesday if saturday then next monday": {
          "name": {
            "en": "Chinese New Year"
          },
          "substitute": true
        },
        "chinese 01-0-02 and if sunday then next tuesday if saturday then next monday": {
          "name": {
            "en": "Chinese New Year (2nd Day)"
          },
          "substitute": true
        },
        "01-01": {
          "_name": "01-01"
        },
        "01-26": {
          "name": {
            "en": "Australia Day"
          }
        },
        "03-20": {
          "name": {
            "en": "Labour Day"
          }
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-06": {
          "name": {
            "en": "Self Determination Day"
          }
        },
        "04-25": {
          "name": {
            "en": "Anzac Day"
          }
        },
        "12-25 and if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true
        },
        "12-26 and if sunday then next monday": {
          "_name": "12-26",
          "substitute": true
        },
        "1 Muharram and if sunday then next monday": {
          "substitute": true,
          "_name": "1 Muharram"
        },
        "1 Shawwal and if sunday then next monday": {
          "substitute": true,
          "_name": "1 Shawwal",
          "name": {
            "en": "Hari Raya Puasa"
          }
        },
        "10 Dhu al-Hijjah and if sunday then next monday": {
          "substitute": true,
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "en": "Hari Raya Haji"
          }
        },
        "12 Rabi al-awwal and if sunday then next monday": {
          "substitute": true,
          "_name": "12 Rabi al-awwal",
          "name": {
            "en": "Hari Maulaud Nabi"
          }
        }
      }
    },
    "CD": {
      "names": {
        "fr": "République démocratique du Congo",
        "en": "Democratic Republic of the Congo"
      },
      "dayoff": "sunday",
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Maputo",
        "Africa/Lagos"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-04 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "fr": "Martyrs de l'Indépendance",
            "en": "Day of the Martyrs"
          }
        },
        "01-16 and if sunday then next tuesday": {
          "substitute": true,
          "name": {
            "fr": "Journée du Héro National Laurent Désiré Kabila",
            "en": "Anniversary of President Laurent Kabila"
          }
        },
        "01-17 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "fr": "Journée du Héro National Patrice Emery Lumumba",
            "en": "Anniversary of Prime Minister Patrice Emery Lumumba"
          }
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "05-17 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "fr": "Journée de la Révolution et des Forces Armées",
            "en": "Liberation Day"
          }
        },
        "06-30 and if sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day",
          "name": {
            "fr": "Anniversaire de Indépendance"
          }
        },
        "08-01 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "fr": "Fête des parents",
            "en": "Parents' Day"
          }
        },
        "12-25 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        },
        "2016-01-15": {
          "_name": "Public Holiday"
        }
      }
    },
    "CF": {
      "names": {
        "fr": "République centrafricaine",
        "sg": "Ködörösêse tî Bêafrîka",
        "en": "Central African Republic"
      },
      "dayoff": "sunday",
      "langs": [
        "fr",
        "sg"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-29": {
          "name": {
            "fr": "Décès du Fondateur Barthélémy Boganda",
            "en": "Boganda Day"
          }
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "06-30": {
          "name": {
            "fr": "Journée de prière",
            "en": "General Prayer Day"
          }
        },
        "08-13": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-01": {
          "name": {
            "fr": "Jour de la République",
            "en": "Republic Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "CG": {
      "names": {
        "fr": "République du Congo",
        "en": "Republic of the Congo"
      },
      "dayoff": "sunday",
      "langs": [
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "06-10": {
          "name": {
            "fr": "Fête de la commémoration de la conférence nationale souveraine"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-28": {
          "name": {
            "fr": "Journée nationale de la République"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "CH": {
      "names": {
        "de": "Schweiz",
        "fr": "Suisse",
        "it": "Svizzera",
        "en": "Switzerland"
      },
      "dayoff": "sunday",
      "langs": [
        "de-ch",
        "de",
        "fr",
        "it"
      ],
      "zones": [
        "Europe/Zurich"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 39": {
          "_name": "easter 39",
          "name": {
            "de": "Auffahrt"
          }
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "1st sunday in June": {
          "name": {
            "de": "Vätertag",
            "fr": "Fête des pères"
          },
          "type": "observance",
          "active": [
            {
              "from": "2009-01-01"
            }
          ]
        },
        "08-01": {
          "name": {
            "de": "Bundesfeiertag",
            "fr": "Fête nationale",
            "it": "Giorno festivo federale"
          }
        },
        "3rd sunday after 09-01": {
          "name": {
            "de": "Eidg. Dank-, Buss- und Bettag",
            "fr": "Jeûne fédéral",
            "it": "Digiuno federale",
            "en": "Federal Day of Thanksgiving, Repentance and Prayer"
          }
        },
        "12-25": {
          "_name": "12-25",
          "name": {
            "de": "Weihnachtstag"
          }
        },
        "12-26": {
          "_name": "12-26",
          "name": {
            "de": "Stephanstag",
            "fr": "Saint-Etienne"
          }
        }
      },
      "states": {
        "ZH": {
          "names": {
            "de": "Kanton Zürich",
            "fr": "Canton de Zurich",
            "it": "Canton Zurigo",
            "en": "Canton of Zürich"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "05-01": {
              "_name": "05-01"
            },
            "easter 50": {
              "_name": "easter 50"
            },
            "monday after 2nd saturday in September 13:00": {
              "name": {
                "de": "Knabenschiessen"
              },
              "type": "optional"
            }
          }
        },
        "BE": {
          "names": {
            "de": "Kanton Bern",
            "fr": "Canton de Berne",
            "it": "Canton Berna",
            "en": "Canton of Bern"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "2 janvier"
              }
            }
          }
        },
        "LU": {
          "names": {
            "de": "Kanton Luzern",
            "fr": "Canton de Lucerne",
            "it": "Canton Lucerna",
            "en": "Canton of Lucerne"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "03-19": {
              "_name": "03-19",
              "type": "observance"
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            }
          }
        },
        "UR": {
          "names": {
            "de": "Kanton Uri",
            "fr": "Canton d'Uri",
            "it": "Canton Uri",
            "en": "Canton of Uri"
          },
          "days": {
            "01-06": {
              "_name": "01-06"
            },
            "03-19": {
              "_name": "03-19"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            },
            "12-26": false,
            "12-26 not on monday, friday": {
              "_name": "12-26"
            }
          }
        },
        "SZ": {
          "names": {
            "de": "Kanton Schwyz",
            "fr": "Canton de Schwytz",
            "it": "Canton Svitto",
            "en": "Canton of Schwyz"
          },
          "days": {
            "01-06": {
              "_name": "01-06"
            },
            "03-19": {
              "_name": "03-19"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            }
          }
        },
        "OW": {
          "names": {
            "de": "Kanton Obwalden",
            "fr": "Canton d'Obwald",
            "it": "Canton Obvaldo",
            "en": "Canton of Obwalden"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "09-25": {
              "name": {
                "de": "Bruderklausenfest",
                "fr": "Saint-Nicholas-de-Flüe",
                "en": "Saint Nicholas of Flüe"
              }
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            },
            "12-26": {
              "_name": "12-26",
              "type": "optional"
            }
          }
        },
        "NW": {
          "names": {
            "de": "Kanton Nidwalden",
            "fr": "Canton de Nidwald",
            "it": "Canton Nidvaldo",
            "en": "Canton of Nidwalden"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "bank"
            },
            "03-19": {
              "_name": "03-19"
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            },
            "12-26": {
              "_name": "12-26",
              "type": "optional"
            }
          }
        },
        "GL": {
          "sources": [
            "https://www.gl.ch/verwaltung/staatskanzlei/oeffentliche-feiertage.html/1335"
          ],
          "names": {
            "de": "Kanton Glarus",
            "fr": "Canton de Glaris",
            "it": "Canton Glarona",
            "en": "Canton of Glarus"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "Thursday after 04-02 if is observance holiday then next Thursday": {
              "name": {
                "de": "Näfelser Fahrt",
                "fr": "Bataille de Näfels"
              }
            },
            "3rd sunday after 09-01": false,
            "11-01": {
              "_name": "11-01"
            },
            "12-24": {
              "_name": "12-24"
            },
            "12-31": {
              "_name": "12-31"
            }
          }
        },
        "ZG": {
          "names": {
            "de": "Kanton Zug",
            "fr": "Canton de Zoug",
            "it": "Canton Zugo",
            "en": "Canton of Zug"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            },
            "12-26": {
              "_name": "12-26",
              "type": "optional"
            }
          }
        },
        "FR": {
          "names": {
            "fr": "Canton de Fribourg",
            "de": "Kanton Freiburg",
            "it": "Canton Friburgo",
            "en": "Canton of Fribourg"
          },
          "langs": [
            "fr",
            "de-ch",
            "de",
            "it"
          ],
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60",
              "note": "excluding communities: Agriswil, Altavilla, Büchslen, Cordast, Courgevaux, Courlevon, Fräschels, Galmiz, Gempenach, Greng, Jeuss, Kerzers, Lurtigen, Meyriez, Muntelier, Murten, Ried bei Kerzers (halb), Salvenach, Ulmiz, Bas-Vully, Haut-Vully\n"
            },
            "08-15": {
              "_name": "08-15",
              "note": "excluding communities: Agriswil, Altavilla, Büchslen, Cordast, Courgevaux, Courlevon, Fräschels, Galmiz, Gempenach, Greng, Jeuss, Kerzers, Lurtigen, Meyriez, Muntelier, Murten, Ried bei Kerzers (halb), Salvenach, Ulmiz, Bas-Vully, Haut-Vully\n"
            },
            "11-01": {
              "_name": "11-01",
              "note": "excluding communities: Agriswil, Altavilla, Büchslen, Cordast, Courgevaux, Courlevon, Fräschels, Galmiz, Gempenach, Greng, Jeuss, Kerzers, Lurtigen, Meyriez, Muntelier, Murten, Ried bei Kerzers (halb), Salvenach, Ulmiz, Bas-Vully, Haut-Vully\n"
            },
            "12-08": {
              "_name": "12-08",
              "note": "excluding communities: Agriswil, Altavilla, Büchslen, Cordast, Courgevaux, Courlevon, Fräschels, Galmiz, Gempenach, Greng, Jeuss, Kerzers, Lurtigen, Meyriez, Muntelier, Murten, Ried bei Kerzers (halb), Salvenach, Ulmiz, Bas-Vully, Haut-Vully\n"
            },
            "12-26": {
              "_name": "12-26",
              "type": "optional"
            }
          }
        },
        "SO": {
          "names": {
            "de": "Kanton Solothurn",
            "fr": "Canton de Soleure",
            "it": "Canton Soletta",
            "en": "Canton of Solothurn"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "03-19": {
              "_name": "03-19",
              "note": "Only in communities: Fulenbach, Walterswil, Wisen, Metzerlen, Nulgar-St. Pantaleon, Rodersdorf, Bärschwil, Büsserach\n"
            },
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "05-01 12:00": {
              "_name": "05-01"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60",
              "note": "is optional in Bucheggberg"
            },
            "08-15": {
              "_name": "08-15",
              "note": "is optional in Bucheggberg"
            },
            "11-01": {
              "_name": "11-01",
              "note": "is optional in Bucheggberg"
            },
            "12-26": {
              "_name": "12-26",
              "type": "optional"
            }
          }
        },
        "BS": {
          "names": {
            "de": "Kanton Basel-Stadt",
            "fr": "Canton de Bâle-Ville",
            "it": "Canton Basilea Città",
            "en": "Canton of Basel-City"
          },
          "days": {
            "05-01": {
              "_name": "05-01"
            }
          }
        },
        "BL": {
          "names": {
            "de": "Kanton Basel-Landschaft",
            "fr": "Canton de Bâle-Campagne",
            "it": "Canton Basilea Campagna",
            "en": "Canton of Basel-Country"
          },
          "days": {
            "05-01": {
              "_name": "05-01"
            },
            "easter 60": {
              "_name": "easter 60",
              "type": "observance"
            }
          }
        },
        "SH": {
          "names": {
            "de": "Kanton Schaffhausen",
            "fr": "Canton de Schaffhouse",
            "it": "Canton Sciaffusa",
            "en": "Canton of Schaffhausen"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "optional"
            },
            "05-01": {
              "_name": "05-01"
            }
          }
        },
        "AR": {
          "names": {
            "de": "Kanton Appenzell Ausserrhoden",
            "fr": "Canton d'Appenzell Rhodes-Extérieures",
            "it": "Canton Appenzello Esterno",
            "en": "Canton of Appenzell Outer Rhodes"
          },
          "days": {
            "12-26": false,
            "12-26 not on monday": {
              "_name": "12-26"
            }
          }
        },
        "AI": {
          "names": {
            "de": "Kanton Appenzell Innerrhoden",
            "fr": "Canton d'Appenzell Rhodes-Intérieures",
            "it": "Canton Appenzello Interno",
            "en": "Canton of Appenzell Inner-Rhodes"
          },
          "days": {
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "09-22": {
              "name": {
                "de": "Mauritiustag"
              },
              "note": "excluding: Bezirk Oberegg\n"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-26": {
              "type": "observance"
            },
            "12-26 not on tuesday, saturday": {
              "_name": "12-26"
            }
          }
        },
        "SG": {
          "names": {
            "de": "Kanton St. Gallen",
            "fr": "Canton de Saint-Gall",
            "it": "Canton San Gallo",
            "en": "Canton of St. Gallen"
          },
          "days": {
            "11-01": {
              "_name": "11-01"
            }
          }
        },
        "GR": {
          "names": {
            "de": "Kanton Graubünden",
            "it": "Cantone dei Grigioni",
            "fr": "Canton des Grisons",
            "en": "Canton of Grisons"
          },
          "langs": [
            "de-ch",
            "de",
            "it",
            "fr"
          ],
          "days": {
            "01-06": {
              "_name": "01-06",
              "type": "observance"
            },
            "03-19": {
              "_name": "03-19",
              "type": "observance"
            },
            "easter -2": {
              "_name": "easter -2",
              "type": "optional"
            },
            "easter 60": {
              "_name": "easter 60",
              "type": "observance"
            },
            "08-15": {
              "_name": "08-15",
              "type": "observance"
            },
            "11-01": {
              "_name": "11-01",
              "type": "observance"
            },
            "12-08": {
              "_name": "12-08",
              "type": "observance"
            }
          }
        },
        "AG": {
          "names": {
            "de": "Kanton Aargau",
            "fr": "Canton d'Argovie",
            "it": "Canton Argovia",
            "en": "Canton of Aargau"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              }
            },
            "05-01": {
              "_name": "05-01"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            }
          }
        },
        "TG": {
          "names": {
            "de": "Kanton Thurgau",
            "fr": "Canton de Thurgovie",
            "it": "Canton Turgovia",
            "en": "Canton of Thurgau"
          },
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              }
            },
            "05-01": {
              "_name": "05-01"
            }
          }
        },
        "TI": {
          "names": {
            "it": "Canton Ticino",
            "de": "Kanton Tessin",
            "fr": "Canton du Tessin",
            "en": "Canton of Ticino"
          },
          "langs": [
            "it",
            "de-ch",
            "de",
            "fr"
          ],
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "bank"
            },
            "01-06": {
              "_name": "01-06",
              "name": {
                "it": "Epifania"
              }
            },
            "03-19": {
              "_name": "03-19"
            },
            "easter -2": false,
            "easter 60": {
              "_name": "easter 60"
            },
            "05-01": {
              "_name": "05-01"
            },
            "06-29": {
              "_name": "06-29"
            },
            "1st sunday in June": false,
            "08-15": {
              "_name": "08-15",
              "name": {
                "it": "Assunzione"
              }
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            }
          }
        },
        "VD": {
          "names": {
            "fr": "Canton de Vaud",
            "de": "Kanton Waadt",
            "it": "Canton Vaud",
            "en": "Canton of Vaud"
          },
          "langs": [
            "fr",
            "de-ch",
            "de",
            "it"
          ],
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "2 Janvier"
              }
            },
            "monday after 3rd sunday in September": {
              "name": {
                "de": "Bettagsmontag",
                "fr": "Lundi du Jeûne Fédéral",
                "en": "Monday after Federal Day of Thanksgiving, Repentance and Prayer"
              }
            },
            "12-26": false
          }
        },
        "VS": {
          "names": {
            "fr": "Canton du Valais",
            "de": "Kanton Wallis",
            "it": "Canton Vallese",
            "en": "Canton of Valais"
          },
          "langs": [
            "fr",
            "de-ch",
            "de",
            "it"
          ],
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "Saint-Berthold"
              },
              "type": "bank"
            },
            "03-19": {
              "_name": "03-19"
            },
            "easter -2": false,
            "easter 1": {
              "_name": "easter 1",
              "type": "optional"
            },
            "05-01 12:00": {
              "_name": "05-01"
            },
            "easter 50": {
              "_name": "easter 50"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "monday after 3rd sunday after 09-01": {
              "name": {
                "de": "Bettagsmontag",
                "fr": "Lundi du Jeûne Fédéral",
                "en": "Monday after Federal Day of Thanksgiving, Repentance and Prayer"
              },
              "type": "bank"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-08": {
              "_name": "12-08"
            },
            "12-24 12:00": {
              "_name": "12-24"
            },
            "12-26": {
              "type": "optional"
            }
          }
        },
        "NE": {
          "names": {
            "fr": "Canton de Neuchâtel",
            "de": "Kanton Neuenburg",
            "it": "Canton Neuchâtel",
            "en": "Canton of Neuchâtel"
          },
          "langs": [
            "fr",
            "de-ch",
            "de",
            "it"
          ],
          "days": {
            "01-02 on monday": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "2 Janvier"
              }
            },
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "2 Janvier"
              },
              "type": "observance"
            },
            "03-01": {
              "name": {
                "fr": "Instauration de la République",
                "de": "Jahrestag Ausrufung der Republik"
              }
            },
            "easter -2": {
              "_name": "easter -2"
            },
            "05-01": {
              "_name": "05-01"
            },
            "easter 50": {
              "_name": "easter 50",
              "type": "observance"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "monday after 3rd sunday in September": {
              "name": {
                "de": "Bettagsmontag",
                "fr": "Lundi du Jeûne Fédéral",
                "en": "Monday after Federal Day of Thanksgiving, Repentance and Prayer"
              },
              "type": "optional"
            },
            "12-26": {
              "type": "observance"
            },
            "12-26 on monday": {
              "_name": "12-26"
            }
          }
        },
        "GE": {
          "names": {
            "fr": "Canton de Genève",
            "de": "Kanton Genf",
            "it": "Canton Ginevra",
            "en": "Canton of Geneva"
          },
          "langs": [
            "fr",
            "de-ch",
            "de",
            "it"
          ],
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "2 Janvier"
              },
              "type": "bank"
            },
            "thursday after 1st sunday after 09-01": {
              "name": {
                "de": "Genfer Bettag",
                "fr": "Jeûne Genevois"
              }
            },
            "12-26": {
              "type": "bank"
            },
            "12-31": {
              "name": {
                "de": "Wiederherstellung der Republik",
                "fr": "Restauration de la République",
                "en": "Restoration of the Republic"
              }
            },
            "3rd sunday after 09-01": false
          }
        },
        "JU": {
          "names": {
            "fr": "Canton du Jura",
            "de": "Kanton Jura",
            "it": "Canton Giura",
            "en": "Canton of Jura"
          },
          "langs": [
            "fr",
            "de-ch",
            "de",
            "it"
          ],
          "days": {
            "01-02": {
              "name": {
                "de": "Berchtoldstag",
                "fr": "2 Janvier"
              }
            },
            "05-01": {
              "_name": "05-01"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "06-23": {
              "name": {
                "fr": "Plébiscite jurassien",
                "en": "Jura Plebiscite",
                "de": "Fest der Unabhängigkeit"
              }
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "12-26": false
          }
        }
      }
    },
    "CI": {
      "names": {
        "fr": "République de Côte d'Ivoire",
        "en": "Republic of Côte d'Ivoire"
      },
      "langs": [
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "08-07 since 1960": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-15 since 1996": {
          "name": {
            "en": "National Peace Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "27 Ramadan": {
          "_name": "27 Ramadan"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "CK": {
      "names": {
        "rar": "Kūki 'Āirani",
        "en": "Cook Islands"
      },
      "langs": [
        "en",
        "rar"
      ],
      "zones": [
        "Pacific/Rarotonga"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-02 and if Saturday then next Monday if Monday, Sunday then next Tuesday": {
          "substitute": true,
          "name": {
            "en": "Day after New Year's Day"
          }
        },
        "04-25": {
          "name": {
            "en": "Anzac Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1st Monday in June": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "1st Friday in July": {
          "name": {
            "en": "Ra o te Ui Ariki (House of Ariki)",
            "rar": "Ra o te Ui Ariki"
          }
        },
        "08-04 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "Constitution Day"
        },
        "10-26 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "National Gospel Day"
          }
        },
        "12-25 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Saturday then next Monday if Monday, Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-26"
        }
      },
      "states": {
        "Aitutaki": {
          "names": {
            "en": "Aitutaki"
          },
          "days": {
            "10-26 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Aitutaki Gospel Day"
              }
            }
          }
        },
        "Atiu": {
          "names": {
            "en": "Atiu"
          },
          "days": {
            "07-19 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Atiu Gospel Day"
              }
            }
          }
        },
        "Mangaia": {
          "names": {
            "en": "Mangaia"
          },
          "days": {
            "06-15 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Mangaia Gospel Day"
              }
            }
          }
        },
        "Manihiki": {
          "names": {
            "en": "Manihiki"
          },
          "days": {
            "08-08 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Manihiki Gospel Day"
              }
            }
          }
        },
        "Mitiaro": {
          "names": {
            "en": "Mitiaro"
          },
          "days": {
            "07-21 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Mitiaro Gospel Day"
              }
            }
          }
        },
        "Palmerston": {
          "names": {
            "en": "Palmerston"
          },
          "days": {
            "05-25 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Palmerston Gospel Day"
              }
            }
          }
        },
        "Penrhyn": {
          "names": {
            "en": "Penrhyn"
          },
          "days": {
            "05-13 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Penrhyn Gospel Day"
              }
            }
          }
        },
        "Pukapuka": {
          "names": {
            "en": "Pukapuka"
          },
          "days": {
            "12-06 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Pukapuka Gospel Day"
              }
            }
          }
        },
        "Rakahanga": {
          "names": {
            "en": "Rakahanga"
          },
          "days": {
            "08-15 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Rakahanga Gospel Day"
              }
            }
          }
        },
        "Rarotonga": {
          "names": {
            "en": "Rarotonga"
          },
          "days": {
            "07-25 and if Saturday, Sunday then next Monday": {
              "substitute": true,
              "name": {
                "en": "Rarotonga Gospel Day"
              }
            }
          }
        }
      }
    },
    "CL": {
      "names": {
        "es": "Chile",
        "en": "Chile"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Santiago",
        "Pacific/Easter"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02 on monday since 2017": {
          "name": "Día adicional",
          "active": [
            {
              "from": 2017
            }
          ]
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-21": {
          "name": {
            "en": "Navy Day",
            "es": "Día de las Glorias Navales"
          }
        },
        "06-21 since 2021 prior to 2022": {
          "name": {
            "en": "Indigenous People's Day",
            "es": "Día de los Pueblos Indígenas"
          }
        },
        "june solstice in America/Santiago since 2022": {
          "name": {
            "en": "Indigenous People's Day",
            "es": "Día de los Pueblos Indígenas"
          }
        },
        "06-29 if tuesday, wednesday, thursday then previous monday if friday then next monday": {
          "_name": "06-29"
        },
        "07-16": {
          "name": {
            "en": "Our Lady of Mount Carmel",
            "es": "Virgen del Carmen"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "2022-09-16": {
          "name": {
            "es": "Fiestas Patrias",
            "en": "National Holiday"
          }
        },
        "09-17 on friday, monday since 2017": {
          "name": {
            "en": "National holiday",
            "es": "Feriado Adicional Fiestas Patrias"
          }
        },
        "09-18": {
          "name": {
            "en": "National holiday",
            "es": "Fiestas Patrias"
          }
        },
        "09-19": {
          "name": {
            "en": "Army Day",
            "es": "Día de las Glorias del Ejército"
          }
        },
        "09-20 on friday": {
          "name": {
            "es": "Feriado Adicional Fiestas Patrias",
            "en": "National Holiday"
          }
        },
        "10-12 if tuesday, wednesday, thursday then previous monday if friday then next monday": {
          "name": {
            "en": "Columbus Day",
            "es": "Encuentro de Dos Mundos"
          }
        },
        "10-31 if wednesday then next friday if tuesday then previous friday": {
          "_name": "Reformation Day"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      },
      "states": {
        "AP": {
          "name": "Arica y Parinacota",
          "days": {
            "06-07": {
              "name": {
                "en": "Battle of Arica",
                "es": "Asalto y Toma del Morro de Arica"
              }
            }
          }
        },
        "BI": {
          "name": "Biobío",
          "regions": {
            "CH": {
              "name": "Chillán y Chillán Viejo",
              "days": {
                "08-20": {
                  "name": {
                    "en": "Nativity of Liberator Bernardo O'Higgins",
                    "es": "Nacimiento del Prócer de la Independencia"
                  },
                  "active": [
                    {
                      "to": "2017-08-19"
                    }
                  ]
                }
              }
            }
          }
        },
        "NU": {
          "name": "Ñuble",
          "regions": {
            "CH": {
              "name": "Chillán y Chillán Viejo",
              "days": {
                "08-20": {
                  "name": {
                    "en": "Nativity of Liberator Bernardo O'Higgins",
                    "es": "Nacimiento del Prócer de la Independencia"
                  },
                  "active": [
                    {
                      "from": "2017-08-19"
                    }
                  ]
                }
              }
            }
          }
        },
        "TA": {
          "name": "Tarapacá",
          "days": {
            "08-10": {
              "name": {
                "en": "Saint Lawrence",
                "es": "San Lorenzo de Tarapacá"
              },
              "type": "observance",
              "disable": [
                2015
              ]
            },
            "2015-08-10": {
              "name": {
                "en": "Saint Lawrence",
                "es": "San Lorenzo de Tarapacá"
              }
            }
          }
        }
      }
    },
    "CM": {
      "names": {
        "fr": "Cameroun",
        "en": "Cameroon"
      },
      "dayoff": "sunday",
      "langs": [
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-11": {
          "name": {
            "fr": "Fête de la Jeunesse",
            "en": "Youth Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01 if sunday then next monday": {
          "_name": "05-01"
        },
        "05-20": {
          "name": {
            "fr": "Fête nationale ou de l'unité",
            "en": "National Day"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "08-15": {
          "_name": "08-15"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "CN": {
      "names": {
        "en": "China",
        "zh": "中华人民共和国"
      },
      "dayoff": "sunday",
      "langs": [
        "zh",
        "en"
      ],
      "zones": [
        "Asia/Shanghai",
        "Asia/Urumqi"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-08 12:00": {
          "_name": "03-08",
          "note": "Women"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-04 12:00": {
          "name": {
            "en": "Youth Day",
            "zh": "青年节"
          },
          "note": "Youth from the age of 14 to 28"
        },
        "06-01": {
          "name": {
            "en": "Children's Day",
            "zh": "六一儿童节"
          },
          "note": "Children below the age of 14"
        },
        "08-01 12:00": {
          "name": {
            "en": "Army Day",
            "zh": "建军节"
          },
          "note": "Military personnel in active service"
        },
        "10-01": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          }
        },
        "10-02": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          }
        },
        "10-03": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          }
        },
        "chinese 01-0-00": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          }
        },
        "chinese 01-0-01": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          }
        },
        "chinese 01-0-02": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          }
        },
        "chinese 5-01 solarterm": {
          "name": {
            "en": "Qingming Festival",
            "zh": "清明节 清明節"
          }
        },
        "chinese 05-0-05": {
          "name": {
            "en": "Dragon Boat Festival",
            "zh": "端午节"
          }
        },
        "chinese 08-0-15": {
          "name": {
            "en": "Mid-Autumn Festival",
            "zh": "中秋节"
          }
        },
        "2021-01-02": {
          "_name": "01-01"
        },
        "2021-01-03": {
          "_name": "01-01"
        },
        "2021-02-14": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          },
          "note": "Work on Sun February 7 and Sat February 20."
        },
        "2021-02-15": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          }
        },
        "2021-02-16": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          }
        },
        "2021-02-17": {
          "name": {
            "en": "Spring Festival",
            "zh": "春节"
          }
        },
        "2021-04-03": {
          "name": {
            "en": "Qingming Festival",
            "zh": "清明节 清明節"
          }
        },
        "2021-04-05": {
          "name": {
            "en": "Qingming Festival",
            "zh": "清明节 清明節"
          }
        },
        "2021-05-02": {
          "_name": "05-01",
          "note": "Work on Sun April 25 and Sat May 8."
        },
        "2021-05-03": {
          "_name": "05-01"
        },
        "2021-05-04": {
          "_name": "05-01"
        },
        "2021-05-05": {
          "_name": "05-01"
        },
        "2021-06-12": {
          "name": {
            "en": "Dragon Boat Festival",
            "zh": "端午节"
          }
        },
        "2021-06-13": {
          "name": {
            "en": "Dragon Boat Festival",
            "zh": "端午节"
          }
        },
        "2021-09-19": {
          "name": {
            "en": "Mid-Autumn Festival",
            "zh": "中秋节"
          },
          "note": "Work on Sat September 18."
        },
        "2021-09-20": {
          "name": {
            "en": "Mid-Autumn Festival",
            "zh": "中秋节"
          }
        },
        "2021-10-04": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          },
          "note": "Work on Sun September 26 and Sat October 9."
        },
        "2021-10-05": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          }
        },
        "2021-10-06": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          }
        },
        "2021-10-07": {
          "name": {
            "en": "National Day",
            "zh": "国庆节"
          }
        }
      }
    },
    "CO": {
      "names": {
        "es": "Colombia",
        "en": "Colombia"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Bogota"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "monday after 01-06": {
          "_name": "01-06"
        },
        "monday after 03-19": {
          "_name": "03-19"
        },
        "easter -7": {
          "_name": "easter -7",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 43": {
          "_name": "easter 39"
        },
        "easter 64": {
          "_name": "easter 60"
        },
        "easter 71": {
          "name": {
            "es": "Sagrado Corazón de Jesús",
            "en": "Sacred Heart"
          }
        },
        "monday after 06-29": {
          "_name": "06-29"
        },
        "07-20": {
          "_name": "Independence Day"
        },
        "08-07": {
          "name": {
            "en": "Battle of Boyacá",
            "es": "Batalla de Boyacá"
          }
        },
        "monday after 08-15": {
          "_name": "08-15"
        },
        "monday after 10-12": {
          "name": {
            "es": "Día de la Raza",
            "en": "Columbus Day"
          }
        },
        "1st monday in November": {
          "_name": "11-01"
        },
        "monday after 11-11": {
          "name": {
            "es": "Independencia de Cartagena",
            "en": "Independence of Cartagena"
          }
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "CR": {
      "names": {
        "es": "Costa Rica",
        "en": "Costa Rica"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Costa_Rica"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "04-11": {
          "name": {
            "es": "Gesta Heroica de Juan Santamaría"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-25": {
          "name": {
            "en": "Guanacaste Day",
            "es": "Anexión del Partido de Nicoya"
          }
        },
        "08-02": {
          "name": {
            "en": "Our Lady of Los Ángeles",
            "es": "Día de la Virgen de los Ángeles"
          }
        },
        "08-15": {
          "_name": "Mothers Day"
        },
        "09-15": {
          "_name": "Independence Day"
        },
        "10-12 if monday then previous friday": {
          "name": {
            "en": "Columbus Day",
            "es": "Día de la Raza"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "CU": {
      "names": {
        "es": "Cuba",
        "en": "Cuba"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Havana"
      ],
      "days": {
        "01-01": {
          "name": {
            "es": "Triunfo de la Revolución",
            "en": "Triumph of the Revolution"
          }
        },
        "01-02": {
          "name": {
            "es": "Día de Victoria de las Fuerzas Armadas",
            "en": "Victory of Armed Forces Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-25": {
          "name": {
            "es": "Conmemoración del asalto a Moncada",
            "en": "Day before the Commemoration of the Assault of the Moncada garrison"
          }
        },
        "07-26": {
          "name": {
            "es": "Día de la Rebeldía Nacional",
            "en": "Commemoration of the Assault of the Moncada garrison"
          }
        },
        "07-27": {
          "name": {
            "es": "Conmemoración del asalto a Moncada",
            "en": "Day after the Commemoration of the Assault of the Moncada garrison"
          }
        },
        "10-10": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "CV": {
      "names": {
        "pt": "República de Cabo Verde",
        "en": "Cape Verde"
      },
      "langs": [
        "pt"
      ],
      "zones": [
        "Atlantic/Cape_Verde"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-13": {
          "name": {
            "pt": "Dia da Democracia",
            "en": "Democracy Day"
          }
        },
        "01-20": {
          "name": {
            "pt": "Dia dos Heróis Nacionais",
            "en": "Heroes' Day"
          }
        },
        "easter -47": {
          "_name": "easter -47"
        },
        "easter -46": {
          "_name": "easter -46"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-01": {
          "name": {
            "pt": "Dia das Crianças",
            "en": "Children's Day"
          }
        },
        "07-05": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15",
          "name": {
            "pt": "Dia da Padroeira Nacional"
          }
        },
        "09-12": {
          "name": {
            "pt": "Dia Nacional",
            "en": "National Day"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        }
      },
      "states": {
        "S": {
          "name": "Sotavento Islands",
          "regions": {
            "PR": {
              "name": "Praia",
              "days": {
                "05-19": {
                  "name": {
                    "pt": "Dia do Município da Praia"
                  }
                }
              }
            }
          }
        }
      }
    },
    "CW": {
      "names": {
        "nl": "Curaçao",
        "pap": "Kòrsou",
        "en": "Curaçao"
      },
      "langs": [
        "nl",
        "pap",
        "en"
      ],
      "zones": [
        "America/Curacao"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -48": {
          "_name": "easter -48",
          "name": {
            "en": "Carnival Monday"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-27": {
          "name": {
            "pap": "Aña di Rey",
            "nl": "Koningsdag",
            "en": "Kings Day"
          }
        },
        "05-01 if sunday then next monday": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "1st sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39",
          "name": {
            "nl": "Hemelvaartsdag"
          }
        },
        "07-02": {
          "name": {
            "nl": "Dag van het volkslied en de Vlag",
            "pap": "Dia di Himno i Bandera",
            "en": "Flag Day"
          }
        },
        "10-10": {
          "name": {
            "nl": "Dag van het land Curaçao",
            "pap": "Pais Kòrsou",
            "en": "Curaçao Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 12:00": {
          "_name": "12-31"
        }
      }
    },
    "CX": {
      "names": {
        "en": "Christmas Island"
      },
      "langs": [
        "en",
        "ms"
      ],
      "zones": [
        "Indian/Christmas"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-26": {
          "name": {
            "en": "Australia Day"
          }
        },
        "chinese 01-0-01 P2D": {
          "name": {
            "en": "Chinese New Year",
            "zh": "春节"
          }
        },
        "4th monday in March": {
          "_name": "05-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "04-25": {
          "name": {
            "en": "Anzac Day"
          }
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "name": {
            "ms": "Hari Raya Puasa"
          }
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "ms": "Hari Raya Haji"
          }
        },
        "10-06": {
          "name": {
            "en": "Territory Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "CY": {
      "names": {
        "el": "Κύπρος",
        "en": "Cyprus"
      },
      "dayoff": "",
      "langs": [
        "el"
      ],
      "zones": [
        "Asia/Nicosia"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "orthodox -48": {
          "name": {
            "el": "Καθαρά Δευτέρα",
            "en": "Ash Sunday"
          },
          "type": "observance"
        },
        "orthodox -47": {
          "name": {
            "el": "Καθαρά Δευτέρα",
            "en": "Clean Monday"
          }
        },
        "03-25": {
          "name": {
            "el": "Ευαγγελισμός, Εθνική Εορτή",
            "en": "Annunciation, Anniversary of 1821 Revolution"
          }
        },
        "04-01": {
          "name": {
            "en": "Cyprus National Day",
            "el": "Κύπρος Εθνική Εορτή"
          }
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox": {
          "_name": "easter"
        },
        "orthodox 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "orthodox 49": {
          "_name": "easter 49"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-01": {
          "name": {
            "en": "Cyprus Independence Day",
            "el": "Ημέρα της Ανεξαρτησίας Κύπρος"
          }
        },
        "10-28": {
          "_name": "National Holiday",
          "name": {
            "el": "Επέτειος του Όχι"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "CZ": {
      "names": {
        "cz": "Česká republika",
        "en": "Czech Republic"
      },
      "langs": [
        "cz"
      ],
      "zones": [
        "Europe/Prague"
      ],
      "days": {
        "01-01": {
          "_name": "01-01",
          "name": {
            "cz": "Nový rok a Den obnovy samostatného českého státu"
          }
        },
        "easter -4": {
          "name": {
            "cz": "Škaredá středa",
            "en": "Ugly Wednesday"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1",
          "type": "observance"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-08": {
          "name": {
            "cz": "Den vítězství",
            "en": "Liberation Day"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "07-05": {
          "name": {
            "cz": "Den slovanských věrozvěstů Cyrila a Metoděje",
            "en": "Saints Cyril and Methodius Day"
          }
        },
        "07-06": {
          "name": {
            "cz": "Den upálení mistra Jana Husa",
            "en": "Jan Hus Day"
          }
        },
        "09-28": {
          "name": {
            "cz": "Den české státnosti",
            "en": "St. Wenceslas Day (Czech Statehood Day)"
          }
        },
        "10-28": {
          "name": {
            "cz": "Den vzniku samostatného československého státu",
            "en": "Independent Czechoslovak State Day"
          }
        },
        "11-17": {
          "name": {
            "cz": "Den boje za svobodu a demokracii",
            "en": "Struggle for Freedom and Democracy Day"
          }
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "DE": {
      "names": {
        "de": "Deutschland",
        "en": "Germany"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Berlin"
      ],
      "langs": [
        "de"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-14": {
          "_name": "02-14",
          "type": "observance"
        },
        "easter -52": {
          "name": {
            "de": "Weiberfastnacht",
            "en": "Women's Carnival Day"
          },
          "type": "observance"
        },
        "easter -48": {
          "name": {
            "de": "Rosenmontag",
            "en": "Shrove Monday"
          },
          "type": "observance"
        },
        "easter -47 14:00": {
          "_name": "easter -47",
          "type": "observance"
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "de": "Maifeiertag"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "10-03": {
          "_name": "National Holiday",
          "name": {
            "de": "Tag der Deutschen Einheit"
          }
        },
        "11-01": {
          "_name": "11-01",
          "type": "observance"
        },
        "11-02": {
          "_name": "11-02",
          "type": "observance"
        },
        "11-11": {
          "_name": "11-11",
          "type": "observance"
        },
        "wednesday before 11-23": {
          "_name": "Buß- und Bettag",
          "type": "observance"
        },
        "6th sunday before 12-25": {
          "name": {
            "de": "Volkstrauertag",
            "en": "Memorial Day"
          },
          "type": "observance"
        },
        "5th sunday before 12-25": {
          "name": {
            "de": "Totensonntag"
          },
          "type": "observance"
        },
        "4th sunday before 12-25": {
          "name": {
            "de": "1. Advent"
          },
          "type": "observance"
        },
        "3th sunday before 12-25": {
          "name": {
            "de": "2. Advent"
          },
          "type": "observance"
        },
        "2nd sunday before 12-25": {
          "name": {
            "de": "3. Advent"
          },
          "type": "observance"
        },
        "1st sunday before 12-25": {
          "name": {
            "de": "4. Advent"
          },
          "type": "observance"
        },
        "12-24 14:00 if sunday then 00:00": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25",
          "name": {
            "de": "1. Weihnachtstag"
          }
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 14:00 if sunday then 00:00": {
          "_name": "12-31",
          "type": "bank"
        },
        "2017-10-31": {
          "_name": "Reformation Day"
        }
      },
      "states": {
        "BB": {
          "name": "Brandenburg",
          "days": {
            "easter": {
              "_name": "easter"
            },
            "easter 49": {
              "_name": "easter 49"
            },
            "10-31": {
              "_name": "Reformation Day"
            }
          }
        },
        "BE": {
          "name": "Berlin",
          "days": {
            "03-08": {
              "_name": "03-08",
              "active": [
                {
                  "from": "2019-01-01T00:00:00.000Z"
                }
              ]
            },
            "easter": {
              "_name": "easter",
              "type": "observance"
            },
            "easter 49": {
              "_name": "easter 49",
              "type": "observance"
            },
            "2020-05-08": {
              "name": {
                "de": "Tag der Befreiung (75. Jahrestag)",
                "en": "Liberation Day (75th Anniversary)"
              }
            },
            "2025-05-08": {
              "name": {
                "de": "Tag der Befreiung (80. Jahrestag)",
                "en": "Liberation Day (80th Anniversary)"
              }
            },
            "2028-06-17": {
              "name": {
                "de": "75-jähriges Jubiläum des Volksaufstands in der DDR",
                "en": "75th anniversary of the GDR uprising"
              }
            }
          }
        },
        "BW": {
          "name": "Baden-Württemberg",
          "days": {
            "01-06": {
              "_name": "01-06"
            },
            "easter -3": {
              "_name": "easter -3",
              "type": "school"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "10-31": {
              "_name": "Reformation Day",
              "type": "school"
            },
            "11-01": {
              "_name": "11-01"
            }
          }
        },
        "BY": {
          "name": "Bayern",
          "days": {
            "01-06": {
              "_name": "01-06"
            },
            "02-02": {
              "_name": "02-02",
              "type": "observance"
            },
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            },
            "wednesday before 11-23": {
              "_name": "Buß- und Bettag",
              "type": "school"
            }
          },
          "regions": {
            "A": {
              "name": "Stadt Augsburg",
              "days": {
                "08-08": {
                  "name": {
                    "de": "Augsburger Friedensfest",
                    "en": "Augsburg Peace Festival"
                  }
                }
              }
            },
            "EVANG": {
              "names": {
                "de": "Überwiegend evangelische Gemeinden",
                "en": "Predominantly protestant communities"
              },
              "days": {
                "08-15": {
                  "_name": "08-15",
                  "type": "school"
                }
              }
            }
          }
        },
        "HB": {
          "name": "Hansestadt Bremen",
          "days": {
            "10-31": {
              "_name": "Reformation Day",
              "active": [
                {
                  "from": "2018-01-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "HE": {
          "name": "Hessen",
          "days": {
            "easter": {
              "_name": "easter"
            },
            "easter 49": {
              "_name": "easter 49"
            },
            "easter 60": {
              "_name": "easter 60"
            }
          }
        },
        "HH": {
          "name": "Hansestadt Hamburg",
          "days": {
            "10-31": {
              "_name": "Reformation Day",
              "active": [
                {
                  "from": "2018-01-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "MV": {
          "name": "Mecklenburg Vorpommern",
          "days": {
            "03-08 since 2023": {
              "_name": "03-08"
            },
            "10-31": {
              "_name": "Reformation Day"
            }
          }
        },
        "NI": {
          "name": "Niedersachsen",
          "days": {
            "10-31": {
              "_name": "Reformation Day",
              "active": [
                {
                  "from": "2018-01-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "NW": {
          "name": "Nordrhein-Westfalen",
          "days": {
            "easter 60": {
              "_name": "easter 60"
            },
            "11-01": {
              "_name": "11-01"
            }
          }
        },
        "RP": {
          "name": "Rheinland-Pfalz",
          "days": {
            "easter 60": {
              "_name": "easter 60"
            },
            "11-01": {
              "_name": "11-01"
            }
          }
        },
        "SH": {
          "name": "Schleswig-Holstein",
          "days": {
            "10-31": {
              "_name": "Reformation Day",
              "active": [
                {
                  "from": "2018-01-01T00:00:00.000Z"
                }
              ]
            }
          }
        },
        "SL": {
          "name": "Saarland",
          "days": {
            "easter 60": {
              "_name": "easter 60"
            },
            "08-15": {
              "_name": "08-15"
            },
            "11-01": {
              "_name": "11-01"
            }
          }
        },
        "SN": {
          "name": "Sachsen",
          "days": {
            "easter 60": {
              "_name": "easter 60",
              "type": "observance"
            },
            "10-31": {
              "_name": "Reformation Day"
            },
            "wednesday before 11-23": {
              "_name": "Buß- und Bettag"
            }
          },
          "regions": {
            "BZ": {
              "name": "Landkreis Bautzen",
              "days": {
                "easter 60": {
                  "_name": "easter 60",
                  "type": "public",
                  "note": "Bautzen (nur in den Ortsteilen Bolbritz und Salzenforst), Crostwitz, Göda (nur im Ortsteil Prischwitz), Großdubrau (nur im Ortsteil Sdier), Hoyerswerda (nur im Ortsteil Dörgenhausen), Königswartha (nicht im Ortsteil Wartha), Nebelschütz, Neschwitz (nur in den Ortsteilen Neschwitz und Saritsch), Panschwitz-Kuckau, Puschwitz, Räckelwitz, Radibor, Ralbitz-Rosenthal und Wittichenau."
                }
              }
            }
          }
        },
        "ST": {
          "name": "Sachsen-Anhalt",
          "days": {
            "01-06": {
              "_name": "01-06"
            },
            "10-31": {
              "_name": "Reformation Day"
            }
          }
        },
        "TH": {
          "name": "Thüringen",
          "days": {
            "easter 60": {
              "_name": "easter 60",
              "type": "observance"
            },
            "09-20": {
              "name": {
                "de": "Weltkindertag",
                "en": "International Children's Day"
              },
              "active": [
                {
                  "from": 2019
                }
              ]
            },
            "10-31": {
              "_name": "Reformation Day"
            }
          },
          "regions": {
            "EIC": {
              "name": "Landkreis Eichfeld",
              "days": {
                "easter 60": {
                  "_name": "easter 60",
                  "type": "public"
                }
              }
            },
            "UH": {
              "name": "Unstrut-Hainich-Kreis",
              "days": {
                "easter 60": {
                  "_name": "easter 60",
                  "type": "public",
                  "note": "In Anrode (nur in den Ortsteilen Bickenriede und Zella), Dünwald (nur in den Ortsteilen Beberstedt und Hüpstedt), Rodeberg (nur im Ortsteil Struth), Südeichsfeld"
                }
              }
            },
            "WAK": {
              "name": "Wartburgkreis",
              "days": {
                "easter 60": {
                  "_name": "easter 60",
                  "type": "public",
                  "note": "In Brunnhartshausen (nur in den Ortsteilen Föhlritz und Steinberg), Buttlar, Geisa, Schleid, Zella/Rhön"
                }
              }
            }
          }
        }
      }
    },
    "DJ": {
      "names": {
        "fr": "République de Djibouti",
        "ar": "جمهورية جيبوتي",
        "so": "Jamhuuriyadda Jabuuti",
        "aa": "Gabuutih Ummuuno",
        "en": "Djibouti"
      },
      "langs": [
        "fr",
        "ar",
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-27 since 1977": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "27 Rajab": {
          "_name": "27 Rajab"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "9 Dhu al-Hijjah": {
          "_name": "9 Dhu al-Hijjah"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "DK": {
      "names": {
        "da": "Danmark",
        "en": "Denmark"
      },
      "langs": [
        "da"
      ],
      "zones": [
        "Europe/Copenhagen"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -48": {
          "name": {
            "da": "Fastelavn"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 26 prior to 2024": {
          "name": {
            "da": "Store Bededag",
            "en": "Prayer Day",
            "de": "Buß- und Bettag"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "05-01": {
          "_name": "05-01",
          "type": "observance",
          "note": "Full holiday for blue collar workers"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-05": {
          "_name": "Constitution Day",
          "type": "observance",
          "note": "Shops are closed"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "12-24": {
          "_name": "12-24",
          "type": "observance",
          "note": "Shops are closed"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "DM": {
      "names": {
        "en": "Dominica"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if sunday then next monday": {
          "_name": "01-01",
          "substitute": true
        },
        "easter -48": {
          "_name": "easter -48",
          "name": {
            "en": "Carnival Monday"
          }
        },
        "easter -47": {
          "_name": "easter -47",
          "name": {
            "en": "Carnival Tuesday"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "1st monday in August": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "11-03 if sunday then next monday": {
          "_name": "Independence Day"
        },
        "11-04 if sunday then next monday if monday then next tuesday": {
          "name": {
            "en": "National Day of Community Service"
          }
        },
        "12-25 and if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true
        },
        "12-26 and if sunday then next monday": {
          "_name": "12-26",
          "substitute": true
        }
      }
    },
    "DO": {
      "names": {
        "es": "República Dominicana",
        "en": "Dominican Republic"
      },
      "dayoff": "sunday",
      "zones": [
        "America/Santo_Domingo"
      ],
      "langs": [
        "es"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "_name": "01-06"
        },
        "01-21": {
          "name": {
            "es": "Nuestra Señora de la Altagracia",
            "en": "Our Lady of Altagracia"
          }
        },
        "01-26 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "es": "Día de Duarte",
            "en": "Duarte's Birthday"
          }
        },
        "02-27": {
          "_name": "Independence Day"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01 if tuesday,wednesday then previous monday if thursday,friday,sunday then next monday": {
          "_name": "05-01"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "08-16": {
          "name": {
            "es": "Día de la Restauración",
            "en": "Restoration Day"
          }
        },
        "09-24": {
          "name": {
            "es": "Nuestra Señora de las Mercedes",
            "en": "Our Lady of las Mercedes"
          }
        },
        "11-06 if tuesday,wednesday,thursday,friday,saturday then next monday": {
          "_name": "Constitution Day"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "DZ": {
      "names": {
        "ar": "الجمهورية الجزائرية الديمقراطية الشعبية",
        "fr": "République algérienne démocratique et populaire",
        "en": "Algeria"
      },
      "langs": [
        "ar",
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Algiers"
      ],
      "dayoff": "saturday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-12": {
          "name": {
            "ar": "رأس السنة الأمازيغية",
            "fr": "Nouvel an amazigh",
            "en": "Amazigh New Year"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-05": {
          "_name": "Independence Day"
        },
        "11-01": {
          "_name": "Revolution Day"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "10 Muharram": {
          "_name": "10 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "EC": {
      "names": {
        "es": "Ecuador",
        "en": "Ecuador"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Guayaquil",
        "Pacific/Galapagos"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -48": {
          "name": {
            "en": "Carnival",
            "es": "Carnaval"
          }
        },
        "easter -47": {
          "_name": "easter -47"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-24": {
          "name": {
            "en": "The Battle of Pichincha",
            "es": "Batalla del Pichincha"
          }
        },
        "07-24": {
          "name": {
            "en": "The Birthday of Simón Bolívar",
            "es": "El Natalicio de Simón Bolívar"
          },
          "type": "observance"
        },
        "08-10": {
          "name": {
            "en": "Declaration of Independence of Quito",
            "es": "Día del Primer Grito de Independencia de Quito"
          }
        },
        "09-10": {
          "name": {
            "en": "Independence of Guayaquil",
            "es": "Independencia de Guayaquil"
          }
        },
        "10-31": {
          "name": {
            "en": "Flag Day",
            "es": "Dia de La Bandera"
          },
          "type": "observance"
        },
        "11-02": {
          "_name": "11-02"
        },
        "11-03": {
          "name": {
            "en": "Independence of Cuenca",
            "es": "Independencia de Cuenca"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        }
      },
      "states": {
        "P": {
          "name": "Pichincha",
          "regions": {
            "QU": {
              "name": "Quito",
              "days": {
                "12-06": {
                  "name": {
                    "en": "Foundation of Quito",
                    "es": "Aniversario de la fundación de Quito"
                  },
                  "type": "observance"
                }
              }
            }
          }
        }
      }
    },
    "EE": {
      "names": {
        "et": "Eesti",
        "en": "Estonia"
      },
      "dayoff": "sunday",
      "langs": [
        "et"
      ],
      "zones": [
        "Europe/Tallinn"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06",
          "type": "observance"
        },
        "02-02": {
          "name": {
            "et": "Tartu rahulepingu aastapäev",
            "en": "Anniversary of the Tartu Peace Treaty"
          },
          "type": "observance"
        },
        "02-24": {
          "_name": "Independence Day",
          "type": "public"
        },
        "03-14": {
          "name": {
            "et": "emakeelepäev",
            "en": "Native Language Day"
          },
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "06-04": {
          "name": {
            "et": "Eesti lipu päev",
            "en": "National Flag Day"
          },
          "type": "observance"
        },
        "06-14": {
          "name": {
            "et": "leinapäev",
            "en": "Day of Mourning and Commemoration"
          },
          "type": "observance"
        },
        "06-23": {
          "name": {
            "et": "võidupüha",
            "en": "Victory Day"
          }
        },
        "06-24": {
          "name": {
            "et": "jaanipäev",
            "en": "Midsummer Day"
          }
        },
        "08-20": {
          "name": {
            "et": "taasiseseisvumispäev",
            "en": "Day of Restoration of Independence"
          }
        },
        "08-23": {
          "name": {
            "et": "kommunismi ja natsismi ohvrite mälestuspäev",
            "en": "European Day of Remembrance for Victims of Stalinism and Nazism"
          },
          "type": "observance"
        },
        "2nd sunday in September": {
          "name": {
            "et": "vanavanemate päev",
            "en": "Grandparents Day"
          },
          "type": "observance"
        },
        "09-22": {
          "name": {
            "et": "vastupanuvõitluse päev",
            "en": "Resistance Fighting Day"
          },
          "type": "observance"
        },
        "11-02": {
          "_name": "11-02",
          "type": "observance"
        },
        "2nd sunday in November": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "11-16": {
          "name": {
            "et": "taassünni päev",
            "en": "Day of Declaration of Sovereignty"
          },
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "EG": {
      "names": {
        "ar": "جمهورية مصر العربية",
        "en": "Egypt"
      },
      "langs": [
        "ar",
        "en"
      ],
      "zones": [
        "Africa/Cairo"
      ],
      "dayoff": "saturday",
      "days": {
        "01-25 since 2011": {
          "name": {
            "ar": "عيد ثورة 25 يناير",
            "en": "Revolution Day 2011"
          }
        },
        "01-25": {
          "name": {
            "ar": "عيد الشرطة",
            "en": "National Police Day"
          }
        },
        "04-25": {
          "name": {
            "ar": "عيد تحرير سيناء",
            "en": "Sinai Liberation Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-30": {
          "name": {
            "ar": "عيد ثورة 30 يونيو",
            "en": "30 June Day"
          }
        },
        "07-23": {
          "_name": "Revolution Day"
        },
        "10-06": {
          "name": {
            "ar": "عيد القوات المسلحة",
            "en": "Armed Forces Day"
          }
        },
        "orthodox 1": {
          "name": {
            "ar": "شم النسيم",
            "en": "Sham El Nessim"
          }
        },
        "julian 12-25": {
          "_name": "12-25"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P4D": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "EH": {
      "names": {
        "ar": "الجمهورية العربية الصحراوية الديمقراطية",
        "en": "Western Sahara"
      },
      "langs": [],
      "zones": [
        "Africa/El_Aaiun"
      ],
      "dayoff": "",
      "days": {
        "02-27": {
          "_name": "Independence Day"
        },
        "03-08": {
          "name": {
            "en": "First Martyr"
          }
        },
        "05-10": {
          "name": {
            "en": "May 20 Revolution"
          }
        },
        "06-09": {
          "name": {
            "en": "Day of the Martyrs"
          }
        },
        "06-17": {
          "name": {
            "en": "Day of National Unity"
          }
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P2D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P2D": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "ER": {
      "names": {
        "en": "Eritrea"
      },
      "langs": [
        "ti",
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "julian 12-25": {
          "_name": "julian 12-25"
        },
        "julian 01-06": {
          "_name": "01-06"
        },
        "02-10": {
          "name": {
            "ti": "ፈንቅል",
            "en": "Fenkil Day"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "orthodox -2": {
          "_name": "orthodox -2"
        },
        "orthodox": {
          "_name": "orthodox"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-24": {
          "_name": "Independence Day"
        },
        "06-20": {
          "name": {
            "en": "Martyrs' Day",
            "ti": "መዓልቲ ስውኣት"
          }
        },
        "09-01": {
          "_name": "Revolution Day"
        },
        "09-11 in non-leap years": {
          "name": {
            "en": "Geez New Year",
            "ti": "ግዕዝ አዲስ ዓመት"
          }
        },
        "09-12 in leap years": {
          "name": {
            "en": "Geez New Year",
            "ti": "ግዕዝ አዲስ ዓመት"
          }
        },
        "09-27 in non-leap years": {
          "name": {
            "en": "Meskel"
          }
        },
        "09-28 in leap years": {
          "name": {
            "en": "Meskel"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "ES": {
      "names": {
        "es": "España",
        "ca": "Espanya",
        "en": "Spain"
      },
      "langs": [
        "es"
      ],
      "zones": [
        "Europe/Madrid",
        "Africa/Ceuta",
        "Atlantic/Canary"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "type": "observance",
          "substitute": true,
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "substitutes 01-06 if sunday then next monday": {
          "type": "observance",
          "substitute": true,
          "_name": "01-06"
        },
        "03-19": {
          "_name": "03-19",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "1st sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "07-25": {
          "name": {
            "es": "Santiago Apostol"
          },
          "type": "observance",
          "note": "regional"
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-12": {
          "name": {
            "es": "Fiesta Nacional de España"
          }
        },
        "substitutes 10-12 if sunday then next monday": {
          "substitute": true,
          "type": "observance",
          "name": {
            "es": "Fiesta Nacional de España"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "substitutes 11-01 if sunday then next monday": {
          "substitute": true,
          "type": "observance",
          "_name": "11-01"
        },
        "12-06": {
          "name": {
            "es": "Día de la Constitución Española"
          }
        },
        "substitutes 12-06 if sunday then next monday": {
          "type": "observance",
          "substitute": true,
          "name": {
            "es": "Día de la Constitución Española"
          }
        },
        "12-08": {
          "_name": "12-08"
        },
        "substitutes 12-08 if sunday then next monday": {
          "type": "observance",
          "substitute": true,
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        }
      },
      "states": {
        "AN": {
          "name": "Andalucía",
          "days": {
            "02-28": {
              "name": {
                "es": "Día de Andalucía"
              }
            },
            "substitutes 02-28 if Sunday then next Monday": {
              "substitute": true,
              "name": {
                "es": "Día de Andalucía"
              }
            },
            "substitutes 05-01 if Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            },
            "substitutes 08-15 if Sunday then next Monday": {
              "substitute": true,
              "_name": "08-15"
            },
            "easter -3": {
              "_name": "easter -3"
            }
          }
        },
        "AR": {
          "name": "Aragón",
          "days": {
            "04-23": {
              "name": {
                "es": "Día de Aragón"
              }
            },
            "substitutes 04-23 if Sunday then next Monday": {
              "substitute": true,
              "name": {
                "es": "Día de Aragón"
              }
            },
            "substitutes 05-01 if Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            },
            "substitutes 08-15 if Sunday then next Monday": {
              "substitute": true,
              "_name": "08-15"
            }
          }
        },
        "AS": {
          "name": "Asturias",
          "days": {
            "substitutes 05-01 if Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            },
            "substitutes 08-15 if Sunday then next Monday": {
              "substitute": true,
              "_name": "08-15"
            },
            "09-08": {
              "name": "Día de Asturias"
            },
            "substitutes 09-08 if Sunday then next Monday": {
              "substitute": true,
              "name": "Día de Asturias"
            }
          }
        },
        "CB": {
          "name": "Cantabria",
          "days": {
            "06-28": {
              "name": "Día de las Instituciones de Cantabria"
            },
            "substitutes 06-28 if Sunday then next Monday": {
              "name": "Día de las Instituciones de Cantabria"
            },
            "09-15": {
              "name": "La Bien Aparecida"
            },
            "substitutes 09-15 if Sunday then next Monday": {
              "name": "La Bien Aparecida"
            }
          }
        },
        "CE": {
          "name": "Ciudad de Ceuta",
          "days": {
            "08-05": {
              "name": "Nuestra Señora de África"
            },
            "substitutes 08-05 if Sunday then next Monday": {
              "substitute": true,
              "name": "Nuestra Señora de África"
            },
            "09-02": {
              "name": "Día de Ceuta"
            },
            "substitutes 09-02 if Sunday then next Monday": {
              "substitute": true,
              "name": "Día de Ceuta"
            },
            "9 Dhu al-Hijjah": {
              "_name": "9 Dhu al-Hijjah"
            }
          }
        },
        "CL": {
          "names": {
            "es": "Castilla y León",
            "en": "Castile and León"
          },
          "days": {
            "04-23": {
              "name": "Fiesta de Castilla y León"
            },
            "substitutes 04-23 if Sunday then next Monday": {
              "substitute": true,
              "name": "Fiesta de Castilla y León"
            },
            "substitutes 05-01 if Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            },
            "substitutes 08-15 if Sunday then next Monday": {
              "substitute": true,
              "_name": "08-15"
            }
          }
        },
        "CM": {
          "name": "Castile-La Mancha",
          "days": {
            "05-31 since 2020": {
              "name": "Día de Castilla-La Mancha"
            },
            "substitutes 05-31 if Sunday then next Monday since 2020": {
              "substitute": true,
              "name": "Día de Castilla-La Mancha"
            },
            "easter 60": {
              "_name": "easter 60"
            }
          }
        },
        "CN": {
          "names": {
            "es": "Islas Canarias",
            "en": "Canary Islands"
          },
          "zones": [
            "Atlantic/Canary"
          ],
          "dayoff": "sunday",
          "_days": "IC",
          "regions": {
            "EH": {
              "names": {
                "es": "El Hierro"
              },
              "_days": [
                "IC",
                "regions",
                "EH"
              ]
            },
            "FU": {
              "names": {
                "es": "Fuerteventura"
              },
              "_days": [
                "IC",
                "regions",
                "FU"
              ]
            },
            "GC": {
              "names": {
                "es": "Gran Canaria"
              },
              "_days": [
                "IC",
                "regions",
                "GC"
              ]
            },
            "LG": {
              "names": {
                "es": "La Gomera"
              },
              "_days": [
                "IC",
                "regions",
                "LG"
              ]
            },
            "LP": {
              "names": {
                "es": "La Palma"
              },
              "_days": [
                "IC",
                "regions",
                "LP"
              ]
            },
            "LA": {
              "names": {
                "es": "Lanzarote"
              },
              "_days": [
                "IC",
                "regions",
                "LA"
              ]
            },
            "TE": {
              "names": {
                "es": "Tenerife"
              },
              "_days": [
                "IC",
                "regions",
                "TE"
              ]
            }
          }
        },
        "CT": {
          "names": {
            "ca": "Catalunya",
            "es": "Cataluña",
            "en": "Catalonia"
          },
          "days": {
            "09-11": {
              "name": {
                "ca": "Diada de Catalunya",
                "es": "Dia de Cataluña"
              }
            },
            "06-24": {
              "name": {
                "ca": "Sant Joan",
                "es": "San Juan"
              }
            },
            "easter -3": {
              "_name": "easter -3",
              "type": "observance"
            },
            "easter 1": {
              "_name": "easter 1"
            },
            "easter 50": {
              "_name": "easter 50"
            },
            "substitutes 05-01 if Saturday, Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            },
            "09-24 if sunday then next monday": {
              "name": {
                "es": "Mare de Déu de la Mercè"
              }
            },
            "12-26": {
              "name": {
                "ca": "Sant Esteve",
                "es": "San Esteban"
              },
              "type": "observance"
            }
          }
        },
        "EX": {
          "name": "Extremadura",
          "days": {
            "substitutes 05-01 if Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            },
            "09-08": {
              "name": "Día de Extremadura"
            },
            "substitutes 09-08 if Sunday then next Monday": {
              "substitute": true,
              "name": "Día de Extremadura"
            }
          }
        },
        "GA": {
          "name": "Galicia",
          "days": {
            "05-17": {
              "name": "Día de las Letras Gallegas"
            },
            "substitutes 05-17 if Sunday then next Monday": {
              "substitute": true,
              "name": "Día de las Letras Gallegas"
            },
            "07-25": {
              "name": "Día Nacional de Galicia"
            },
            "substitutes 07-25 if Sunday then next Monday": {
              "substitute": true,
              "name": "Día Nacional de Galicia"
            }
          }
        },
        "IB": {
          "names": {
            "es": "Illes Balears",
            "en": "Balearic Islands"
          },
          "days": {
            "03-01": {
              "name": {
                "es": "Día de les Illes Balears"
              }
            },
            "substitutes 03-01 if Sunday then next Monday": {
              "substitute": true,
              "name": {
                "es": "Día de les Illes Balears"
              }
            },
            "easter 1": {
              "_name": "easter 1"
            },
            "12-26": {
              "name": {
                "es": "Sant Esteve"
              },
              "type": "observance"
            }
          }
        },
        "MC": {
          "name": "Murcia Region",
          "days": {
            "substitutes 05-01 if Sunday then next Monday": {
              "substitute": true,
              "_name": "05-01"
            }
          }
        },
        "MD": {
          "name": "Comunidad de Madrid",
          "days": {
            "05-02 if Sunday then next Monday": {
              "name": {
                "es": "Día de la Comunidad de Madrid"
              }
            },
            "substitutes 05-02 if Sunday then next Monday": {
              "substitute": true,
              "name": {
                "es": "Día de la Comunidad de Madrid"
              }
            },
            "05-16": {
              "name": {
                "es": "San Isidro Labrador"
              },
              "type": "observance"
            },
            "07-25": {
              "name": "Santiago Apóstol"
            },
            "substitutes 07-25 if Sunday then next Monday": {
              "substitute": true,
              "name": "Santiago Apóstol"
            },
            "11-09 if sunday then next monday": {
              "name": {
                "es": "Nuestra Señora de la Almudena"
              },
              "type": "observance"
            }
          }
        },
        "ML": {
          "name": "Ciudad de Melilla",
          "days": {
            "1 Shawwal": {
              "_name": "1 Shawwal"
            },
            "10 Dhu al-Hijjah": {
              "_name": "10 Dhu al-Hijjah"
            }
          }
        },
        "NC": {
          "names": {
            "es": "Comunidad Foral de Navarra",
            "en": "Navarra Chartered Community"
          },
          "days": {
            "easter 1": {
              "_name": "easter 1"
            },
            "07-25": {
              "name": "Santiago Apóstol"
            },
            "substitutes 07-25 if Sunday then next Monday": {
              "substitute": true,
              "name": "Santiago Apóstol"
            }
          }
        },
        "PV": {
          "names": {
            "es": "País Vasco",
            "en": "Basque Country"
          },
          "days": {
            "easter 1": {
              "_name": "easter 1"
            },
            "07-25": {
              "name": "Santiago Apóstol"
            },
            "substitutes 07-25 if Sunday then next Monday": {
              "substitute": true,
              "name": "Santiago Apóstol"
            },
            "2022-09-06": {
              "name": "V Centenario Vuelta al Mundo"
            }
          }
        },
        "RI": {
          "name": "La Rioja",
          "days": {
            "easter 1": {
              "_name": "easter 1"
            }
          }
        },
        "VC": {
          "names": {
            "es": "Comunitat Valenciana",
            "en": "Valencian Community"
          },
          "days": {
            "03-19": {
              "_name": "03-19"
            },
            "easter 1": {
              "_name": "easter 1"
            }
          }
        }
      }
    },
    "ET": {
      "names": {
        "am": "ኢትዮጵያ",
        "en": "Ethiopia"
      },
      "dayoff": "sunday",
      "langs": [
        "am",
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "days": {
        "01-06 in non-leap years": {
          "_name": "12-25"
        },
        "01-07 in leap years": {
          "_name": "12-25"
        },
        "01-19": {
          "_name": "01-06"
        },
        "03-02": {
          "name": {
            "am": "የዓድዋ ድል በዓል",
            "en": "Victory at Adwa Day"
          }
        },
        "03-28": {
          "name": {
            "am": "የቀይ ሽብር መታሰቢያ ቀን",
            "en": "Day of Lament"
          }
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox": {
          "_name": "easter"
        },
        "05-28": {
          "name": {
            "am": "ደርግ የወደቀበት ቀን",
            "en": "Derg Downfall Day"
          }
        },
        "09-11 in non-leap years": {
          "_name": "01-01"
        },
        "09-12 in leap years": {
          "_name": "01-01"
        },
        "09-27 in non-leap years": {
          "name": {
            "am": "ብርሐነ-መስቀል",
            "en": "Finding of the True Cross"
          }
        },
        "09-28 in leap years": {
          "name": {
            "am": "ብርሐነ-መስቀል",
            "en": "Finding of the True Cross"
          }
        },
        "1 Ramadan": {
          "_name": "1 Ramadan"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "FI": {
      "names": {
        "fi": "Suomi",
        "en": "Finland"
      },
      "dayoff": "sunday",
      "langs": [
        "fi"
      ],
      "zones": [
        "Europe/Helsinki"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "friday after 06-19": {
          "name": {
            "fi": "Juhannusaatto",
            "en": "Midsummer Eve",
            "sv": "Midsommarafton"
          },
          "type": "bank"
        },
        "saturday after 06-20": {
          "name": {
            "fi": "Juhannuspäivä",
            "en": "Midsummer Day",
            "sv": "Midsommardagen"
          }
        },
        "saturday after 10-31": {
          "_name": "11-01"
        },
        "2nd sunday in November": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "12-06": {
          "_name": "Independence Day"
        },
        "12-24": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "FJ": {
      "names": {
        "fj": "Matanitu Tugalala o Viti",
        "en": "Fiji"
      },
      "langs": [
        "fj",
        "en"
      ],
      "zones": [
        "Pacific/Fiji"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "09-07": {
          "_name": "Constitution Day"
        },
        "10-10 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Fiji Day"
          }
        },
        "12-25 if Sunday then next Monday": {
          "_name": "12-25"
        },
        "12-26 if Sunday then next Monday if Monday then next Tuesday": {
          "_name": "12-26"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "2014-10-22": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2015-11-10": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2016-10-29": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2017-10-19": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2018-11-07": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2019-10-27": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2019-10-28": {
          "substitute": true,
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2020-11-14": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2020-11-16": {
          "substitute": true,
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2021-11-04": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2022-10-24": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2023-11-12": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2023-11-13": {
          "substitute": true,
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2024-11-01": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        },
        "2025-10-21": {
          "_name": "Deepavali",
          "name": {
            "en": "Diwali"
          }
        }
      }
    },
    "FO": {
      "names": {
        "fo": "Føroyar",
        "da": "Færøerne",
        "en": "Faroe Islands"
      },
      "langs": [
        "fo",
        "da"
      ],
      "zones": [
        "Atlantic/Faroe"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-24": {
          "name": {
            "fo": "Flaggdagur",
            "da": "Flagdag",
            "en": "Flag Day"
          }
        },
        "easter 26": {
          "name": {
            "fo": "Dýri biðidagur",
            "en": "Great Prayer Day"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "06-05 12:00 if sunday then 00:00": {
          "_name": "Constitution Day"
        },
        "07-28 12:00 if sunday then 00:00": {
          "name": {
            "da": "Sankt Olavsaften",
            "en": "St.Olav's Eve"
          },
          "note": "half-day holiday for some workers' unions",
          "type": "observance"
        },
        "07-29": {
          "name": {
            "fo": "Ólavsøka",
            "da": "Sankt Olavs Dag",
            "en": "St.Olav's Day"
          },
          "note": "full holiday for most workers' unions",
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 12:00 if sunday then 00:00": {
          "_name": "12-31"
        }
      }
    },
    "FR": {
      "names": {
        "fr": "France",
        "en": "France"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Paris"
      ],
      "langs": [
        "fr"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-08": {
          "name": {
            "fr": "Fête de la Victoire 1945",
            "en": "Victory Day"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "sunday before 06-01": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "07-14": {
          "name": {
            "fr": "Fête Nationale de la France",
            "en": "Bastille Day"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-11": {
          "name": {
            "fr": "Armistice 1918",
            "en": "Armistice Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      },
      "states": {
        "57": {
          "name": "Département Moselle",
          "days": {
            "easter -2": {
              "_name": "easter -2"
            },
            "12-26": {
              "_name": "12-26"
            }
          }
        },
        "67": {
          "name": "Département Bas-Rhin",
          "days": {
            "easter -2": {
              "_name": "easter -2"
            },
            "12-26": {
              "_name": "12-26"
            }
          }
        },
        "68": {
          "name": "Département Haut-Rhin",
          "days": {
            "easter -2": {
              "_name": "easter -2"
            },
            "12-26": {
              "_name": "12-26"
            }
          }
        },
        "YT": {
          "name": "Département et région d'outre-mer Mayotte",
          "zones": [
            "Africa/Nairobi"
          ],
          "_days": "YT"
        },
        "MQ": {
          "name": "Département et région d'outre-mer Martinique",
          "zones": [
            "America/Martinique"
          ],
          "_days": "MQ"
        },
        "GP": {
          "name": "Département et région d'outre-mer Guadeloupe",
          "zones": [
            "America/Port_of_Spain"
          ],
          "_days": "GP"
        },
        "GF": {
          "name": "Département et région d'outre-mer Guyane",
          "zones": [
            "America/Cayenne"
          ],
          "_days": "GF"
        },
        "RE": {
          "name": "Département et région d'outre-mer La Réunion",
          "zones": [
            "Indian/Reunion"
          ],
          "_days": "RE"
        },
        "MF": {
          "name": "Département et région d'outre-mer Saint Martin",
          "zones": [
            "America/Marigot"
          ],
          "_days": "MF"
        },
        "BL": {
          "name": "Département et région d'outre-mer Saint Barthélemy",
          "zones": [
            "America/St_Barthelemy"
          ],
          "_days": "BL"
        }
      }
    },
    "GA": {
      "names": {
        "fr": "Gabon",
        "en": "Gabon"
      },
      "dayoff": "sunday",
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-17": {
          "name": {
            "fr": "Journée des droits de la femme",
            "en": "Women's Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "08-15": {
          "_name": "08-15"
        },
        "08-16 P2D": {
          "_name": "Independence Day"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "GB": {
      "names": {
        "en": "United Kingdom"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/London"
      ],
      "langs": [
        "en"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "substitutes 01-01 if saturday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "easter -21": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1st monday in May": {
          "name": {
            "en": "Early May bank holiday"
          },
          "disable": [
            "2020-05-04"
          ]
        },
        "1st monday before 06-01": {
          "name": {
            "en": "Spring bank holiday"
          },
          "disable": [
            "2022-05-30"
          ],
          "enable": [
            "2022-06-02"
          ]
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "substitutes 12-26 if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-26"
        },
        "2012-06-05": {
          "name": {
            "en": "Queen’s Diamond Jubilee"
          }
        },
        "2020-05-08": {
          "name": {
            "en": "Early May bank holiday (VE day)"
          }
        },
        "2022-06-03": {
          "name": {
            "en": "Queen’s Platinum Jubilee"
          }
        },
        "2022-09-19": {
          "name": {
            "en": "Queen Elizabeth's Funeral Day"
          }
        },
        "2023-05-08": {
          "name": {
            "en": "King Charles III's Coronation"
          }
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        }
      },
      "states": {
        "ALD": {
          "name": "Alderney",
          "zones": [
            "Europe/Guernsey"
          ],
          "days": {
            "12-15": {
              "name": {
                "en": "Homecoming Day"
              }
            }
          }
        },
        "ENG": {
          "name": "England",
          "days": {
            "1st monday before 09-01": {
              "name": {
                "en": "Summer bank holiday"
              }
            }
          }
        },
        "NIR": {
          "name": "Northern Ireland",
          "zones": [
            "Europe/Belfast"
          ],
          "days": {
            "03-17": {
              "name": {
                "en": "St Patrick's Day"
              }
            },
            "substitutes 03-17 if saturday then next monday": {
              "substitute": true,
              "name": {
                "en": "St Patrick's Day"
              }
            },
            "substitutes 03-17 if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "St Patrick's Day"
              }
            },
            "07-12": {
              "name": {
                "en": "Battle of the Boyne, Orangemen’s Day"
              }
            },
            "substitutes 07-12 if saturday then next monday": {
              "substitute": true,
              "name": {
                "en": "Battle of the Boyne"
              }
            },
            "substitutes 07-12 if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Battle of the Boyne"
              }
            },
            "1st monday before 09-01": {
              "name": {
                "en": "Summer bank holiday"
              }
            }
          }
        },
        "SCT": {
          "name": "Scotland",
          "days": {
            "substitutes 01-01 if sunday then next monday": false,
            "substitutes 01-01 if saturday then next monday": false,
            "substitutes 01-01 if saturday then next tuesday": {
              "substitute": true,
              "_name": "01-01"
            },
            "substitutes 01-01 if sunday then next tuesday": {
              "substitute": true,
              "_name": "01-01"
            },
            "01-02": {
              "name": {
                "en": "January 2nd"
              }
            },
            "substitutes 01-02 if saturday then next monday": {
              "substitute": true,
              "name": {
                "en": "January 2nd"
              }
            },
            "substitutes 01-02 if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "January 2nd"
              }
            },
            "easter 1": {
              "_name": "easter 1"
            },
            "1st monday in August": {
              "name": {
                "en": "Summer bank holiday"
              }
            },
            "11-30": {
              "name": {
                "en": "St Andrew’s Day"
              }
            },
            "substitutes 11-30 if saturday, sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "St Andrew’s Day"
              }
            }
          }
        },
        "WLS": {
          "name": "Wales",
          "days": {
            "1st monday before 09-01": {
              "name": {
                "en": "Summer bank holiday"
              }
            }
          },
          "regions": {}
        }
      }
    },
    "GD": {
      "names": {
        "en": "Grenada"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-07": {
          "_name": "Independence Day"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-24 P3D": {
          "name": {
            "en": "Carriacou Maroon and String Band Music Festival"
          },
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "1st monday in August": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "2nd monday in August": {
          "name": {
            "en": "Carnival Monday"
          }
        },
        "tuesday after 2nd monday in August": {
          "name": {
            "en": "Carnival Tuesday"
          }
        },
        "09-01": {
          "name": {
            "en": "Kirani Day"
          },
          "type": "observance"
        },
        "10-15 P5D": {
          "name": {
            "en": "Aunty Tek Spice Word Festival"
          },
          "type": "observance"
        },
        "10-25": {
          "name": {
            "en": "Thanksgiving Day"
          }
        },
        "12-04 P3D": {
          "name": {
            "en": "Camerhogne Folk Festival"
          },
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "GE": {
      "names": {
        "ge": "საქართველო",
        "en": "Georgia"
      },
      "langs": [
        "ge"
      ],
      "zones": [
        "Asia/Tbilisi"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02": {
          "name": {
            "ge": "ბედობა",
            "en": "Bedoba"
          }
        },
        "01-07": {
          "name": {
            "ge": "შობა",
            "en": "Orthodox Christmas"
          }
        },
        "01-19": {
          "name": {
            "ge": "ნათლისღება",
            "en": "Orthodox Epiphany"
          }
        },
        "03-03": {
          "name": {
            "ge": "დედის დღე",
            "en": "Mother's Day"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "04-09": {
          "name": {
            "ge": "ეროვნული ერთიანობის დღე",
            "en": "National Unity Day"
          }
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox -1": {
          "_name": "easter -1"
        },
        "orthodox": {
          "_name": "easter"
        },
        "orthodox 1": {
          "_name": "easter 1"
        },
        "05-09": {
          "name": {
            "ge": "ფაშიზმზე გამარჯვების დღე",
            "en": "Victory Day"
          }
        },
        "05-12": {
          "name": {
            "ge": "წმინდა ანდრია პირველწოდებულის ხსენების დღე",
            "en": "Saint Andrew the First-Called Day"
          }
        },
        "05-26": {
          "name": {
            "ge": "დამოუკიდებლობის დღე",
            "en": "Independence Day"
          }
        },
        "08-28": {
          "name": {
            "ge": "მარიამობა",
            "en": "Saint Mary's Day"
          }
        },
        "10-14": {
          "name": {
            "ge": "სვეტიცხოვლობა",
            "en": "Svetitskhovloba"
          }
        },
        "11-23": {
          "name": {
            "ge": "გიორგობა",
            "en": "Saint George's Day"
          }
        }
      }
    },
    "GF": {
      "names": {
        "fr": "Guyane",
        "en": "French Guiana"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "America/Cayenne"
      ],
      "dayoff": "sunday",
      "_days": "FR",
      "days": {
        "06-10": {
          "_name": "Abolition of Slavery"
        }
      }
    },
    "GG": {
      "names": {
        "en": "Guernsey"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Guernsey"
      ],
      "langs": [
        "en"
      ],
      "_days": [
        "GB"
      ],
      "days": {
        "05-09": {
          "name": {
            "en": "Liberation Day"
          }
        }
      }
    },
    "GH": {
      "names": {
        "en": "Ghana"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Accra"
      ],
      "dayoff": "",
      "days": {
        "01-01 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-07 since 2019": {
          "_name": "Constitution Day"
        },
        "03-06 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "08-04 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Founders Day"
          }
        },
        "09-21 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Kwame Nkrumah Memorial Day"
          }
        },
        "1st Friday in December since 1988": {
          "name": {
            "en": "Farmers Day"
          }
        },
        "12-25 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-26"
        },
        "1 Shawwal and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "GI": {
      "names": {
        "en": "Gibraltar"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Europe/Gibraltar"
      ],
      "dayoff": "sunday",
      "_days": "GB",
      "days": {
        "2nd monday in March": {
          "name": {
            "en": "Commonwealth Day"
          }
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "04-28": {
          "name": {
            "en": "Workers Memorial Day"
          },
          "disable": [
            "2015-04-28"
          ],
          "enable": [
            "2015-04-27"
          ]
        },
        "05-01 if sunday, saturday then next monday": {
          "substitute": true,
          "name": {
            "en": "May Day"
          }
        },
        "1st monday in May": false,
        "2020-05-08": {
          "name": {
            "en": "Victory in Europe Day (VE Day)"
          }
        },
        "monday before 06-20": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "monday before September": {
          "name": {
            "en": "Late Summer Bank Holiday"
          }
        },
        "09-10": {
          "name": {
            "en": "Gibraltar National Day"
          },
          "active": [
            {
              "to": 2015
            }
          ]
        },
        "09-10 and if sunday, saturday then previous monday": {
          "substitute": true,
          "name": {
            "en": "Gibraltar National Day"
          },
          "active": [
            {
              "from": 2015
            }
          ]
        }
      }
    },
    "GL": {
      "names": {
        "kl": "Kalaallit Nunaat",
        "da": "Grønland",
        "en": "Greenland"
      },
      "langs": [
        "kl",
        "da"
      ],
      "zones": [
        "America/Godthab",
        "America/Danmarkshavn",
        "America/Scoresbysund",
        "America/Thule"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 26": {
          "name": {
            "kl": "tussiarfissuaq",
            "da": "Store Bededag",
            "en": "Prayer Day"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "06-21": {
          "name": {
            "kl": "ullortuneq",
            "da": "Nationaldag",
            "en": "National Day"
          }
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "GM": {
      "names": {
        "en": "The Gambia"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-18": {
          "_name": "Independence Day"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-25": {
          "name": {
            "en": "Africa Day"
          }
        },
        "07-22": {
          "name": {
            "en": "Revolution Day"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "12-25": {
          "_name": "12-25"
        },
        "10 Muharram": {
          "_name": "10 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "23 Ramadan": {
          "_name": "23 Ramadan"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "name": {
            "en": "Korité"
          }
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "en": "Tabaski"
          }
        }
      }
    },
    "GN": {
      "names": {
        "fr": "Guinée",
        "en": "Guinea"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-03": {
          "name": {
            "fr": "Fête Nationale de la deuxième République",
            "en": "National Holiday"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-25": {
          "name": {
            "fr": "Anniversaire de l'Organisation de l'unité africaine (OUA)",
            "en": "Africa Day"
          }
        },
        "27 Ramadan": {
          "_name": "27 Ramadan"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-02": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        }
      }
    },
    "GP": {
      "names": {
        "fr": "Guadeloupe",
        "en": "Guadeloupe"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "_days": "FR",
      "days": {
        "easter 49": false,
        "easter -2": {
          "_name": "easter -2"
        },
        "05-27": {
          "_name": "Abolition of Slavery"
        },
        "07-21": {
          "name": {
            "fr": "Jour de Victor Shoelcher",
            "en": "Victor Shoelcher Day"
          }
        }
      }
    },
    "GQ": {
      "names": {
        "es": "República de Guinea Ecuatorial",
        "fr": "République de Guinée équatoriale",
        "pt": "República da Guiné Equatorial",
        "en": "Republic of Equatorial Guinea"
      },
      "dayoff": "sunday",
      "weekend": [
        "saturday",
        "sunday"
      ],
      "langs": [
        "es",
        "fr",
        "pt"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "06-05 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "es": "Natalicio de Teodoro Obiang",
            "en": "President's Day"
          }
        },
        "08-03 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "es": "Día del Golpe de Libertad",
            "en": "Armed Forces Day"
          }
        },
        "08-15 and if sunday then next monday": {
          "substitute": true,
          "_name": "Constitution Day"
        },
        "10-12 and if sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "12-08 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-08"
        },
        "12-25 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        }
      }
    },
    "GR": {
      "names": {
        "el": "Ελλάδα",
        "en": "Greece"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Athens"
      ],
      "langs": [
        "el"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "orthodox -48": {
          "name": {
            "el": "Καθαρά Δευτέρα",
            "en": "Ash Sunday"
          }
        },
        "03-25": {
          "name": {
            "el": "Ευαγγελισμός, Εθνική Εορτή",
            "en": "Annunciation, Anniversary of 1821 Revolution"
          }
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox": {
          "_name": "easter"
        },
        "orthodox 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "orthodox 49": {
          "_name": "easter 49"
        },
        "orthodox 50": {
          "_name": "easter 50"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-28": {
          "_name": "National Holiday",
          "name": {
            "el": "Επέτειος του Όχι"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "GT": {
      "names": {
        "es": "Guatemala",
        "en": "Guatemala"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Guatemala"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-30 if tuesday then previous monday if wednesday,thursday then next friday": {
          "name": {
            "es": "Día de las Fuerzas Armadas",
            "en": "Army Day"
          }
        },
        "09-15": {
          "_name": "Independence Day"
        },
        "10-20": {
          "_name": "Revolution Day"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-24 12:00": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31 12:00": {
          "_name": "12-31"
        }
      }
    },
    "GU": {
      "names": {
        "en": "Guam"
      },
      "dayoff": "sunday",
      "langs": [
        "en-us",
        "en"
      ],
      "zones": [
        "Pacific/Guam"
      ],
      "_days": [
        "US"
      ],
      "days": {
        "3rd monday in February": false,
        "03-17": false,
        "1st monday in March": {
          "name": {
            "en": "Guam History and Chamorro Heritage Day"
          }
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "observance"
        },
        "07-21 if sunday then next monday": {
          "name": {
            "en": "Liberation Day"
          }
        },
        "11-02": {
          "_name": "11-02"
        },
        "12-08 if sunday then next monday": {
          "name": {
            "en": "Our Lady of Camarin Day"
          }
        }
      }
    },
    "GW": {
      "names": {
        "pt": "Guiné-Bissau",
        "en": "Guinea-Bissau"
      },
      "langs": [
        "pt"
      ],
      "zones": [
        "Africa/Bissau"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-20": {
          "name": {
            "pt": "Dia dos heróis",
            "en": "Heroes Day"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "05-01": {
          "_name": "05-01"
        },
        "08-03": {
          "name": {
            "pt": "Pidjiguiti Day"
          }
        },
        "09-24": {
          "_name": "Independence Day"
        },
        "11-14": {
          "name": {
            "pt": "Dia do Movimento de Reajustamento",
            "en": "Readjustment Movement Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "GY": {
      "names": {
        "en": "Guyana"
      },
      "coord": {
        "lat": 6.8045,
        "lng": -58.1553
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "America/Guyana"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-23": {
          "name": {
            "en": "Republic Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-05": {
          "name": {
            "en": "Arrival Day"
          }
        },
        "05-26": {
          "_name": "Independence Day"
        },
        "monday after 07-01": {
          "name": {
            "en": "CARICOM Day"
          }
        },
        "08-01": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal",
          "name": {
            "en": "Youman Nabi"
          },
          "note": "tentative",
          "disable": [
            "2016-12-11",
            "2015-12-23",
            "2013-01-24"
          ],
          "enable": [
            "2016-12-12",
            "2015-12-24",
            "2013-01-23"
          ]
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "en": "Eid Ul Adha"
          },
          "note": "tentative",
          "disable": [
            "2015-09-23"
          ],
          "enable": [
            "2015-09-24"
          ]
        },
        "2015-03-05": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2016-03-23": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2017-03-12": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2017-03-13": {
          "substitute": true,
          "name": {
            "en": "Phagwah"
          }
        },
        "2018-03-02": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2019-03-21": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2020-03-10": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2021-03-29": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2022-03-18": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2023-03-07": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2024-03-25": {
          "name": {
            "en": "Phagwah"
          }
        },
        "2015-11-11": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2017-10-18": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2018-11-07": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2019-10-27": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2019-10-28": {
          "substitute": true,
          "name": {
            "en": "Deepavali"
          }
        },
        "2020-11-14": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2021-11-04": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2022-10-24": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2023-11-12": {
          "name": {
            "en": "Deepavali"
          }
        },
        "2023-11-13": {
          "substitute": true,
          "name": {
            "en": "Deepavali"
          }
        },
        "2024-10-31": {
          "name": {
            "en": "Deepavali"
          }
        }
      }
    },
    "HK": {
      "names": {
        "zh": "香港",
        "en": "Hong Kong"
      },
      "langs": [
        "zh",
        "en"
      ],
      "zones": [
        "Asia/Hong_Kong"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01",
          "name": {
            "zh": "一月一日"
          }
        },
        "chinese 01-0-01 and if Saturday then next Tuesday": {
          "name": {
            "en": "Lunar New Year",
            "zh": "農曆年初一"
          }
        },
        "chinese 01-0-02 and if Saturday then next Monday": {
          "name": {
            "en": "The second day of the Lunar New Year",
            "zh": "農曆年初二"
          }
        },
        "chinese 01-0-03 and if Saturday then next Monday": {
          "name": {
            "en": "The third day of the Lunar New Year",
            "zh": "農曆年初三"
          }
        },
        "chinese 5-01 solarterm and if Sunday then next Monday": {
          "name": {
            "en": "Qingming Festival",
            "zh": "清明節"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1",
          "disable": [
            "2021-04-05"
          ],
          "enable": [
            "2021-04-06"
          ]
        },
        "05-01 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "chinese 04-0-08 and if Sunday then next Monday": {
          "name": {
            "en": "Birthday of the Buddha",
            "zh": "佛誕"
          }
        },
        "chinese 05-0-05": {
          "name": {
            "en": "Dragon Boat Festival",
            "zh": "端午节"
          }
        },
        "07-01 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Hong Kong Special Administrative Region Establishment Day",
            "zh": "香港特別行政區成立紀念日"
          }
        },
        "chinese 08-0-16 and if Sunday then next Monday if is public holiday then next day omit Saturday, Sunday": {
          "substitute": true,
          "name": {
            "en": "The day following the Chinese Mid-Autumn Festival",
            "zh": "中秋節翌日"
          }
        },
        "10-01 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "National Day",
            "zh": "國慶日"
          }
        },
        "chinese 09-0-09 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Chung Yeung Festival",
            "zh": "重阳节"
          }
        },
        "12-25 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Sunday then next Monday if Monday then next Tuesday": {
          "substitute": true,
          "name": {
            "en": "The first weekday after Christmas Day",
            "zh": "圣诞节后的第一个工作日"
          }
        }
      }
    },
    "HN": {
      "names": {
        "es": "Honduras",
        "en": "Honduras"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Tegucigalpa"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-19": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "04-14": {
          "name": {
            "es": "Día de las Américas"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd monday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-11": {
          "name": {
            "en": "Pupil's Day",
            "es": "Día del Estudiante"
          },
          "type": "observance"
        },
        "09-10": {
          "name": {
            "en": "Children's Day",
            "es": "Día del Niño"
          },
          "type": "observance"
        },
        "09-15": {
          "_name": "Independence Day"
        },
        "09-17": {
          "name": {
            "en": "Teacher's Day",
            "es": "Día del Maestro"
          },
          "type": "observance"
        },
        "10-03": {
          "name": {
            "en": "Soldier's Day",
            "es": "Día del Soldado"
          }
        },
        "10-12": {
          "name": {
            "es": "Día de la Raza",
            "en": "Columbus Day"
          }
        },
        "10-21": {
          "name": {
            "es": "Día de las Fuerzas Armadas",
            "en": "Armed forces Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "HR": {
      "names": {
        "hr": "Hrvatska",
        "en": "Croatia"
      },
      "langs": [
        "hr"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "days": {
        "01-01": {
          "_name": "01-01",
          "type": "public"
        },
        "01-06": {
          "_name": "01-06",
          "type": "public"
        },
        "easter -47": {
          "_name": "easter -47",
          "type": "observance"
        },
        "easter": {
          "_name": "easter",
          "type": "public"
        },
        "easter 1": {
          "_name": "easter 1",
          "type": "public"
        },
        "easter 60": {
          "_name": "easter 60",
          "type": "public"
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01",
          "type": "public"
        },
        "05-30": {
          "name": {
            "hr": "Dan državnosti",
            "en": "National Day"
          },
          "type": "public",
          "active": [
            {
              "from": "2020-01-01"
            }
          ]
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-22": {
          "name": {
            "hr": "Dan antifašističke borbe",
            "en": "Anti-Fascist Struggle Day"
          },
          "type": "public"
        },
        "06-25 #1": {
          "name": {
            "hr": "Dan državnosti",
            "en": "Statehood Day"
          },
          "type": "public",
          "active": [
            {
              "to": "2020-01-01"
            }
          ]
        },
        "06-25": {
          "name": {
            "hr": "Dan neovisnosti",
            "en": "Independence Day"
          },
          "type": "observance",
          "active": [
            {
              "from": "2020-01-01"
            }
          ]
        },
        "08-05": {
          "name": {
            "hr": "Dan pobjede i domovinske zahvalnosti i Dan hrvatskih branitelja",
            "en": "Victory and Homeland Thanksgiving Day and the Day of Croatian defenders"
          },
          "type": "public"
        },
        "08-15": {
          "_name": "08-15",
          "type": "public"
        },
        "10-08 #1": {
          "name": {
            "hr": "Dan neovisnosti",
            "en": "Independence Day"
          },
          "type": "public",
          "active": [
            {
              "to": "2020-01-01"
            }
          ]
        },
        "10-08": {
          "name": {
            "hr": "Dan Hrvatskoga sabora",
            "en": "Day of the Croatian Parliament"
          },
          "type": "observence",
          "active": [
            {
              "from": "2020-01-01"
            }
          ]
        },
        "11-01": {
          "_name": "11-01",
          "type": "public"
        },
        "11-18 #1": {
          "name": {
            "hr": "Dan sjećanja na žrtvu Vukovara i Škabrnje",
            "en": "Remembrance Day"
          },
          "type": "observance",
          "active": [
            {
              "to": "2020-01-01"
            }
          ]
        },
        "11-18": {
          "name": {
            "hr": "Dan sjećanja na žrtve Domovinskog rata i Dan sjećanja na žrtvu Vukovara i Škabrnje",
            "en": "Remembrance Day"
          },
          "type": "public",
          "active": [
            {
              "from": "2020-01-01"
            }
          ]
        },
        "12-25": {
          "_name": "12-25",
          "type": "public"
        },
        "12-26": {
          "_name": "12-26",
          "type": "public"
        },
        "orthodox": {
          "_name": "orthodox",
          "type": "optional",
          "note": "Orthodox believers (legally defined as Christians who follow the Julian Calender)"
        },
        "orthodox 1": {
          "_name": "orthodox 1",
          "type": "optional",
          "note": "Orthodox believers (legally defined as Christians who follow the Julian Calender)"
        },
        "julian 12-25": {
          "_name": "julian 12-25",
          "type": "optional",
          "note": "Orthodox believers (legally defined as Christians who follow the Julian Calender)"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "type": "optional",
          "note": "Muslim believers"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "type": "optional",
          "note": "Muslim believers"
        },
        "1 Tishrei": {
          "_name": "10 Tishrei",
          "type": "optional",
          "note": "Jewish believers"
        },
        "10 Tishrei": {
          "_name": "10 Tishrei",
          "type": "optional",
          "note": "Jewish believers"
        }
      },
      "regions": {
        "17": {
          "name": "Split-Dalmatia",
          "days": {
            "05-07": {
              "name": {
                "hr": "Sveti Duje",
                "en": "Saint Domnius"
              },
              "type": "optional"
            }
          }
        },
        "19": {
          "name": "Dubrovnik-Neretva",
          "days": {
            "02-03": {
              "name": {
                "hr": "Sveti Vlaho",
                "en": "Saint Blaise"
              },
              "type": "optional"
            }
          }
        }
      }
    },
    "HT": {
      "names": {
        "fr": "Haïti",
        "en": "Haiti"
      },
      "dayoff": "sunday",
      "langs": [
        "fr"
      ],
      "zones": [
        "America/Port-au-Prince"
      ],
      "days": {
        "01-01": {
          "_name": "Independence Day"
        },
        "01-02": {
          "name": {
            "fr": "Jour des Aieux",
            "en": "Ancestry Day"
          }
        },
        "01-06": {
          "_name": "01-06",
          "name": {
            "fr": "Le Jour des Rois"
          },
          "type": "observance"
        },
        "easter -48 14:00": {
          "name": {
            "fr": "Lundi Gras",
            "en": "Lundi Gras"
          }
        },
        "easter -47": {
          "name": {
            "fr": "Mardi Gras",
            "en": "Mardi Gras"
          }
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-18": {
          "name": {
            "fr": "Jour du Drapeau et de l'Université",
            "en": "Flag and Universities' Day"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-17": {
          "name": {
            "fr": "Anniversaire de la mort de Dessalines",
            "en": "Anniversary of the death of Dessalines"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-02": {
          "_name": "11-02"
        },
        "11-18": {
          "name": {
            "fr": "Vertières",
            "en": "Battle of Vertières Day"
          }
        },
        "12-05": {
          "name": {
            "fr": "Découverte d'Haïti",
            "en": "Discovery Day"
          },
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "HU": {
      "names": {
        "hu": "Magyarország",
        "en": "Hungary"
      },
      "dayoff": "sunday",
      "langs": [
        "hu"
      ],
      "zones": [
        "Europe/Budapest"
      ],
      "days": {
        "01-01": {
          "_name": "01-01",
          "type": "public"
        },
        "02-01": {
          "name": {
            "hu": "A köztársaság emléknapja",
            "en": "Memorial Day of the Republic"
          },
          "type": "observance"
        },
        "02-25": {
          "name": {
            "hu": "A kommunista diktatúrák áldozatainak emléknapja",
            "en": "Memorial Day for the Victims of the Communist Dictatorships"
          },
          "type": "observance"
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "03-15": {
          "name": {
            "hu": "1848-as forradalom",
            "en": "National Day"
          },
          "type": "public"
        },
        "04-16": {
          "name": {
            "en": "Memorial Day for the Victims of the Holocaust",
            "hu": "A holokauszt áldozatainak emléknapja"
          },
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "public",
          "active": [
            {
              "from": "2017-01-01"
            }
          ]
        },
        "easter": {
          "_name": "easter",
          "type": "public"
        },
        "easter 1": {
          "_name": "easter 1",
          "type": "public"
        },
        "05-01": {
          "_name": "05-01",
          "type": "public"
        },
        "1st sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "05-21": {
          "name": {
            "en": "National Defense Day",
            "hu": "Honvédelmi nap"
          },
          "type": "observance"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "public"
        },
        "easter 50": {
          "_name": "easter 50",
          "type": "public"
        },
        "06-04": {
          "name": {
            "en": "Day of National Unity",
            "hu": "A nemzeti összetartozás napja"
          },
          "type": "observance"
        },
        "06-19": {
          "name": {
            "en": "Day of the Independent Hungary",
            "hu": "A független Magyarország napja"
          },
          "type": "observance"
        },
        "08-20": {
          "name": {
            "hu": "Szent István ünnepe",
            "en": "Saint Stephen's Day"
          },
          "type": "public"
        },
        "10-06": {
          "name": {
            "en": "Memorial Day for the Martyrs of Arad",
            "hu": "Az aradi vértanúk emléknapja"
          },
          "type": "observance"
        },
        "10-23": {
          "name": {
            "hu": "1956-os forradalom",
            "en": "National Day"
          },
          "type": "public"
        },
        "11-01": {
          "_name": "11-01",
          "type": "public"
        },
        "12-06": {
          "_name": "12-06",
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24",
          "type": "optional"
        },
        "12-25": {
          "_name": "12-25",
          "type": "public"
        },
        "12-26": {
          "_name": "12-26",
          "type": "public"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        },
        "2023-10-30": {
          "name": {
            "hu": "Őszi szünet",
            "en": "Autumn school holiday"
          },
          "type": "school"
        },
        "2023-10-31": {
          "name": {
            "hu": "Őszi szünet",
            "en": "Autumn school holiday"
          },
          "type": "school"
        },
        "2023-11-02": {
          "name": {
            "hu": "Őszi szünet",
            "en": "Autumn school holiday"
          },
          "type": "school"
        },
        "2023-11-03": {
          "name": {
            "hu": "Őszi szünet",
            "en": "Autumn school holiday"
          },
          "type": "school"
        },
        "2023-12-22": {
          "name": {
            "hu": "Téli szünet",
            "en": "Winter school holiday"
          },
          "type": "school"
        },
        "2023-12-27": {
          "name": {
            "hu": "Téli szünet",
            "en": "Winter school holiday"
          },
          "type": "school"
        },
        "2024-01-02": {
          "name": {
            "hu": "Téli szünet",
            "en": "Winter school holiday"
          },
          "type": "school"
        },
        "2024-01-03": {
          "name": {
            "hu": "Téli szünet",
            "en": "Winter school holiday"
          },
          "type": "school"
        },
        "2024-01-04": {
          "name": {
            "hu": "Téli szünet",
            "en": "Winter school holiday"
          },
          "type": "school"
        },
        "2024-01-05": {
          "name": {
            "hu": "Téli szünet",
            "en": "Winter school holiday"
          },
          "type": "school"
        }
      }
    },
    "IC": {
      "names": {
        "es": "Islas Canarias",
        "en": "Canary Islands"
      },
      "langs": [
        "es"
      ],
      "zones": [
        "Atlantic/Canary"
      ],
      "dayoff": "sunday",
      "_days": "ES",
      "days": {
        "05-30": {
          "name": {
            "es": "Día de Canarias",
            "en": "Canary Islands Day"
          }
        },
        "substitutes 05-30 if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "es": "Día de Canarias",
            "en": "Canary Islands Day"
          }
        },
        "substitutes 08-15 if Sunday then next Monday": {
          "substitute": true,
          "_name": "08-15"
        }
      },
      "regions": {
        "EH": {
          "names": {
            "es": "El Hierro"
          },
          "days": {
            "09-24": {
              "name": {
                "es": "Nuestra Señora de los Reyes"
              }
            }
          }
        },
        "FU": {
          "names": {
            "es": "Fuerteventura"
          },
          "days": {
            "09-18": {
              "name": {
                "es": "Nuestra Señora de la Peña"
              }
            }
          }
        },
        "GC": {
          "names": {
            "es": "Gran Canaria"
          },
          "days": {
            "09-08": {
              "name": {
                "es": "Nuestra Señora del Pino"
              }
            }
          }
        },
        "LG": {
          "names": {
            "es": "La Gomera"
          },
          "days": {
            "10-05": {
              "name": {
                "es": "Nuestra Señora de Guadalupe"
              }
            }
          }
        },
        "LP": {
          "names": {
            "es": "La Palma"
          },
          "days": {
            "08-05": {
              "name": {
                "es": "Nuestra Señora de las Nieves"
              }
            }
          }
        },
        "LA": {
          "names": {
            "es": "Lanzarote"
          },
          "days": {
            "09-15": {
              "name": {
                "es": "Nuestra Señora de los Dolores"
              }
            }
          }
        },
        "TE": {
          "names": {
            "es": "Tenerife"
          },
          "days": {
            "09-07": {
              "name": {
                "es": "La Bajada de la Virgen del Socorro"
              }
            }
          }
        }
      }
    },
    "ID": {
      "names": {
        "en": "Indonesia",
        "id": "Indonesia"
      },
      "langs": [
        "id"
      ],
      "zones": [
        "Asia/Jakarta",
        "Asia/Pontianak",
        "Asia/Makassar",
        "Asia/Jayapura"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "chinese 01-0-01": {
          "name": {
            "en": "Chinese New Year",
            "id": "Tahun Baru Imlek"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "06-01": {
          "name": {
            "en": "Pancasila Day",
            "id": "Hari Lahir Pancasila"
          }
        },
        "08-17": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "27 Rajab": {
          "_name": "27 Rajab"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "2 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "2009-03-26": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2010-03-16": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2011-03-05": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2012-03-23": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2013-03-12": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2014-03-31": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2015-03-21": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2016-03-09": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2017-03-28": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2018-03-17": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2019-03-07": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2020-03-25": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2021-03-14": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2022-03-03": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2023-03-22": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2024-03-11": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2025-03-29": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2026-03-19": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2027-03-08": {
          "name": {
            "en": "Nyepi",
            "id": "Hari Raya Nyepi"
          }
        },
        "2001-05-07": {
          "_name": "Vesak"
        },
        "2002-05-26": {
          "_name": "Vesak"
        },
        "2003-05-16": {
          "_name": "Vesak"
        },
        "2004-06-03": {
          "_name": "Vesak"
        },
        "2005-05-24": {
          "_name": "Vesak"
        },
        "2006-05-13": {
          "_name": "Vesak"
        },
        "2007-06-01": {
          "_name": "Vesak"
        },
        "2008-05-20": {
          "_name": "Vesak"
        },
        "2009-05-09": {
          "_name": "Vesak"
        },
        "2010-05-28": {
          "_name": "Vesak"
        },
        "2011-05-17": {
          "_name": "Vesak"
        },
        "2012-05-06": {
          "_name": "Vesak"
        },
        "2013-05-25": {
          "_name": "Vesak"
        },
        "2014-05-15": {
          "_name": "Vesak"
        },
        "2015-06-02": {
          "_name": "Vesak"
        },
        "2016-05-22": {
          "_name": "Vesak"
        },
        "2017-05-11": {
          "_name": "Vesak"
        },
        "2018-05-29": {
          "_name": "Vesak"
        },
        "2019-05-19": {
          "_name": "Vesak"
        },
        "2020-05-07": {
          "_name": "Vesak"
        },
        "2021-05-26": {
          "_name": "Vesak"
        },
        "2022-05-16": {
          "_name": "Vesak"
        },
        "2023-05-06": {
          "_name": "Vesak"
        },
        "2024-05-23": {
          "_name": "Vesak"
        },
        "2025-05-12": {
          "_name": "Vesak"
        },
        "2026-05-31": {
          "_name": "Vesak"
        },
        "2027-05-20": {
          "_name": "Vesak"
        }
      }
    },
    "IE": {
      "names": {
        "en": "Ireland"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Dublin"
      ],
      "langs": [
        "en"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-01 if Tuesday,Wednesday,Thursday,Saturday,Sunday then next Monday since 2023": {
          "name": {
            "en": "St. Brigid’s Day"
          }
        },
        "03-17": {
          "name": {
            "en": "St. Patrick’s Day"
          }
        },
        "03-17 and if saturday then next monday if sunday then next monday": {
          "name": {
            "en": "St. Patrick’s Day"
          },
          "substitute": true,
          "type": "bank"
        },
        "easter -21": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "bank"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1st monday in May": {
          "name": {
            "en": "May Day"
          }
        },
        "1st monday in June": {
          "name": {
            "en": "First Monday in June"
          }
        },
        "1st monday in August": {
          "name": {
            "en": "First Monday in August"
          }
        },
        "1st Monday before 11-01": {
          "name": {
            "en": "October Bank Holiday",
            "type": "bank"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "name": {
            "en": "St. Stephen's Day"
          }
        },
        "12-26 and if saturday then next monday if sunday then next monday": {
          "_name": "12-26",
          "name": {
            "en": "St. Stephen's Day"
          },
          "substitute": true,
          "type": "bank"
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        }
      }
    },
    "IL": {
      "names": {
        "he": "מְדִינַת יִשְׂרָאֵל",
        "en": "Israel"
      },
      "langs": [
        "he"
      ],
      "zones": [
        "Asia/Jerusalem"
      ],
      "dayoff": "Saturday",
      "days": {
        "1 Tishrei": {
          "name": {
            "he": "ראש השנה",
            "en": "Rosh Hashanah (Yom Teruah)"
          }
        },
        "2 Tishrei": {
          "name": {
            "he": "ראש השנה יום 2",
            "en": "Rosh Hashanah (Day 2)"
          }
        },
        "3 Tishrei if Saturday then next Sunday": {
          "name": {
            "he": "צום גדליה",
            "en": "Fast of Gedaliah (Tzom Gedalya)"
          },
          "type": "observance"
        },
        "10 Tishrei": {
          "name": {
            "he": "יום כיפור",
            "en": "Day of Atonement (Yom Kippur)"
          }
        },
        "15 Tishrei": {
          "name": {
            "he": "סוכות",
            "en": "Feast of Tabernacles (Sukkot)"
          }
        },
        "16 Tishrei P6D": {
          "name": {
            "he": "חול המועד סוכות",
            "en": "The week of Sukkot"
          },
          "type": "school",
          "note": "Collective paid leave in many businesses and government offices"
        },
        "22 Tishrei": {
          "name": {
            "he": "שמחת תורה/שמיני עצרת",
            "en": "Simchat Torah/ Shmini Atzeret"
          }
        },
        "12 Cheshvan if Friday,Saturday then previous Thursday since 1997": {
          "name": {
            "he": "יום רבין",
            "en": "Rabin Day"
          },
          "type": "observance",
          "note": "National remembrance day, business as usual"
        },
        "29 Cheshvan": {
          "name": {
            "he": "סיגד",
            "en": "Sigd"
          },
          "type": "observance",
          "note": "Festival of the Ethiopian Jews, optional paid leave, business as usual"
        },
        "6 Kislev if Saturday then next Sunday": {
          "name": {
            "en": "Ben-Gurion Day",
            "he": "יום בן-גוריון"
          },
          "type": "observance",
          "note": "Day marked by the Knesset"
        },
        "25 Kislev P8D": {
          "name": {
            "en": "Hanukkah",
            "he": "חנוכה"
          },
          "type": "school"
        },
        "10 Tevet": {
          "name": {
            "en": "Tenth of Tevet",
            "he": "צום עשרה בטבת"
          },
          "type": "observance"
        },
        "15 Shvat": {
          "name": {
            "en": "Tu Bishvat (Arbor Day)",
            "he": 'ט"ו בשבט'
          },
          "type": "observance"
        },
        "13 AdarII if Saturday then previous Thursday": {
          "name": {
            "en": "Fast of Esther",
            "he": "תענית אסתר"
          },
          "type": "school"
        },
        "14 AdarII P2D": {
          "name": {
            "en": "Purim",
            "he": "פורים"
          },
          "type": "school",
          "note": "optional paid leave"
        },
        "10 Nisan": {
          "name": {
            "en": "Aliyah Day",
            "he": "יום העלייה"
          },
          "type": "observance",
          "note": "Official holiday, business as usual"
        },
        "15 Nisan": {
          "name": {
            "en": "Passover (Pesach)",
            "he": "פסח"
          }
        },
        "16 Nisan P5D": {
          "name": {
            "en": "Passover (intermediate days)",
            "he": "חול המועד פסח"
          },
          "type": "school",
          "note": "School holiday, collective paid leave in many businesses and government offices"
        },
        "21 Nisan": {
          "name": {
            "en": "Mimouna, Seventh day of Passover",
            "he": "מימונה, שביעי של פסח"
          }
        },
        "27 Nisan if Friday then previous Thursday if Sunday then next Monday": {
          "name": {
            "en": "Holocaust Remembrance Day (Yom HaShoah)",
            "he": "יום הזיכרון לשואה ולגבורה"
          },
          "type": "observance",
          "note": "National remembrance day, business as usual except places of public entertainment"
        },
        "05-09": {
          "name": {
            "en": "Victory in Europe Day",
            "he": "יום הניצחון על גרמניה הנאצית"
          },
          "type": "observance"
        },
        "4 Iyyar if Thursday,Friday then previous Wednesday if Sunday then next Monday": {
          "name": {
            "en": "Fallen Soldiers and Victims of Terrorism Remembrance Day (Yom HaZikaron)",
            "he": "יום הזיכרון לחללי מערכות ישראל ונפגעי פעולות האיבה"
          },
          "type": "observance",
          "note": "National remembrance day, business as usual except places of public entertainment"
        },
        "5 Iyyar if Friday,Saturday then previous Thursday if Monday then next Tuesday": {
          "name": {
            "en": "Independence Day (Yom HaAtzmaut)",
            "he": "יום העצמאות"
          }
        },
        "10 Iyyar if Saturday then next Sunday since 2004": {
          "name": {
            "en": "Herzl Day",
            "he": "יום הרצל"
          },
          "type": "observance",
          "note": "Day marked by the Knesset"
        },
        "18 Iyyar": {
          "name": {
            "en": "Lag BaOmer",
            "he": 'ל"ג בעומר'
          },
          "type": "school"
        },
        "28 Iyyar": {
          "name": {
            "en": "Jerusalem Day (Yom Yerushalayim)",
            "he": "יום ירושלים"
          },
          "type": "observance",
          "note": "Optional paid leave"
        },
        "6 Sivan": {
          "name": {
            "en": "Shavuot (Feast of Weeks)",
            "he": "שבועות"
          }
        },
        "17 Tamuz if Saturday then next Sunday": {
          "name": {
            "en": "Seventeenth of Tamuz, fast",
            "he": "שבעה עשר בתמוז"
          },
          "type": "observance"
        },
        "29 Tamuz if Saturday then next Sunday": {
          "name": {
            "en": "Jabotinsky Day",
            "he": "יום ז'בוטינסקי"
          },
          "type": "observance",
          "note": "Day marked by the Knesset"
        },
        "9 Av if Saturday then next Sunday": {
          "name": {
            "en": "Tisha B'Av, fast",
            "he": "תשעה באב"
          },
          "type": "observance",
          "note": "Optional paid leave, business as usual except places of public entertainment"
        },
        "15 Av": {
          "name": {
            "en": "Tu B'Av (Fifteenth of Av)",
            "he": 'ט"ו באב'
          },
          "type": "observance"
        },
        "2015-03-17": {
          "name": {
            "en": "Election Day",
            "he": "יום הבחירות"
          }
        },
        "2019-04-09": {
          "name": {
            "en": "Election Day",
            "he": "יום הבחירות"
          }
        },
        "2019-09-17": {
          "name": {
            "en": "Election Day",
            "he": "יום הבחירות"
          }
        },
        "2020-03-02": {
          "name": {
            "en": "Election Day",
            "he": "יום הבחירות"
          }
        },
        "2021-03-23": {
          "name": {
            "en": "Election Day",
            "he": "יום הבחירות"
          }
        }
      }
    },
    "IM": {
      "names": {
        "en": "Isle of Man"
      },
      "zones": [
        "Europe/Isle_of_Man"
      ],
      "langs": [
        "en"
      ],
      "_days": [
        "GB"
      ],
      "days": {
        "2nd friday in June": {
          "name": {
            "en": "Tourist Trophy, Senior Race Day"
          }
        },
        "07-05": {
          "name": {
            "en": "Tynwald Day"
          }
        }
      }
    },
    "IR": {
      "names": {
        "fa": "جمهوری اسلامی ایران",
        "en": "Iran"
      },
      "langs": [
        "fa",
        "en"
      ],
      "zones": [
        "Asia/Tehran"
      ],
      "dayoff": "Friday",
      "days": {
        "1 Farvardin": {
          "name": {
            "fa": "نوروز",
            "en": "Nowruz"
          }
        },
        "2 Farvardin": {
          "name": {
            "fa": "نوروز",
            "en": "Nowruz"
          }
        },
        "3 Farvardin": {
          "name": {
            "fa": "نوروز",
            "en": "Nowruz"
          }
        },
        "4 Farvardin": {
          "name": {
            "fa": "نوروز",
            "en": "Nowruz"
          }
        },
        "12 Farvardin": {
          "name": {
            "fa": "روز جمهوری اسلامی",
            "en": "Islamic Republic Day"
          }
        },
        "13 Farvardin": {
          "name": {
            "fa": "سیزده بدر",
            "en": "Sizdah Bedar"
          }
        },
        "14 Khordad": {
          "name": {
            "fa": "رﺣﻠﺖ اﻣﺎم ﺧﻤﯿﻨﯽ",
            "en": "Imam Khomeini's Demise"
          }
        },
        "15 Khordad": {
          "name": {
            "fa": "قیام ۱۵ خرداد",
            "en": "Revolt of Khordad 15"
          }
        },
        "22 Bahman": {
          "name": {
            "fa": "انقلاب اسلامی پنجاه و هفت",
            "en": "Anniversary of Islamic Revolution"
          }
        },
        "29 Esfand": {
          "name": {
            "fa": "ملی شدن صنعت نفت",
            "en": "Nationalization of the Iranian oil industry"
          }
        },
        "9 Muharram": {
          "name": {
            "fa": "ﺗﺎﺳﻮﻋﺎی ﺣﺴﯿﻨﯽ",
            "en": "Tasoua"
          }
        },
        "10 Muharram": {
          "name": {
            "fa": "ﻋﺎﺷﻮرای ﺣﺴﯿﻨﯽ",
            "en": "Ashoura"
          }
        },
        "20 Safar": {
          "name": {
            "fa": "اربعین حسینی",
            "en": "Arbaeen-e Hosseini"
          }
        },
        "28 Safar": {
          "name": {
            "fa": "رﺣﻠﺖ ﺣﻀﺮت رﺳﻮل اﮐﺮم صلّی الله علیه وآله و سلّم",
            "en": "Demise of Prophet Muhammad and Imam Hassan (Mujtaba)"
          }
        },
        "30 Safar": {
          "name": {
            "fa": "ﺷﻬﺎدت ﺣﻀﺮت اﻣﺎم رﺿﺎ ﻋﻠﯿﻪاﻟﺴﻼم",
            "en": "Martyrdom of Imam Reza"
          }
        },
        "8 Rabi al-awwal": {
          "name": {
            "fa": "شهادت امام حسن عسكری علیه‌السلام",
            "en": "Martyrdom of Imam Hassan"
          }
        },
        "17 Rabi al-awwal": {
          "name": {
            "fa": "ولادت حضرت رسول اکرم صلّی الله علیه وآله و سلّم",
            "en": "Birthday of Muhammad Prophet"
          }
        },
        "3 Jumada al-thani": {
          "name": {
            "fa": "ﺷﻬﺎدت ﺣﻀﺮت ﻓﺎﻃﻤﻪ زﻫﺮا ﺳﻼم اﷲ ﻋﻠﯿﻬﺎ",
            "en": "Martyrdom of Fatima-Zahara"
          }
        },
        "13 Rajab": {
          "name": {
            "fa": "وﻻدت ﺣﻀﺮت اﻣﺎم ﻋﻠﯽ ﻋﻠﯿﻪ اﻟﺴﻼم",
            "en": "Birthday of Imam Ali"
          }
        },
        "27 Rajab": {
          "name": {
            "fa": "ﻣﺒﻌﺚ ﺣﻀﺮت رﺳﻮل اﮐﺮم ﺻﻠﯽ اﷲ ﻋﻠﯿﻪ و آﻟﻪ",
            "en": "Mabaas of Muhammad"
          }
        },
        "15 Shaban": {
          "name": {
            "fa": "وﻻدت ﺣﻀﺮت ﻗﺎﺋﻢ ﻋﺠﻞاﷲ ﺗﻌﺎﻟﯽ ﻓﺮﺟﻪ شریف",
            "en": "Birthday of Imam Mahdi"
          }
        },
        "21 Ramadan": {
          "name": {
            "fa": "ﺷﻬﺎدت ﺣﻀﺮت ﻋﻠﯽ ﻋﻠﯿﻪاﻟﺴﻼم",
            "en": "Martyrdom of Imam Ali"
          }
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "2 Shawwal": {
          "name": {
            "fa": "ﺑﻪ ﻣﻨﺎﺳﺒﺖ ﻋﯿﺪ ﺳﻌﯿﺪ ﻓﻄﺮ",
            "en": "Holyday for Fetr Eeid"
          }
        },
        "25 Shawwal": {
          "name": {
            "fa": "ﺷﻬﺎدت ﺣﻀﺮت اﻣﺎم ﺟﻌﻔﺮ ﺻﺎدق ﻋﻠﯿﻪاﻟﺴﻼم",
            "en": "Martyrdom of Imam Jafar"
          }
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "18 Dhu al-Hijjah": {
          "name": {
            "fa": "ﻋﯿﺪ ﺳﻌﯿﺪ ﻏﺪﯾﺮ ﺧﻢ",
            "en": "Eid al-Ghadeer"
          }
        }
      }
    },
    "IS": {
      "names": {
        "is": "Ísland",
        "en": "Iceland"
      },
      "dayoff": "sunday",
      "zones": [
        "Atlantic/Reykjavik"
      ],
      "langs": [
        "is"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06",
          "type": "observance"
        },
        "friday after 01-18": {
          "name": {
            "is": "Bóndadagur"
          },
          "type": "observance"
        },
        "02-18": {
          "name": {
            "is": "Konudagur",
            "en": "Woman's Day"
          },
          "type": "observance"
        },
        "easter -48": {
          "name": {
            "is": "Bolludagur"
          },
          "type": "observance"
        },
        "easter -47": {
          "name": {
            "is": "Sprengidagur"
          },
          "type": "observance"
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "easter -7": {
          "_name": "easter -7",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "thursday after 04-18": {
          "name": {
            "is": "Sumardagurinn fyrsti",
            "en": "First Day of Summer"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "1st sunday in June": {
          "name": {
            "is": "Sjómannadagurinn",
            "en": "The Seamen's Day"
          },
          "type": "observance"
        },
        "06-17": {
          "name": {
            "is": "Íslenski þjóðhátíðardagurinn",
            "en": "Icelandic National Day"
          }
        },
        "1st monday in August": {
          "name": {
            "is": "Frídagur verslunarmanna",
            "en": "Commerce Day"
          }
        },
        "saturday after 10-21": {
          "name": {
            "is": "Fyrsti vetrardagur",
            "en": "First Day of Winter"
          },
          "type": "observance"
        },
        "11-16": {
          "name": {
            "is": "Dagur íslenskrar tungu",
            "en": "Icelandic Language Day"
          },
          "type": "observance"
        },
        "12-23": {
          "name": {
            "is": "Þorláksmessa",
            "en": "St Þorlákur's Day"
          },
          "type": "observance"
        },
        "12-24 13:00 if sunday then 00:00": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 13:00 if sunday then 00:00": {
          "_name": "12-31"
        }
      }
    },
    "IT": {
      "names": {
        "it": "Italia",
        "en": "Italia"
      },
      "dayoff": "sunday",
      "zones": [
        "Europe/Rome"
      ],
      "langs": [
        "it"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-25": {
          "name": {
            "it": "Anniversario della Liberazione",
            "en": "Liberation Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-02": {
          "name": {
            "it": "Festa della Repubblica",
            "en": "Republic Day"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "2011-03-17": {
          "name": {
            "it": "Festa Nazionale 2011",
            "en": "National Day 2011"
          }
        }
      },
      "states": {
        "25": {
          "name": "Lombardy",
          "regions": {
            "MI": {
              "name": "Milan",
              "days": {
                "12-07": {
                  "name": {
                    "it": "Sant'Ambrogio",
                    "en": "Saint Ambrose"
                  }
                }
              }
            }
          }
        },
        "32": {
          "names": {
            "de": "Südtirol",
            "it": "Alto Adige"
          },
          "days": {
            "easter 50": {
              "_name": "easter 50"
            }
          }
        },
        "52": {
          "names": {
            "it": "Toscana",
            "en": "Tuscany"
          },
          "regions": {
            "FI": {
              "names": {
                "it": "Firenze",
                "en": "Florence"
              },
              "days": {
                "06-24": {
                  "name": {
                    "it": "San Giovanni",
                    "en": "Saint John"
                  },
                  "type": "optional",
                  "note": "patron saint of Florence"
                }
              }
            }
          }
        },
        "62": {
          "name": "Lazio",
          "regions": {
            "RM": {
              "names": {
                "it": "Roma",
                "en": "Rome"
              },
              "days": {
                "06-29": {
                  "name": {
                    "it": "Santi Pietro e Paolo",
                    "en": "Saints Peter and Paul"
                  }
                }
              }
            }
          }
        }
      }
    },
    "JE": {
      "names": {
        "en": "Jersey"
      },
      "zones": [
        "Europe/Jersey"
      ],
      "langs": [
        "en"
      ],
      "_days": [
        "GB"
      ],
      "days": {
        "05-09": {
          "name": {
            "en": "Liberation Day"
          }
        }
      }
    },
    "JM": {
      "names": {
        "en": "Jamaica"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "America/Jamaica"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "_name": "01-01",
          "substitute": true
        },
        "easter -46": {
          "_name": "easter -46"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-23 if saturday,sunday then next monday": {
          "_name": "05-01"
        },
        "08-01 if sunday then next monday": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "08-06 and if sunday then next monday": {
          "_name": "Independence Day",
          "substitute": true
        },
        "3rd monday in October": {
          "name": {
            "en": "National Heroes Day"
          }
        },
        "12-25 and if sunday then next tuesday": {
          "_name": "12-25",
          "substitute": true
        },
        "12-26 and if sunday then next monday": {
          "_name": "12-26",
          "substitute": true
        }
      }
    },
    "JP": {
      "names": {
        "jp": "日本",
        "en": "Japan"
      },
      "dayoff": "sunday",
      "langs": [
        "jp"
      ],
      "zones": [
        "Asia/Tokyo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "substitute": true,
          "_name": "01-01",
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "01-02": {
          "name": {
            "en": "January 2nd",
            "jp": "銀行休業日"
          },
          "type": "bank"
        },
        "01-03": {
          "name": {
            "en": "January 3rd",
            "jp": "銀行休業日"
          },
          "type": "bank"
        },
        "01-15": {
          "name": {
            "en": "Coming of Age Day",
            "jp": "成人の日"
          },
          "active": [
            {
              "from": "1948-07-20T00:00:00.000Z",
              "to": "1999-12-31T00:00:00.000Z"
            }
          ]
        },
        "substitutes 01-15 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Coming of Age Day",
            "jp": "成人の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z",
              "to": "1999-12-31T00:00:00.000Z"
            }
          ]
        },
        "2nd monday in January": {
          "name": {
            "en": "Coming of Age Day",
            "jp": "成人の日"
          },
          "active": [
            {
              "from": "2000-01-01T00:00:00.000Z"
            }
          ]
        },
        "02-11": {
          "name": {
            "en": "Foundation Day",
            "jp": "建国記念の日"
          },
          "active": [
            {
              "from": "1967-01-01T00:00:00.000Z"
            }
          ]
        },
        "substitutes 02-11 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Foundation Day",
            "jp": "建国記念の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "02-23 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Emperor's Birthday",
            "jp": "天皇誕生日"
          },
          "active": [
            {
              "from": "2020-01-01T00:00:00.000Z"
            }
          ]
        },
        "1989-02-24": {
          "name": {
            "en": "State Funeral of Emperor Showa",
            "jp": "大喪の礼"
          }
        },
        "march equinox in +09:00": {
          "name": {
            "en": "Spring Equinox Day",
            "jp": "春分の日"
          },
          "active": [
            {
              "from": "1948-07-20T00:00:00.000Z"
            }
          ]
        },
        "substitutes march equinox in +09:00 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Spring Equinox Day",
            "jp": "春分の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "1959-04-10": {
          "name": {
            "en": "Marriage of Crown Prince Akihito",
            "jp": "結婚の儀"
          }
        },
        "04-29": {
          "name": {
            "en": "Emperor's Birthday",
            "jp": "天皇誕生日"
          },
          "active": [
            {
              "from": "1948-07-20T00:00:00.000Z",
              "to": "1988-12-31T00:00:00.000Z"
            }
          ]
        },
        "substitutes 04-29 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Emperor's Birthday",
            "jp": "天皇誕生日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z",
              "to": "1988-12-31T00:00:00.000Z"
            }
          ]
        },
        "04-29 and if sunday then next monday #1": {
          "substitute": true,
          "name": {
            "en": "Greenery Day",
            "jp": "みどりの日"
          },
          "active": [
            {
              "from": "1989-01-01T00:00:00.000Z",
              "to": "2006-12-31T00:00:00.000Z"
            }
          ]
        },
        "04-29 and if sunday then next monday #2": {
          "substitute": true,
          "name": {
            "en": "Showa Day",
            "jp": "昭和の日"
          },
          "active": [
            {
              "from": "2007-01-01T00:00:00.000Z"
            }
          ]
        },
        "2019-04-30": {
          "name": {
            "en": "Citizens' Holiday",
            "jp": "国民の休日"
          }
        },
        "2019-05-01": {
          "name": {
            "en": "Coronation Day",
            "jp": "即位の日"
          }
        },
        "2019-05-02": {
          "name": {
            "en": "Citizens' Holiday",
            "jp": "国民の休日"
          }
        },
        "05-03": {
          "_name": "Constitution Day"
        },
        "substitutes 05-03 if sunday then next monday": {
          "substitute": true,
          "_name": "Constitution Day",
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z",
              "to": "2006-12-31T00:00:00.000Z"
            }
          ]
        },
        "substitutes 05-03 if sunday then next wednesday": {
          "substitute": true,
          "_name": "Constitution Day",
          "active": [
            {
              "from": "2007-01-01T00:00:00.000Z"
            }
          ]
        },
        "05-04 not on sunday, monday": {
          "name": {
            "en": "Citizens' Holiday",
            "jp": "国民の休日"
          },
          "active": [
            {
              "from": "1986-01-01T00:00:00.000Z",
              "to": "2006-12-31T00:00:00.000Z"
            }
          ]
        },
        "05-04 and if sunday then next tuesday": {
          "substitute": true,
          "name": {
            "en": "Greenery Day",
            "jp": "みどりの日"
          },
          "active": [
            {
              "from": "2007-01-01T00:00:00.000Z"
            }
          ]
        },
        "05-05": {
          "name": {
            "en": "Children's Day",
            "jp": "こどもの日"
          }
        },
        "substitutes 05-05 if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Children's Day",
            "jp": "こどもの日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "1993-06-09": {
          "name": {
            "en": "Marriage of Crown Prince Naruhito",
            "jp": "結婚の儀"
          }
        },
        "07-20": {
          "name": {
            "en": "Marine Day",
            "jp": "海の日"
          },
          "active": [
            {
              "from": "1996-01-01T00:00:00.000Z",
              "to": "2002-12-31T00:00:00.000Z"
            }
          ]
        },
        "substitutes 07-20 if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Marine Day",
            "jp": "海の日"
          },
          "active": [
            {
              "from": "1996-01-01T00:00:00.000Z",
              "to": "2002-12-31T00:00:00.000Z"
            }
          ]
        },
        "3rd monday in July": {
          "name": {
            "en": "Marine Day",
            "jp": "海の日"
          },
          "disable": [
            "2020-07-20",
            "2021-07-19"
          ],
          "enable": [
            "2020-07-23",
            "2021-07-22"
          ],
          "active": [
            {
              "from": "2003-01-01T00:00:00.000Z"
            }
          ]
        },
        "substitutes 2021-08-08 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Mountain Day",
            "jp": "山の日"
          }
        },
        "substitutes 08-11 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Mountain Day",
            "jp": "山の日"
          },
          "disable": [
            "2020-08-11",
            "2021-08-11"
          ],
          "enable": [
            "2020-08-10"
          ],
          "active": [
            {
              "from": "2016-01-01T00:00:00.000Z"
            }
          ]
        },
        "09-15": {
          "name": {
            "en": "Respect-for-the-Aged Day",
            "jp": "敬老の日"
          },
          "active": [
            {
              "from": "1966-01-01T00:00:00.000Z",
              "to": "2002-12-31T00:00:00.000Z"
            }
          ]
        },
        "substitutes 09-15 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Respect-for-the-Aged Day",
            "jp": "敬老の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z",
              "to": "2002-12-31T00:00:00.000Z"
            }
          ]
        },
        "3rd monday in September": {
          "name": {
            "en": "Respect-for-the-Aged Day",
            "jp": "敬老の日"
          },
          "active": [
            {
              "from": "2003-01-01T00:00:00.000Z"
            }
          ]
        },
        "09-22 if 09-21 and 09-23 is public holiday": {
          "name": {
            "en": "Citizens' Holiday",
            "jp": "国民の休日"
          }
        },
        "september equinox in +09:00": {
          "name": {
            "en": "Autumnal Equinox Day",
            "jp": "秋分の日"
          },
          "active": [
            {
              "from": "1948-07-20T00:00:00.000Z"
            }
          ]
        },
        "substitutes september equinox in +09:00 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Autumnal Equinox Day",
            "jp": "秋分の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "10-10": {
          "name": {
            "en": "Sports Day",
            "jp": "体育の日"
          },
          "active": [
            {
              "from": "1966-01-01T00:00:00.000Z",
              "to": "1999-12-31T00:00:00.000Z"
            }
          ]
        },
        "substitutes 10-10 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Sports Day",
            "jp": "体育の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z",
              "to": "1999-12-31T00:00:00.000Z"
            }
          ]
        },
        "2nd monday in October #1": {
          "name": {
            "en": "Sports Day",
            "jp": "体育の日"
          },
          "active": [
            {
              "from": "2000-01-01T00:00:00.000Z",
              "to": "2019-12-31T00:00:00.000Z"
            }
          ]
        },
        "2nd monday in October #2": {
          "name": {
            "en": "Sports Day",
            "jp": "スポーツの日"
          },
          "disable": [
            "2020-10-12",
            "2021-10-11"
          ],
          "enable": [
            "2020-07-24",
            "2021-07-23"
          ],
          "active": [
            {
              "from": "2020-01-01T00:00:00.000Z"
            }
          ]
        },
        "2019-10-22": {
          "name": {
            "en": "Enthronement Ceremony Day",
            "jp": "即位礼正殿の儀"
          }
        },
        "11-03": {
          "substitute": true,
          "name": {
            "en": "Culture Day",
            "jp": "文化の日"
          },
          "active": [
            {
              "from": "1948-07-20T00:00:00.000Z"
            }
          ]
        },
        "substitutes 11-03 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Culture Day",
            "jp": "文化の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "1990-11-12": {
          "name": {
            "en": "Official Enthronement Ceremony of Emperor Heisei (Akihito)",
            "jp": "即位礼正殿の儀"
          }
        },
        "11-15": {
          "name": {
            "en": "Seven-Five-Three Festival",
            "jp": "七五三"
          },
          "type": "observance"
        },
        "11-23": {
          "name": {
            "en": "Labor Thanksgiving Day",
            "jp": "勤労感謝の日"
          },
          "active": [
            {
              "from": "1948-07-20T00:00:00.000Z"
            }
          ]
        },
        "substitutes 11-23 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Labor Thanksgiving Day",
            "jp": "勤労感謝の日"
          },
          "active": [
            {
              "from": "1973-04-12T00:00:00.000Z"
            }
          ]
        },
        "12-23 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Emperor's Birthday",
            "jp": "天皇誕生日"
          },
          "active": [
            {
              "from": "1989-01-01T00:00:00.000Z",
              "to": "2018-12-31T00:00:00.000Z"
            }
          ]
        },
        "12-25": {
          "_name": "12-25",
          "type": "observance"
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "KE": {
      "names": {
        "en": "Kenya"
      },
      "dayoff": "sunday",
      "langs": [
        "sw",
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "06-01 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "sw": "Siku ya Madaraka",
            "en": "Madaraka Day"
          }
        },
        "10-10 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Moi Day"
          }
        },
        "10-20 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "sw": "Siku ya Mashujaa",
            "en": "Mashujaa Day"
          }
        },
        "12-12 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "sw": "Siku ya Jamhuri",
            "en": "Jamhuri Day"
          }
        },
        "12-25 and if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-26"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "note": "For all persons belonging to the Islamic faith."
        }
      }
    },
    "KM": {
      "names": {
        "fr": "Union des Comores",
        "en": "Comoros"
      },
      "langs": [
        "fr",
        "ar",
        "swb",
        "wlc",
        "wni",
        "zdj"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-18": {
          "name": {
            "fr": "Journée de Cheikh Al Maarouf",
            "en": "Cheikh Al Maarouf Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-06": {
          "_name": "Independence Day"
        },
        "11-12": {
          "name": {
            "fr": "Journée Maoré",
            "en": "Maore Day"
          }
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P3DT0H0M": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P2DT0H0M": {
          "_name": "10 Dhu al-Hijjah"
        },
        "27 Rajab": {
          "_name": "27 Rajab"
        }
      }
    },
    "KN": {
      "names": {
        "en": "St. Kitts & Nevis"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Saturday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-02": {
          "name": {
            "en": "Carnival Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "1st Monday in May": {
          "_name": "05-01"
        },
        "1st Monday in August": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "1st Tuesday in August": {
          "name": {
            "en": "Culturama Day"
          }
        },
        "09-16 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "National Heroes' Day"
          }
        },
        "09-19 if Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "KR": {
      "names": {
        "ko": "대한민국",
        "en": "South Korea"
      },
      "dayoff": "sunday",
      "langs": [
        "ko"
      ],
      "zones": [
        "Asia/Seoul"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "korean 01-0-01 P3D": {
          "name": {
            "en": "Korean New Year",
            "ko": "설날"
          }
        },
        "03-01": {
          "name": {
            "en": "Independence Movement Day",
            "ko": "3·1절"
          }
        },
        "05-05": {
          "name": {
            "en": "Children's Day",
            "ko": "어린이날"
          }
        },
        "korean 4-0-8": {
          "name": {
            "en": "Buddha's Birthday",
            "ko": "석가탄신일"
          }
        },
        "06-06": {
          "name": {
            "en": "Memorial Day",
            "ko": "현충일"
          }
        },
        "07-17": {
          "_name": "Constitution Day",
          "type": "observance"
        },
        "08-15": {
          "name": {
            "en": "Liberation Day",
            "ko": "광복절"
          }
        },
        "korean 8-0-15 P3D": {
          "name": {
            "en": "Korean Thanksgiving",
            "ko": "추석"
          }
        },
        "10-03": {
          "name": {
            "en": "National Foundation Day",
            "ko": "개천절"
          }
        },
        "10-09": {
          "name": {
            "en": "Hangul Day",
            "ko": "한글날"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "KY": {
      "names": {
        "en": "Cayman Islands"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Panama"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "4th Monday in January": {
          "name": {
            "en": "National Heroes Day"
          }
        },
        "easter -46": {
          "_name": "easter -46"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "3rd Monday in May": {
          "name": {
            "en": "Discovery Day"
          }
        },
        "07-02": {
          "name": {
            "en": "Constitution Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "2017-05-24": {
          "name": "General Election Day"
        },
        "2021-04-14": {
          "name": "General Election Day"
        },
        "2016-06-13": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2017-06-19": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2018-06-11": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2019-06-10": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2020-06-15": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2021-06-14": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2022-06-20": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2023-06-19": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2024-06-17": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2025-06-16": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "2026-06-15": {
          "name": {
            "en": "Queen's Birthday"
          }
        }
      }
    },
    "LC": {
      "names": {
        "en": "St. Lucia"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02": {
          "name": {
            "en": "Second New Year's Day"
          }
        },
        "02-22": {
          "_name": "Independence Day"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "1st Friday after 07-10 P4D": {
          "name": {
            "en": "Carnival"
          }
        },
        "08-01": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "1st Monday in October": {
          "name": {
            "en": "Thanksgiving"
          }
        },
        "12-13": {
          "name": {
            "en": "National Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "LI": {
      "names": {
        "de": "Liechtenstein",
        "en": "Liechtenstein"
      },
      "dayoff": "sunday",
      "langs": [
        "de"
      ],
      "zones": [
        "Europe/Zurich"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02": {
          "name": {
            "de": "Berchtoldstag",
            "en": "Berchtold Day"
          },
          "type": "bank"
        },
        "01-06": {
          "_name": "01-06"
        },
        "02-02": {
          "_name": "02-02",
          "type": "observance"
        },
        "03-19": {
          "_name": "03-19",
          "type": "observance"
        },
        "easter -47": {
          "_name": "easter -47",
          "type": "bank"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39",
          "name": {
            "de": "Auffahrt"
          }
        },
        "easter 40": {
          "name": {
            "de": "Feiertagsbrücke"
          }
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "easter 61": {
          "name": {
            "de": "Feiertagsbrücke"
          }
        },
        "08-15": {
          "name": {
            "de": "Staatsfeiertag"
          },
          "type": "observance"
        },
        "09-08": {
          "name": {
            "de": "Mariä Geburt"
          }
        },
        "11-01": {
          "_name": "11-01",
          "type": "observance"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-24": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "name": {
            "de": "Stephanstag"
          }
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "LR": {
      "names": {
        "en": "Liberia"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Monrovia"
      ],
      "dayoff": "Sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-11": {
          "name": {
            "en": "Armed Forces Day"
          }
        },
        "2nd Wednesday in March": {
          "name": {
            "en": "Decoration Day"
          }
        },
        "03-15": {
          "name": {
            "en": "J. J. Robert's Day"
          }
        },
        "2nd Friday in April": {
          "name": {
            "en": "Fast and Prayer Day"
          }
        },
        "05-14": {
          "name": {
            "en": "National Unification Day"
          }
        },
        "07-26": {
          "_name": "Independence Day"
        },
        "08-24": {
          "name": {
            "en": "Flag Day"
          }
        },
        "1st Thursday in November": {
          "name": {
            "en": "Thanksgiving"
          }
        },
        "11-29": {
          "name": {
            "en": "William Tubman's Birthday"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "LS": {
      "names": {
        "st": "\\'Muso oa Lesotho",
        "en": "Lesotho"
      },
      "langs": [
        "st",
        "en"
      ],
      "zones": [
        "Africa/Johannesburg"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-11": {
          "name": {
            "en": "Moshoeshoe Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Workers' Day"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "05-25": {
          "name": {
            "en": "Africa Day/ Heroes' Day"
          }
        },
        "07-17": {
          "name": {
            "en": "King Letsie III's Birthday"
          }
        },
        "10-04": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "LT": {
      "names": {
        "lt": "Lietuva",
        "en": "Lithuania"
      },
      "dayoff": "sunday",
      "langs": [
        "lt"
      ],
      "zones": [
        "Europe/Vilnius"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-16": {
          "name": {
            "en": "Day of Restoration of the State of Lithuania",
            "lt": "Lietuvos valstybės atkūrimo diena"
          }
        },
        "03-11": {
          "name": {
            "en": "Day of Restoration of Independence of Lithuania",
            "lt": "Lietuvos nepriklausomybės atkūrimo diena"
          }
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "1st sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "1st sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "06-24": {
          "name": {
            "en": "St. John's Day",
            "lt": "Joninės, Rasos"
          }
        },
        "07-06": {
          "name": {
            "en": "Statehood Day",
            "lt": "Valstybės diena"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-02": {
          "_name": "11-02",
          "active": [
            {
              "from": 2020
            }
          ]
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "LU": {
      "names": {
        "fr": "Luxembourg",
        "en": "Luxembourg",
        "de": "Luxemburg",
        "lb": "Lëtzebuerg",
        "pt": "Luxemburgo"
      },
      "langs": [
        "fr",
        "de",
        "lb"
      ],
      "zones": [
        "Europe/Luxembourg"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-23": {
          "_name": "National Holiday",
          "active": [
            {
              "from": "1947-08-08",
              "to": "1961-12-23"
            }
          ]
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "observance"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1",
          "active": [
            {
              "from": "1892-02-16"
            }
          ]
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "fr": "1er mai"
          },
          "active": [
            {
              "from": "1946-04-23"
            }
          ]
        },
        "05-09": {
          "_name": "05-09",
          "active": [
            {
              "from": "2019-01-01"
            }
          ]
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50",
          "active": [
            {
              "from": "1892-02-16"
            }
          ]
        },
        "06-23": {
          "_name": "National Holiday",
          "active": [
            {
              "from": "1961-12-23"
            }
          ]
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "active": [
            {
              "from": "1892-02-16"
            }
          ]
        }
      }
    },
    "LV": {
      "names": {
        "lv": "Latvija",
        "en": "Latvia"
      },
      "dayoff": "sunday",
      "langs": [
        "lv"
      ],
      "zones": [
        "Europe/Riga"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-04 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Restoration of Independence day",
            "lv": "Latvijas Republikas Neatkarības atjaunošanas diena"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-23": {
          "name": {
            "en": "Midsummer Eve",
            "lv": "Līgo Diena"
          }
        },
        "06-24": {
          "name": {
            "en": "Midsummer",
            "lv": "Jāņi"
          }
        },
        "11-18 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Republic Day",
            "lv": "Latvijas Republikas proklamēšanas diena"
          }
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31": {
          "_name": "12-31"
        },
        "2023-05-29": {
          "name": {
            "en": "Bronze medal of the Latvian hockey team at the 2023 World Hockey Championship",
            "lv": "Latvijas hokeja komandas 2023. gada Pasaules hokeja čempionātā bronzas medaļa"
          }
        }
      }
    },
    "LY": {
      "names": {
        "ar": "دولة ليبيا",
        "en": "Libya"
      },
      "langs": [
        "ar"
      ],
      "zones": [
        "Africa/Tripoli"
      ],
      "dayoff": "",
      "days": {
        "02-17": {
          "_name": "Revolution Day"
        },
        "05-01": {
          "_name": "05-01"
        },
        "09-16": {
          "name": {
            "ar": "يوم الشهداء",
            "en": "Martyrs' Day"
          }
        },
        "10-23": {
          "_name": "Liberation Day"
        },
        "12-24": {
          "_name": "Independence Day"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        },
        "9 Dhu al-Hijjah": {
          "_name": "9 Dhu al-Hijjah"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "MA": {
      "names": {
        "ar": "المملكة المغربية",
        "fr": "Royaume du Maroc",
        "en": "Kingdom of Morocco"
      },
      "langs": [
        "ar",
        "ber",
        "fr"
      ],
      "zones": [
        "Africa/Casablanca"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-11": {
          "name": {
            "fr": "Manifeste de l'indépendance",
            "ar": "ذكرى تقديم وثيقة الاستقلال",
            "en": "Anniversary of the Independence Manifesto"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-30": {
          "name": {
            "fr": "Fête du trône",
            "ar": "عيد العرش",
            "en": "Feast of the Throne"
          }
        },
        "08-14": {
          "name": {
            "fr": "Journée de Oued Ed-Dahab",
            "ar": "يوم وادي الذهب",
            "en": "Anniversary of the Recovery Oued Ed-Dahab"
          }
        },
        "08-20": {
          "name": {
            "fr": "Fête de la révolution du roi et du peuple",
            "ar": "ثورة الملك والشعب",
            "en": "Anniversary of the Revolution of the King and the People"
          }
        },
        "08-21": {
          "name": {
            "fr": "Journée de la jeunesse",
            "ar": "عيد الشباب",
            "en": "Youth Day"
          }
        },
        "11-06": {
          "name": {
            "fr": "La Marche verte",
            "ar": "المسيرة الخضراء",
            "en": "Anniversary of the Green March"
          }
        },
        "11-18": {
          "_name": "Independence Day",
          "name": {
            "fr": "Fête de l'indépendance"
          }
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "MC": {
      "names": {
        "fr": "Monaco",
        "en": "Monaco"
      },
      "dayoff": "sunday",
      "langs": [
        "fr"
      ],
      "zones": [
        "Europe/Monaco"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-27 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Saint Devota's Day",
            "fr": "Sainte Dévote"
          }
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "observance"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01",
          "name": {
            "fr": "1er mai"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-19 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "H.S.H. the Sovereign Prince's Day",
            "fr": "La Fête du Prince"
          }
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        }
      }
    },
    "MD": {
      "names": {
        "ro": "Republica Moldova",
        "en": "Moldova"
      },
      "langs": [
        "ro"
      ],
      "zones": [
        "Europe/Chisinau"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "julian 12-25 P2D": {
          "_name": "julian 12-25",
          "name": {
            "ro": "Craciun pe Rit Vechi"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "orthodox": {
          "_name": "easter"
        },
        "orthodox 1": {
          "_name": "easter 1"
        },
        "orthodox 8": {
          "name": {
            "ro": "Paştele Blăjinilor",
            "en": "Memorial Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-09": {
          "name": {
            "ro": "Ziua Victoriei",
            "en": "Victory Day"
          }
        },
        "08-27": {
          "_name": "Independence Day"
        },
        "08-31": {
          "name": {
            "ro": "Limba noastră",
            "en": "National Language Day"
          }
        },
        "1st saturday in October P2D": {
          "name": {
            "ro": "Ziua vinului",
            "en": "Wine Day"
          },
          "type": "observance",
          "active": [
            {
              "from": 2013
            }
          ]
        },
        "12-25": {
          "_name": "12-25",
          "name": {
            "ro": "Craciun pe stil Nou"
          }
        }
      },
      "states": {
        "CA": {
          "name": "Cahul",
          "days": {
            "11-21": {
              "name": {
                "ro": "Ziua Cahul",
                "en": "Cahul Day"
              }
            }
          }
        },
        "CU": {
          "name": "Chișinău",
          "days": {
            "10-14": {
              "name": {
                "ro": "Ziua capitalului",
                "en": "Capital's Day"
              }
            }
          }
        }
      }
    },
    "ME": {
      "names": {
        "hr": "Crna Gora",
        "sr": "Црна Гора",
        "bs": "Crna Gora",
        "sq": "Mali i Zi",
        "en": "Montenegro"
      },
      "dayoff": "sunday",
      "langs": [
        "hr",
        "sr",
        "bs",
        "sq"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "days": {
        "05-21 and if sunday then next tuesday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "05-22 and if sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "07-13 and if sunday then next tuesday": {
          "substitute": true,
          "name": {
            "hr": "Dan državnosti",
            "sr": "Дан државности",
            "en": "Statehood Day"
          }
        },
        "07-14 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "hr": "Dan državnosti",
            "sr": "Дан државности",
            "en": "Statehood Day"
          }
        },
        "01-01 and if sunday then next tuesday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-02 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "05-01 and if sunday then next tuesday": {
          "substitute": true,
          "_name": "05-01"
        },
        "05-02 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "julian 12-24": {
          "_name": "12-24"
        },
        "julian 12-25": {
          "_name": "12-25"
        },
        "julian 12-26": {
          "_name": "12-26"
        },
        "julian 01-01": {
          "_name": "julian 01-01",
          "type": "observance"
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox": {
          "_name": "easter"
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-25"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter"
        },
        "08-15": {
          "_name": "08-15",
          "type": "observance"
        },
        "11-01": {
          "_name": "11-01"
        },
        "1 Shawwal P3D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        },
        "1 Muharram": {
          "_name": "1 Muharram",
          "type": "observance"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal",
          "type": "observance"
        },
        "27 Rajab": {
          "_name": "27 Rajab",
          "type": "observance"
        },
        "15 Shaban": {
          "_name": "15 Shaban",
          "type": "observance"
        },
        "1 Ramadan": {
          "_name": "1 Ramadan",
          "type": "observance"
        },
        "27 Ramadan": {
          "_name": "27 Ramadan",
          "type": "observance"
        },
        "15 Nisan P2D": {
          "_name": "15 Nisan"
        },
        "1 Tishrei": {
          "_name": "1 Tishrei",
          "type": "observance"
        },
        "10 Tishrei P2D": {
          "_name": "10 Tishrei"
        }
      }
    },
    "MF": {
      "names": {
        "en": "St. Martin",
        "fr": "Saint Martin"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "America/Marigot"
      ],
      "dayoff": "sunday",
      "_days": "FR",
      "days": {
        "05-27": {
          "name": {
            "fr": "Abolition de l'esclavage",
            "en": "abolition of slavery"
          }
        }
      }
    },
    "MG": {
      "names": {
        "mg": "Repoblikan'i Madagasikara",
        "fr": "République de Madagascar",
        "en": "Madagascar"
      },
      "dayoff": "sunday",
      "langs": [
        "mg",
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-08": {
          "name": {
            "mg": "Andro iraisam-pirenena ho an'ny vehivavy",
            "fr": "Journée internationale de la femme",
            "en": "International Women's Day"
          },
          "note": "only for women"
        },
        "03-29": {
          "name": {
            "mg": "Martioran'ny tolona tamin'ny 1947",
            "fr": "Commémoration des martyrs de l'insurrection de 1947.",
            "en": "Martyrs' Day"
          }
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-25": {
          "name": {
            "mg": "Andron'i Afrika",
            "fr": "Jour de l'Afrique",
            "en": "Africa Day"
          }
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "06-26": {
          "_name": "Independence Day",
          "name": {
            "mg": "Fetim-pirenena",
            "fr": "Fête Nationale"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "note": "For Muslim"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "note": "For Muslim"
        }
      }
    },
    "MK": {
      "names": {
        "mk": "Република Македонија",
        "en": "Macedonia"
      },
      "langs": [
        "mk"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "julian 12-25 and if sunday then next monday": {
          "substitute": true,
          "_name": "julian 12-25"
        },
        "orthodox": {
          "_name": "orthodox"
        },
        "orthodox 1": {
          "_name": "orthodox 1"
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "05-24 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "mk": "Св. Кирил и Методиј",
            "en": "Saints Cyril and Methodius Day"
          }
        },
        "08-02 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "mk": "Ден на Републиката",
            "en": "Day of the Republic"
          }
        },
        "09-08 and if sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "10-11 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "mk": "Ден на востанието",
            "en": "Revolution Day"
          }
        },
        "10-23 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "mk": "Ден на македонската револуционерна борба",
            "en": "Day of the Macedonian Revolutionary Struggle"
          }
        },
        "12-08 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "mk": "Св. Климент Охридски",
            "en": "Saint Clement of Ohrid Day"
          }
        },
        "1 Shawwal and if sunday then next monday": {
          "substitute": true,
          "_name": "1 Shawwal"
        },
        "julian 12-24": {
          "_name": "julian 12-24",
          "type": "optional",
          "note": "Orthodox believers"
        },
        "julian 01-06": {
          "_name": "01-06",
          "type": "optional",
          "note": "Orthodox believers"
        },
        "orthodox -2": {
          "_name": "orthodox -2",
          "type": "optional",
          "note": "Orthodox believers"
        },
        "orthodox 47": {
          "name": {
            "mk": "петок пред Духовден",
            "en": "Friday before Pentecost"
          },
          "type": "optional",
          "note": "Orthodox believers"
        },
        "orthodox 49": {
          "_name": "easter 49",
          "type": "optional",
          "note": "Orthodox believers"
        },
        "julian 08-15": {
          "_name": "08-15",
          "type": "optional",
          "note": "Orthodox believers"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "type": "optional",
          "note": "Muslim believers"
        },
        "10 Tishrei": {
          "_name": "10 Tishrei",
          "type": "optional",
          "note": "Jewish believers"
        },
        "easter 1": {
          "_name": "easter 1",
          "type": "optional",
          "note": "Catholic believers"
        },
        "11-01": {
          "_name": "11-01",
          "type": "optional",
          "note": "Catholic believers"
        },
        "12-25": {
          "_name": "12-25",
          "type": "optional",
          "note": "Catholic believers"
        },
        "11-22": {
          "name": {
            "mk": "Ден на Албанската азбука",
            "en": "Day of the Albanian Alphabet"
          },
          "type": "optional",
          "note": "For members of the Albanian community"
        },
        "12-21": {
          "name": {
            "mk": "Ден на настава на турски јазик",
            "en": "Turkish Language Day"
          },
          "type": "optional",
          "note": "For members of the the Turkish community"
        },
        "01-27": {
          "name": {
            "mk": "Свети Сава",
            "en": "St. Sava"
          },
          "type": "optional",
          "note": "For members of the Serbian community"
        },
        "04-08": {
          "name": {
            "mk": "Меѓународен ден на Ромите",
            "en": "International Roma Day"
          },
          "type": "optional",
          "note": "For members of the the Roma community"
        },
        "05-23": {
          "name": {
            "mk": "Национален ден на Властите",
            "en": "National Day of Authorities"
          },
          "type": "optional",
          "note": "For members of the Vlach community"
        },
        "09-28": {
          "name": {
            "mk": "Меѓународен ден на Бошњаците",
            "en": "International Day of Bosniaks"
          },
          "type": "optional",
          "note": "For Members of the Bosniak community."
        }
      }
    },
    "ML": {
      "names": {
        "fr": "République du Mali",
        "en": "Republic of Mali"
      },
      "langs": [
        "fr",
        "en"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-20": {
          "name": {
            "fr": "Fête de l'armée",
            "en": "Army Day"
          }
        },
        "03-26": {
          "name": {
            "fr": "Journée des Martyrs",
            "en": "Martyrs' Day"
          }
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "05-25": {
          "name": "Jour de l'Afrique"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "09-22": {
          "_name": "Independence Day",
          "name": {
            "fr": "Fête nationale de l'indépendance"
          }
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        }
      }
    },
    "MQ": {
      "names": {
        "fr": "Martinique",
        "en": "Martinique"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "America/Martinique"
      ],
      "dayoff": "sunday",
      "_days": "FR",
      "days": {
        "easter -2": {
          "_name": "easter -2"
        },
        "05-22": {
          "_name": "Abolition of Slavery"
        },
        "07-21": {
          "name": {
            "fr": "Jour de Victor Schoelcher",
            "en": "Victor Shoelcher Day"
          }
        }
      }
    },
    "MR": {
      "names": {
        "ar": "الجمهورية الإسلامية الموريتانية",
        "en": "Mauritania"
      },
      "langs": [
        "ar",
        "fr"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-25": {
          "name": {
            "ar": "يوم افريقيا",
            "en": "Africa Day"
          }
        },
        "11-28": {
          "_name": "Independence Day"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "MS": {
      "names": {
        "en": "Montserrat"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "01-01"
        },
        "03-17 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Saint Patrick's Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1st Monday in May": {
          "_name": "05-01"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "2nd Monday after 06-02": {
          "name": {
            "en": "Queen's Birthday Celebration"
          }
        },
        "08-01 if Saturday, Sunday then next Monday": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "12-25 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-26"
        },
        "12-31 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-31",
          "name": {
            "en": "Festival Day"
          }
        }
      }
    },
    "MT": {
      "names": {
        "mt": "Malta",
        "en": "Malta"
      },
      "dayoff": "sunday",
      "langs": [
        "mt"
      ],
      "zones": [
        "Europe/Malta"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-10": {
          "name": {
            "en": "Feast of Saint Paul's Shipwreck in Malta",
            "mt": "Nawfraġju ta' San Pawl"
          }
        },
        "03-19": {
          "_name": "03-19"
        },
        "03-31": {
          "name": {
            "en": "Freedom Day",
            "mt": "Jum il-Ħelsien"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-07": {
          "name": {
            "mt": "Sette Giugno",
            "en": "June 7th"
          }
        },
        "06-29": {
          "_name": "06-29"
        },
        "08-15": {
          "_name": "08-15"
        },
        "09-08": {
          "name": {
            "en": "Victory Day",
            "mt": "Jum il-Vitorja"
          }
        },
        "09-21": {
          "_name": "Independence Day"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-13": {
          "name": {
            "en": "Republic Day",
            "mt": "Jum ir-Repubblika"
          }
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "MW": {
      "names": {
        "en": "Malawi"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01 and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-15 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "John Chilembwe Day"
          }
        },
        "03-03 and if saturday,sunday then next monday": {
          "name": {
            "en": "Martyrs' Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 and if saturday,sunday then next monday": {
          "_name": "05-01"
        },
        "05-14 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Kamuzu Day"
          }
        },
        "07-06 and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "10-15 and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "Mothers Day"
        },
        "12-25 and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        },
        "1 Shawwal and if saturday,sunday then next monday": {
          "substitute": true,
          "_name": "1 Shawwal",
          "name": {
            "en": "Eid al Fitri"
          }
        }
      }
    },
    "MX": {
      "names": {
        "es": "México",
        "en": "Mexico"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Mexico_City",
        "America/Cancun",
        "America/Merida",
        "America/Monterrey",
        "America/Matamoros",
        "America/Mazatlan",
        "America/Chihuahua",
        "America/Ojinaga",
        "America/Hermosillo",
        "America/Tijuana",
        "America/Santa_Isabel",
        "America/Bahia_Banderas"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-05": {
          "_name": "Constitution Day",
          "active": [
            {
              "to": "2006-01-17T00:00:00.000Z"
            }
          ]
        },
        "1st monday in February": {
          "_name": "Constitution Day",
          "active": [
            {
              "from": "2006-01-18T00:00:00.000Z"
            }
          ]
        },
        "03-21": {
          "name": {
            "en": "Benito Juárez's birthday",
            "es": "Natalicio de Benito Juárez"
          },
          "active": [
            {
              "to": "2006-12-31T00:00:00.000Z"
            }
          ]
        },
        "3rd monday in March": {
          "name": {
            "en": "Benito Juárez's birthday",
            "es": "Natalicio de Benito Juárez"
          },
          "active": [
            {
              "from": "2007-01-01T00:00:00.000Z"
            }
          ]
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "bank"
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "bank"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-10": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "09-16": {
          "_name": "Independence Day"
        },
        "11-02": {
          "_name": "11-02",
          "type": "bank"
        },
        "11-20": {
          "_name": "Revolution Day",
          "active": [
            {
              "to": "2006-01-17T00:00:00.000Z"
            }
          ]
        },
        "3rd monday in November": {
          "_name": "Revolution Day",
          "active": [
            {
              "from": "2006-01-18T00:00:00.000Z"
            }
          ]
        },
        "12-01 every 6 years since 1934": {
          "name": {
            "en": "Change of Federal Government",
            "es": "Transmisión del Poder Ejecutivo Federal"
          }
        },
        "12-12": {
          "name": {
            "en": "Day of the Virgin of Guadalupe",
            "es": "Día de la Virgen de Guadalupe"
          },
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "MY": {
      "names": {
        "en": "Malaysia"
      },
      "langs": [
        "ms"
      ],
      "zones": [
        "Asia/Kuala_Lumpur",
        "Asia/Kuching"
      ],
      "dayoff": "Saturday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "chinese 01-0-01": {
          "name": {
            "en": "Chinese New Year",
            "ms": "Tahun Baru Cina"
          }
        },
        "chinese 01-0-02": {
          "name": {
            "en": "Chinese New Year",
            "ms": "Tahun Baru Cina"
          }
        },
        "substitutes chinese 01-0-01 if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Chinese New Year",
            "ms": "Tahun Baru Cina"
          }
        },
        "substitutes chinese 01-0-02 if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Chinese New Year",
            "ms": "Tahun Baru Cina"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "substitutes 05-01 if Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "1st Monday in June": {
          "name": {
            "en": "Yang di-Pertuan Agong's Birthday",
            "ms": "Hari Keputeraan Yang di-Pertuan Agong"
          }
        },
        "08-31": {
          "_name": "Independence Day"
        },
        "substitutes 08-31 if Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "09-16": {
          "name": {
            "en": "Malaysia Day",
            "ms": "Hari Malaysia"
          }
        },
        "substitutes 09-16 if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Malaysia Day",
            "ms": "Hari Malaysia"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if Sunday then next Monday": {
          "substitute": true,
          "_name": "12-25"
        },
        "17 Ramadan": {
          "_name": "17 Ramadan",
          "disable": [
            "2022-04-18"
          ],
          "enable": [
            "2022-04-19"
          ]
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "disable": [
            "2022-05-02"
          ],
          "enable": [
            "2022-05-03"
          ]
        },
        "2 Shawwal": {
          "_name": "1 Shawwal",
          "disable": [
            "2022-05-03"
          ],
          "enable": [
            "2022-05-04"
          ]
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "disable": [
            "2022-07-09"
          ],
          "enable": [
            "2022-07-10"
          ]
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal",
          "disable": [
            "2022-10-08"
          ],
          "enable": [
            "2022-10-09"
          ]
        },
        "2010-05-28": {
          "_name": "Vesak"
        },
        "2011-05-17": {
          "_name": "Vesak"
        },
        "2012-05-06": {
          "_name": "Vesak"
        },
        "2013-05-25": {
          "_name": "Vesak"
        },
        "2014-05-15": {
          "_name": "Vesak"
        },
        "2015-06-02": {
          "_name": "Vesak"
        },
        "2016-05-22": {
          "_name": "Vesak"
        },
        "2017-05-10": {
          "_name": "Vesak"
        },
        "2018-05-29": {
          "_name": "Vesak"
        },
        "2019-05-19": {
          "_name": "Vesak"
        },
        "2020-05-07": {
          "_name": "Vesak"
        },
        "2021-05-26": {
          "_name": "Vesak"
        },
        "2022-05-15": {
          "_name": "Vesak"
        },
        "2022-05-16": {
          "substitute": true,
          "_name": "Vesak"
        },
        "2023-05-04": {
          "_name": "Vesak"
        },
        "2024-05-22": {
          "_name": "Vesak"
        },
        "2025-05-12": {
          "_name": "Vesak"
        },
        "2026-05-31": {
          "_name": "Vesak"
        },
        "2016-10-29": {
          "_name": "Deepavali"
        },
        "2017-10-18": {
          "_name": "Deepavali"
        },
        "2018-11-06": {
          "_name": "Deepavali"
        },
        "2019-10-27": {
          "_name": "Deepavali"
        },
        "2019-10-28": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2020-11-14": {
          "_name": "Deepavali"
        },
        "2021-11-04": {
          "_name": "Deepavali"
        },
        "2022-10-24": {
          "_name": "Deepavali"
        },
        "2023-11-12": {
          "_name": "Deepavali"
        },
        "2023-11-13": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2024-10-31": {
          "_name": "Deepavali"
        },
        "2025-10-20": {
          "_name": "Deepavali"
        },
        "2026-11-09": {
          "_name": "Deepavali"
        },
        "2027-10-28": {
          "_name": "Deepavali"
        },
        "2028-11-15": {
          "_name": "Deepavali"
        },
        "2029-11-05": {
          "_name": "Deepavali"
        },
        "2030-10-25": {
          "_name": "Deepavali"
        }
      },
      "states": {
        "10": {
          "name": "Selangor",
          "days": {
            "12-11": {
              "name": {
                "en": "Sultan of Selangor's Birthday",
                "id": "Hari Keputeraan Sultan Selangor"
              }
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "11": {
          "name": "Terengganu",
          "days": {
            "01-01": false,
            "03-04": {
              "name": {
                "en": "Anniversary of Installation of the Sultan of Terengganu",
                "ms": "Hari Ulang Tahun Pertabalan Sultan Terengganu"
              }
            },
            "04-26": {
              "name": {
                "en": "Sultan of Terengganu's Birthday",
                "ms": "Hari Keputeraan Sultan Terengganu"
              }
            },
            "27 Rajab": {
              "_name": "27 Rajab"
            },
            "9 Dhu al-Hijjah": {
              "_name": "9 Dhu al-Hijjah"
            },
            "11 Dhu al-Hijjah": {
              "_name": "10 Dhu al-Hijjah"
            }
          }
        },
        "12": {
          "name": "Sabah",
          "days": {
            "easter -2": {
              "_name": "easter -2"
            },
            "05-30": {
              "name": {
                "en": "Tadau Kaamatan",
                "ms": "Pesta Kaamatan"
              }
            },
            "05-31": {
              "name": {
                "en": "Tadau Kaamatan",
                "ms": "Pesta Kaamatan"
              }
            },
            "1st Saturday in October": {
              "name": {
                "en": "Sabah State Governor's Birthday",
                "ms": "Hari Jadi Yang di-Pertua Negeri Sabah"
              }
            },
            "12-24": {
              "_name": "12-24"
            },
            "17 Ramadan": false
          }
        },
        "13": {
          "name": "Sarawak",
          "days": {
            "2016-10-29": false,
            "2017-10-18": false,
            "2018-11-06": false,
            "2019-10-27": false,
            "2020-11-14": false,
            "2021-11-04": false,
            "2022-10-24": false,
            "2023-11-13": false,
            "2024-10-31": false,
            "2025-10-20": false,
            "2026-11-09": false,
            "2027-10-28": false,
            "2028-11-15": false,
            "2029-11-05": false,
            "2030-10-25": false,
            "easter -2": {
              "_name": "easter -2"
            },
            "06-01": {
              "name": {
                "en": "Gawai Dayak",
                "ms": "Perayaan Hari Gawai Dayak"
              }
            },
            "06-02": {
              "name": {
                "en": "Gawai Dayak",
                "ms": "Perayaan Hari Gawai Dayak"
              }
            },
            "07-22": {
              "name": {
                "en": "Sarawak Independence Day",
                "ms": "Hari Kemerdekaan Sarawak"
              }
            },
            "2nd Saturday in October": {
              "name": {
                "en": "Sarawak State Governor's Birthday",
                "ms": "Hari Jadi Yang di-Pertua Negeri Sarawak"
              }
            },
            "17 Ramadan": false
          }
        },
        "14": {
          "name": "Kuala Lumpur",
          "days": {
            "02-01": {
              "name": {
                "en": "Federal Territory Day",
                "ms": "Hari Wilayah Persekutuan"
              }
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "15": {
          "name": "Labuan",
          "days": {
            "02-01": {
              "name": {
                "en": "Federal Territory Day",
                "ms": "Hari Wilayah Persekutuan"
              }
            },
            "05-30": {
              "name": {
                "en": "Tadau Kaamatan",
                "ms": "Pesta Kaamatan"
              }
            },
            "05-31": {
              "name": {
                "en": "Tadau Kaamatan",
                "ms": "Pesta Kaamatan"
              }
            }
          }
        },
        "16": {
          "name": "Putrajaya",
          "days": {
            "02-01": {
              "name": {
                "en": "Federal Territory Day",
                "ms": "Hari Wilayah Persekutuan"
              }
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "01": {
          "name": "Johor",
          "days": {
            "01-01": false,
            "03-23": {
              "name": {
                "en": "Sultan of Johor's Birthday",
                "ms": "Hari Keputeraan Sultan Johor"
              }
            },
            "1 Ramadan": {
              "_name": "1 Ramadan"
            },
            "17 Ramadan": false,
            "6 Safar": {
              "name": {
                "en": "Hari Hol of Sultan Iskandar of Johor",
                "ms": "Hari Hol Almarhum Sultan Iskandar"
              }
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "02": {
          "name": "Kedah",
          "days": {
            "01-01": false,
            "3rd Sunday in June": {
              "name": {
                "en": "Sultan of Kedah's Birthday",
                "ms": "Hari Keputeraan Sultan Kedah"
              }
            },
            "27 Rajab": {
              "_name": "27 Rajab"
            },
            "1 Ramadan": {
              "_name": "1 Ramadan"
            },
            "17 Ramadan": false,
            "11 Dhu al-Hijjah": {
              "_name": "10 Dhu al-Hijjah"
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "03": {
          "name": "Kelantan",
          "days": {
            "01-01": false,
            "11 Dhu al-Hijjah": {
              "_name": "10 Dhu al-Hijjah"
            },
            "11-11": {
              "name": {
                "en": "Sultan of Kelantan's Birthday",
                "ms": "Hari Keputeraan Sultan Kelantan"
              }
            },
            "11-12": {
              "name": {
                "en": "Sultan of Kelantan's Birthday",
                "ms": "Hari Keputeraan Sultan Kelantan"
              }
            }
          }
        },
        "04": {
          "name": "Malacca",
          "days": {
            "04-15": {
              "name": {
                "en": "Declaration of Malacca City as Historical City",
                "ms": "Hari Perisytiharan Bandar Melaka sebagai Bandaraya Bersejarah"
              }
            },
            "08-24": {
              "name": {
                "en": "Melaka State Governor's Birthday",
                "ms": "Hari Jadi Yang di-Pertua Negeri Melaka"
              }
            },
            "1 Ramadan": {
              "_name": "1 Ramadan"
            },
            "17 Ramadan": false
          }
        },
        "05": {
          "name": "Negeri Sembilan",
          "days": {
            "01-14": {
              "name": {
                "en": "Yang di-Pertuan Besar of Negeri Sembilan's Birthday",
                "ms": "Hari Keputeraan Yang di-Pertuan Besar Negeri Sembilan"
              }
            },
            "27 Rajab": {
              "_name": "27 Rajab"
            },
            "17 Ramadan": false,
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "06": {
          "name": "Pahang",
          "days": {
            "05-22": {
              "name": {
                "en": "Hari Hol of Pahang",
                "ms": "Hari Hol Pahang"
              }
            },
            "07-30": {
              "name": {
                "en": "Sultan of Pahang's Birthday",
                "ms": "Hari Keputeraan Sultan Pahang"
              }
            }
          }
        },
        "07": {
          "name": "Penang",
          "days": {
            "07-07": {
              "name": {
                "en": "Declaration of George Town as World Heritage Site",
                "id": "Hari Ulang Tahun Perisytiharan Tapak Warisan Dunia"
              }
            },
            "2nd Saturday in July": {
              "name": {
                "en": "Penang State Governor's Birthday",
                "ms": "Hari Jadi Yang di-Pertua Negeri Pulau Pinang"
              }
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "08": {
          "name": "Perak",
          "days": {
            "1st Friday in November": {
              "name": {
                "en": "Sultan of Perak's Birthday",
                "ms": "Hari Keputeraan Sultan Perak"
              }
            },
            "2016-01-24": {
              "_name": "Thaipusam"
            },
            "2017-02-10": {
              "_name": "Thaipusam"
            },
            "2018-01-31": {
              "_name": "Thaipusam"
            },
            "2019-01-21": {
              "_name": "Thaipusam"
            },
            "2020-02-08": {
              "_name": "Thaipusam"
            },
            "2021-01-28": {
              "_name": "Thaipusam"
            },
            "2022-01-18": {
              "_name": "Thaipusam"
            },
            "2023-02-05": {
              "_name": "Thaipusam"
            },
            "2024-01-25": {
              "_name": "Thaipusam"
            },
            "2025-02-11": {
              "_name": "Thaipusam"
            },
            "2026-02-01": {
              "_name": "Thaipusam"
            }
          }
        },
        "09": {
          "name": "Perlis",
          "days": {
            "01-01": false,
            "07-17": {
              "name": {
                "en": "Raja of Perlis's Birthday",
                "id": "Hari Keputeraan Raja Perlis"
              }
            },
            "27 Rajab": {
              "_name": "27 Rajab"
            },
            "11 Dhu al-Hijjah": {
              "_name": "10 Dhu al-Hijjah"
            }
          }
        }
      }
    },
    "MZ": {
      "names": {
        "pt": "Moçambique",
        "en": "Mozambique"
      },
      "dayoff": "sunday",
      "langs": [
        "pt"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01",
          "name": {
            "pt": "Dia da Fraternidade universal"
          }
        },
        "substitutes 01-01 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "02-03": {
          "name": {
            "pt": "Dia dos heróis moçambicanos",
            "en": "Heroes’ Day"
          }
        },
        "substitutes 02-03 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "04-07": {
          "name": {
            "pt": "Dia da Mulher Moçambicana",
            "en": "Women’s Day"
          }
        },
        "substitutes 04-07 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "pt": "Dia Internacional dos Trabalhadores",
            "en": "Workers' Day"
          }
        },
        "substitutes 05-01 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "1st sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-25": {
          "_name": "Independence Day",
          "name": {
            "pt": "Dia da Independência Nacional"
          }
        },
        "substitutes 06-25 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "09-07": {
          "name": {
            "pt": "Dia da Vitória",
            "en": "Lusaka Peace Agreement"
          }
        },
        "substitutes 09-07 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "09-25": {
          "name": {
            "pt": "Dia das Forças Armadas de Libertação Nacional",
            "en": "Defense Force’s Day"
          }
        },
        "substitutes 09-25 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "10-04": {
          "name": {
            "pt": "Dia da Paz e Reconciliação",
            "en": "Peace and Reconciliation Day"
          }
        },
        "substitutes 10-04 if sunday then next monday": {
          "_name": "Public Holiday"
        },
        "12-25": {
          "_name": "12-25",
          "name": {
            "pt": "Dia da Família",
            "en": "Family Day"
          }
        },
        "substitutes 12-25 if sunday then next monday": {
          "_name": "Public Holiday"
        }
      }
    },
    "NA": {
      "names": {
        "en": "Namibia"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Windhoek"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "03-21": {
          "_name": "Independence Day"
        },
        "substitutes 03-21 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Workers Day"
          }
        },
        "substitutes 05-01 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "05-04": {
          "name": {
            "en": "Cassinga Day"
          }
        },
        "substitutes 05-04 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "05-25": {
          "name": {
            "en": "Africa Day"
          }
        },
        "substitutes 05-25 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "08-26": {
          "name": {
            "en": "Heroes' Day"
          }
        },
        "substitutes 08-26 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "12-10": {
          "name": {
            "en": "Human Rights Day"
          }
        },
        "substitutes 12-10 if sunday then next monday": {
          "name": "Public Holiday"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "name": {
            "en": "Day of Goodwill"
          }
        },
        "substitutes 12-26 if sunday then next monday": {
          "name": "Public Holiday"
        }
      }
    },
    "NC": {
      "names": {
        "fr": "Nouvelle-Calédonie",
        "en": "New Caledonia"
      },
      "dayoff": "sunday",
      "zones": [
        "Pacific/Noumea"
      ],
      "langs": [
        "fr"
      ],
      "_days": "FR",
      "days": {
        "01-01": {
          "name": {
            "fr": "Jour de l'an"
          }
        },
        "09-24": {
          "name": {
            "fr": "Fête de la Citonneyeté",
            "en": "New Caledonia Day"
          }
        }
      }
    },
    "NE": {
      "names": {
        "fr": "République du Niger",
        "en": "Republic of the Niger"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "04-24": {
          "name": {
            "fr": "Journée Nationale de la Concorde",
            "en": "Concord Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "08-03": {
          "_name": "Independence Day",
          "name": {
            "fr": "Proclamation de l'indépendance"
          }
        },
        "12-18": {
          "name": {
            "fr": "Proclamation de la République",
            "en": "Republic Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "27 Ramadan": {
          "_name": "27 Ramadan"
        }
      }
    },
    "NG": {
      "names": {
        "en": "Nigeria"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Lagos"
      ],
      "dayoff": "Saturday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "05-01 and if Saturday then next Monday": {
          "substitute": true,
          "_name": "05-01",
          "name": {
            "en": "Worker's Day"
          }
        },
        "05-27": {
          "name": {
            "en": "Children's Day",
            "type": "school"
          }
        },
        "05-29 prior to 2018": {
          "name": {
            "en": "Democracy Day"
          }
        },
        "06-12 prior to 2018": {
          "name": {
            "en": "M.K.O Abiola Day"
          }
        },
        "06-12 and if Saturday then next Monday since 2018": {
          "substitute": true,
          "name": {
            "en": "Democracy Day"
          }
        },
        "10-01": {
          "_name": "Independence Day"
        },
        "11-01 since 2020": {
          "name": {
            "en": "National Youth Day"
          }
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P2D": {
          "_name": "1 Shawwal",
          "name": {
            "en": "Id el Fitr"
          }
        },
        "10 Dhu al-Hijjah P2D": {
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "en": "Id el Kabir"
          }
        }
      }
    },
    "NI": {
      "names": {
        "es": "Nicaragua",
        "en": "Nicaragua"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Managua"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-18": {
          "name": {
            "en": "Birthday of Rubén Darío",
            "es": "Natalicio de Rubén Darío"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-30": {
          "_name": "Mothers Day",
          "name": {
            "es": "Día de la madre nicaragüense"
          },
          "type": "observance"
        },
        "06-01": {
          "name": {
            "en": "Children's Day",
            "es": "Día del niño"
          }
        },
        "06-23": {
          "_name": "Fathers Day",
          "name": {
            "es": "Día del padre nicaragüense"
          },
          "type": "observance"
        },
        "07-19": {
          "name": {
            "en": "Revolution Day",
            "es": "Triunfo de la Revolución Popular"
          }
        },
        "09-14": {
          "name": {
            "en": "Battle of San Jacinto",
            "es": "Batalla de San Jacinto"
          }
        },
        "09-15": {
          "_name": "Independence Day"
        },
        "10-12": {
          "name": {
            "en": "Indigenous Resistance Day",
            "es": "Día de la resistencia indígena"
          }
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-24": {
          "_name": "12-24",
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        }
      }
    },
    "NL": {
      "names": {
        "nl": "Nederland",
        "en": "Netherlands",
        "de": "Niederlande",
        "fr": "Les Pays-Bas",
        "es": "Países Bajos",
        "it": "Paesi Bassi",
        "pt": "Países Baixos"
      },
      "dayoff": "sunday",
      "langs": [
        "nl"
      ],
      "zones": [
        "Europe/Amsterdam"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "school"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-27 if sunday then previous saturday since 2014": {
          "name": {
            "nl": "Koningsdag",
            "en": "King's Day",
            "de": "Königstag",
            "fr": "Fête du Roi",
            "es": "Día del Rey",
            "it": "Giorno del Re",
            "pt": "Dia do Rei"
          }
        },
        "04-30 if sunday then next monday since 1949 and prior to 1980": {
          "name": {
            "nl": "Koninginnedag",
            "en": "Queen's Day",
            "de": "Königinnentag",
            "fr": "Fête de la Reine",
            "es": "Día de la Reina",
            "it": "Giorno della Regina",
            "pt": "Dia da Rainha"
          }
        },
        "04-30 if sunday then previous saturday since 1980 and prior to 2014": {
          "name": {
            "nl": "Koninginnedag",
            "en": "Queen's Day",
            "de": "Königinnentag",
            "fr": "Fête de la Reine",
            "es": "Día de la Reina",
            "it": "Giorno della Regina",
            "pt": "Dia da Rainha"
          }
        },
        "05-04": {
          "name": {
            "nl": "Nationale Dodenherdenking",
            "en": "Remembrance of the Dead",
            "de": "Nationaler Totengedenktag",
            "fr": "Journée nationale du Souvenir",
            "es": "Día Nacional del Recuerdo",
            "it": "Giorno della Memoria Nazionale",
            "pt": "Dia Nacional da Memória"
          },
          "type": "observance"
        },
        "05-05": {
          "name": {
            "nl": "Bevrijdingsdag",
            "en": "Liberation Day",
            "de": "Befreiungstag",
            "fr": "Jour de la Libération",
            "es": "Día de la liberacion",
            "it": "Giorno della Liberazione",
            "pt": "Dia da Libertação"
          },
          "type": "school"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 39": {
          "_name": "easter 39",
          "name": {
            "nl": "Hemelvaartsdag",
            "en": "Ascension Day",
            "de": "Christi Himmelfahrt",
            "fr": "Jour de l'Ascension",
            "es": "Día de la Ascensión",
            "it": "Giorno dell'Ascensione",
            "pt": "Festa da Ascensão"
          }
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "08-31 since 1885 and prior to 1891": {
          "name": {
            "nl": "Prinsessedag",
            "en": "Princess Day",
            "de": "Prinzessinnentag",
            "fr": "Journée de la princesse",
            "es": "Día de la princesa",
            "it": "Giorno della principessa",
            "pt": "Dia da Princesa"
          }
        },
        "08-31 since 1891 and prior to 1949": {
          "name": {
            "nl": "Koninginnedag",
            "en": "Queen's Day",
            "de": "Königinnentag",
            "fr": "Fête de la Reine",
            "es": "Día de la Reina",
            "it": "Giorno della Regina",
            "pt": "Dia da Rainha"
          }
        },
        "3rd tuesday in September": {
          "name": {
            "nl": "Prinsjesdag",
            "en": "Prince's Day",
            "de": "Prinzentag",
            "fr": "Journée budgétaire",
            "es": "Día del presupuesto",
            "it": "Giornata del bilancio",
            "pt": "Dia do Príncipe"
          },
          "type": "observance"
        },
        "11-11": {
          "_name": "11-11",
          "type": "observance"
        },
        "12-05": {
          "name": {
            "nl": "Sinterklaasavond",
            "en": "St Nicholas' Eve",
            "de": "Nikolausabend",
            "fr": "Soirée Saint-Nicolas",
            "es": "Noche de Sinterklaas",
            "it": "Serata di Sinterklaas",
            "pt": "Noite de Sinterklaas"
          },
          "type": "observance"
        },
        "12-15": {
          "name": {
            "nl": "Koninkrijksdag",
            "en": "Kingdom Day",
            "de": "Königreichstag",
            "fr": "Jour du Royaume",
            "es": "Día del Reino",
            "it": "Giorno del Regno",
            "pt": "Dia do Reino"
          },
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      },
      "states": {
        "GR": {
          "names": {
            "nl": "Groningen",
            "en": "Groningen",
            "de": "Groningen",
            "fr": "Groningue",
            "es": "Groninga",
            "it": "Groninga"
          },
          "regions": {
            "GRN": {
              "names": {
                "nl": "Groningen",
                "en": "Groningen",
                "de": "Groningen",
                "fr": "Groningue",
                "es": "Groninga",
                "it": "Groninga"
              },
              "days": {
                "08-28": {
                  "name": {
                    "nl": "Gronings Ontzet",
                    "en": "Relief of Groningen",
                    "de": "Groninger Entsatz",
                    "fr": "Levée de siège de Groningue",
                    "es": "Alivio del asedio de Groninga",
                    "it": "Assedio revocato di Groninga"
                  },
                  "type": "observance"
                }
              }
            }
          }
        },
        "NH": {
          "names": {
            "nl": "Noord-Holland",
            "en": "North Holland",
            "de": "Noord-Holland",
            "fr": "Hollande-Septentrionale",
            "es": "Holanda Septentrional",
            "it": "Olanda Settentrionale"
          },
          "regions": {
            "ALK": {
              "name": "Alkmaar",
              "days": {
                "10-08": {
                  "name": {
                    "nl": "Alkmaars Ontzet",
                    "en": "Relief of Alkmaar",
                    "de": "Alkmaarder Entsatz",
                    "fr": "Levée de siège d’Alkmaar",
                    "es": "Alivio del asedio de Alkmaar",
                    "it": "Assedio revocato di Alkmaar"
                  },
                  "type": "observance"
                }
              }
            }
          }
        },
        "ZH": {
          "names": {
            "nl": "Zuid-Holland",
            "en": "South Holland",
            "de": "Zuid-Holland",
            "fr": "Hollande-Méridionale",
            "es": "Holanda Meridional",
            "it": "Olanda Meridionale"
          },
          "regions": {
            "BRL": {
              "name": "Brielle",
              "days": {
                "04-01": {
                  "name": {
                    "nl": "Inname van Den Briel",
                    "en": "Capture of Brielle",
                    "de": "Einname van Den Briel",
                    "fr": "Prise de La Brielle",
                    "es": "Toma de Brielle",
                    "it": "Presa di Brielle"
                  },
                  "type": "observance"
                }
              }
            },
            "LDN": {
              "names": {
                "nl": "Leiden",
                "en": "Leiden",
                "de": "Leiden",
                "fr": "Leyde",
                "es": "Leiden",
                "it": "Leida"
              },
              "days": {
                "10-03": {
                  "name": {
                    "nl": "Leids Ontzet",
                    "en": "Relief of Leiden",
                    "de": "Leidener Entsatz",
                    "fr": "Levée de siège de Leyde",
                    "es": "Alivio del asedio de Leiden",
                    "it": "Assedio revocato di Leida"
                  },
                  "type": "observance"
                }
              }
            }
          }
        }
      }
    },
    "NO": {
      "names": {
        "no": "Norge",
        "en": "Norway"
      },
      "dayoff": "sunday",
      "langs": [
        "no"
      ],
      "zones": [
        "Europe/Oslo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-21": {
          "name": {
            "no": "H.K.H. prinsesse Ingrid Alexandra",
            "en": "Birthday of Princess Ingrid Alexandra"
          },
          "type": "observance"
        },
        "02-06": {
          "name": {
            "no": "Samefolkets dag",
            "en": "Day of the Sami people"
          },
          "type": "observance"
        },
        "2nd sunday in February": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "02-14": {
          "_name": "02-14",
          "type": "observance"
        },
        "02-21": {
          "name": {
            "no": "H.M. kong Harald V",
            "en": "Birthday of King Harald V"
          },
          "type": "observance"
        },
        "easter -49": {
          "name": {
            "no": "Fastelavn",
            "en": "Carnival"
          },
          "type": "observance"
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "easter -7": {
          "_name": "easter -7",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-01": {
          "_name": "04-01",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-08": {
          "_name": "Liberation Day",
          "type": "observance"
        },
        "05-17": {
          "_name": "Constitution Day"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "06-07": {
          "name": {
            "no": "Unionsoppløsningen",
            "en": "Union Dissolution Day"
          },
          "type": "observance"
        },
        "06-23": {
          "name": {
            "no": "Sankthansaften",
            "en": "Midsummar Eve"
          },
          "type": "observance"
        },
        "07-04": {
          "name": {
            "no": "H.M. dronning Sonja",
            "en": "Birthday of Queen Sonja"
          },
          "type": "observance"
        },
        "07-20": {
          "name": {
            "no": "H.K.H. kronprins Haakon Magnus",
            "en": "Birthday of Crown Prince Haakon Magnus"
          },
          "type": "observance"
        },
        "07-29": {
          "name": {
            "no": "Olsok",
            "en": "Olsok"
          },
          "type": "optional"
        },
        "08-19": {
          "name": {
            "no": "H.K.H. kronprinsesse Mette-Marit",
            "en": "Birthday of Crown Princess Mette-Marit"
          },
          "type": "observance"
        },
        "1st sunday in November": {
          "name": {
            "no": "Allehelgensaften",
            "en": "All Saints' Day"
          },
          "type": "observance"
        },
        "2nd sunday in November": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "4th sunday before 12-25": {
          "name": {
            "no": "Første søndag i advent",
            "en": "First Sunday of Advent"
          },
          "type": "observance"
        },
        "3rd sunday before 12-25": {
          "name": {
            "no": "Andre søndag i advent",
            "en": "Second Sunday of Advent"
          },
          "type": "observance"
        },
        "2nd sunday before 12-25": {
          "name": {
            "no": "Tredje søndag i advent",
            "en": "Third Sunday of Advent"
          },
          "type": "observance"
        },
        "1st sunday before 12-25": {
          "name": {
            "no": "Fjerde søndag i advent",
            "en": "Fourth Sunday of Advent"
          },
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31 14:00 if sunday then 00:00": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "NZ": {
      "names": {
        "en": "New Zealand",
        "mi": "Aotearoa"
      },
      "dayoff": "sunday",
      "langs": [
        "en",
        "mi"
      ],
      "zones": [
        "Pacific/Auckland",
        "Pacific/Chatham"
      ],
      "days": {
        "01-01 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-02 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "name": {
            "en": "Day after New Year's Day"
          }
        },
        "02-06 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Waitangi Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-25 and if saturday,sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "ANZAC Day"
          }
        },
        "1st monday in June prior to 2023": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "1st monday in June since 2023": {
          "name": {
            "en": "King's Birthday"
          }
        },
        "4th monday in October": {
          "_name": "05-01"
        },
        "12-25 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if saturday then next monday if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-26"
        },
        "2022-06-24": {
          "name": {
            "en": "Matariki"
          }
        },
        "2023-07-14": {
          "name": {
            "en": "Matariki"
          }
        },
        "2024-06-28": {
          "name": {
            "en": "Matariki"
          }
        },
        "2025-06-20": {
          "name": {
            "en": "Matariki"
          }
        },
        "2026-07-10": {
          "name": {
            "en": "Matariki"
          }
        },
        "2027-06-25": {
          "name": {
            "en": "Matariki"
          }
        },
        "2028-07-14": {
          "name": {
            "en": "Matariki"
          }
        },
        "2029-07-06": {
          "name": {
            "en": "Matariki"
          }
        },
        "2030-06-21": {
          "name": {
            "en": "Matariki"
          }
        },
        "2031-07-11": {
          "name": {
            "en": "Matariki"
          }
        },
        "2032-07-02": {
          "name": {
            "en": "Matariki"
          }
        },
        "2033-06-24": {
          "name": {
            "en": "Matariki"
          }
        },
        "2034-07-07": {
          "name": {
            "en": "Matariki"
          }
        },
        "2035-06-29": {
          "name": {
            "en": "Matariki"
          }
        },
        "2036-07-18": {
          "name": {
            "en": "Matariki"
          }
        },
        "2037-07-10": {
          "name": {
            "en": "Matariki"
          }
        },
        "2038-06-25": {
          "name": {
            "en": "Matariki"
          }
        },
        "2039-07-15": {
          "name": {
            "en": "Matariki"
          }
        },
        "2040-07-06": {
          "name": {
            "en": "Matariki"
          }
        },
        "2041-07-19": {
          "name": {
            "en": "Matariki"
          }
        },
        "2042-07-11": {
          "name": {
            "en": "Matariki"
          }
        },
        "2043-07-03": {
          "name": {
            "en": "Matariki"
          }
        },
        "2044-06-24": {
          "name": {
            "en": "Matariki"
          }
        },
        "2045-07-07": {
          "name": {
            "en": "Matariki"
          }
        },
        "2046-06-29": {
          "name": {
            "en": "Matariki"
          }
        },
        "2047-07-19": {
          "name": {
            "en": "Matariki"
          }
        },
        "2048-07-03": {
          "name": {
            "en": "Matariki"
          }
        },
        "2049-06-25": {
          "name": {
            "en": "Matariki"
          }
        },
        "2050-07-15": {
          "name": {
            "en": "Matariki"
          }
        },
        "2051-06-30": {
          "name": {
            "en": "Matariki"
          }
        },
        "2052-06-21": {
          "name": {
            "en": "Matariki"
          }
        },
        "2022-09-26": {
          "name": {
            "en": "National Day of Mourning for Queen Elizabeth II"
          }
        }
      },
      "states": {
        "AUK": {
          "names": {
            "en": "Auckland Province",
            "mi": "Tāmaki-makau-rau"
          },
          "days": {
            "01-29 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "BOP": {
          "names": {
            "en": "Bay of Plenty",
            "mi": "Te Moana-a-Toi"
          },
          "days": {
            "01-29 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "CAN": {
          "names": {
            "en": "Canterbury",
            "mi": "Waitaha"
          },
          "days": {
            "friday after 2nd tuesday in November": {
              "name": {
                "en": "Christchurch Show Day"
              },
              "note": "May differ in parts of North Canterbury"
            }
          },
          "regions": {
            "Timaru": {
              "name": "Timaru District",
              "days": {
                "friday after 2nd tuesday in November": false,
                "4th monday in September": {
                  "name": {
                    "en": "Dominion Day"
                  }
                }
              }
            }
          }
        },
        "CIT": {
          "names": {
            "en": "Chatham Islands",
            "mi": "Wharekauri"
          },
          "days": {
            "11-30 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "GIS": {
          "names": {
            "en": "Gisborne",
            "mi": "Te Tai Rāwhiti"
          },
          "days": {
            "01-29 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "HKB": {
          "names": {
            "en": "Hawke's Bay",
            "mi": "Te Matau-a-Māui"
          },
          "days": {
            "friday before 4th monday in October": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "MBH": {
          "names": {
            "en": "Marlborough",
            "mi": "Te Tauihu-o-te-waka"
          },
          "days": {
            "5th monday in October": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "MWT": {
          "name": "Manawatu-Wanganui",
          "days": {
            "01-22 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "NSN": {
          "names": {
            "en": "Nelson",
            "mi": "Whakatū"
          },
          "days": {
            "02-01 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "NTL": {
          "names": {
            "en": "Northland",
            "mi": "Te Tai Tokerau"
          },
          "days": {
            "01-29 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "OTA": {
          "names": {
            "en": "Otago Province",
            "mi": "Ōtākou"
          },
          "days": {
            "03-23 if Tuesday,Wednesday,Thursday then previous Monday if Friday,Saturday,Sunday then next Monday if is public holiday then next Monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "STL": {
          "names": {
            "en": "Southland",
            "mi": "Murihiku"
          },
          "days": {
            "easter 2": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "TAS": {
          "names": {
            "en": "Tasman",
            "mi": "Te Tai-o-Aorere"
          },
          "days": {
            "02-01 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "TKI": {
          "name": "Taranaki",
          "days": {
            "2nd monday in March": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "WKO": {
          "name": "Waikato",
          "days": {
            "01-29 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "WGN": {
          "names": {
            "en": "Wellington Province",
            "mi": "Te Whanga-nui-a-Tara"
          },
          "days": {
            "01-22 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          }
        },
        "WTC": {
          "names": {
            "en": "Westland",
            "mi": "Te Tai Poutini"
          },
          "days": {
            "12-01 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
              "name": {
                "en": "Provincial anniversary day"
              }
            }
          },
          "regions": {
            "Buller": {
              "name": "Buller district",
              "days": {
                "12-01 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": false,
                "02-01 if tuesday,wednesday,thursday then previous monday if friday,saturday,sunday then next monday": {
                  "name": {
                    "en": "Provincial anniversary day"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PA": {
      "names": {
        "es": "Panamá",
        "en": "Panama"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Panama"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "01-09 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Martyrs' Day",
            "es": "Día de los Mártires Caídos en la Gesta Patriótica"
          }
        },
        "easter -48": {
          "_name": "easter -48",
          "type": "observance"
        },
        "easter -47": {
          "_name": "easter -47"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "07-01 every 5 years since 2014": {
          "name": {
            "en": "Presidential Inauguration"
          }
        },
        "11-03 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Separation Day (from Columbia)",
            "es": "Día de la Separación (de Colombia)"
          }
        },
        "11-10 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "es": "Primer Grito de Independencia"
          }
        },
        "11-28 and if sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "12-08 and if sunday then next monday": {
          "substitute": true,
          "_name": "Mothers Day"
        },
        "12-25 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        }
      }
    },
    "PE": {
      "names": {
        "es": "Perú",
        "en": "Peru"
      },
      "dayoff": "sunday",
      "langs": [
        "es",
        "qu"
      ],
      "zones": [
        "America/Lima"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-29": {
          "_name": "06-29"
        },
        "07-28": {
          "_name": "Independence Day"
        },
        "07-29": {
          "_name": "Independence Day"
        },
        "08-30": {
          "name": {
            "en": "Santa Rosa de Lima",
            "es": "Día de Santa Rosa de Lima"
          }
        },
        "10-08": {
          "name": {
            "en": "Battle of Angamos",
            "es": "Combate de Angamos"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        }
      },
      "regions": {
        "CUS": {
          "name": "Cuzco",
          "days": {
            "06-24": {
              "name": {
                "en": "Festival of the Sun",
                "es": "Fiesta Inca del Sol",
                "qu": "Inti Raymi"
              },
              "type": "observance"
            }
          }
        }
      }
    },
    "PH": {
      "names": {
        "en": "Philippines"
      },
      "langs": [
        "en",
        "fil"
      ],
      "zones": [
        "Asia/Manila"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-23": {
          "type": "observance",
          "name": {
            "en": "First Philippine Republic Day",
            "fil": "Araw ng Unang Republika ng Pilipinas"
          }
        },
        "chinese 01-0-01": {
          "type": "optional",
          "name": {
            "en": "Chinese New Year",
            "fil": "Bagong Taon ng mga Tsino"
          }
        },
        "02-02": {
          "type": "observance",
          "_name": "Constitution Day"
        },
        "chinese 01-0-15": {
          "type": "observance",
          "name": {
            "en": "Lantern Festival",
            "fil": "Piyesta ng mga Parol Tsino"
          }
        },
        "02-25": {
          "name": {
            "en": "EDSA Revolution Anniversary",
            "fil": "Anibersaryo ng Rebolusyon sa EDSA"
          },
          "type": "optional",
          "note": "Non-working Day"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1",
          "type": "optional",
          "note": "Non-working Day"
        },
        "easter": {
          "_name": "easter"
        },
        "04-09": {
          "name": {
            "en": "Day of Valor",
            "fil": "Araw ng Kagitingan"
          }
        },
        "04-27": {
          "type": "observance",
          "name": {
            "en": "Lapu-Lapu Day",
            "fil": "Araw ni Lapu-Lapu"
          }
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Labour Day",
            "fil": "Araw ng mga Manggagawa"
          }
        },
        "06-12": {
          "_name": "Independence Day"
        },
        "06-19": {
          "type": "observance",
          "name": {
            "en": "José Rizal's birthday",
            "fil": "Araw ng Kapanganakan ni José Rizal"
          },
          "active": [
            {
              "from": "1961-01-01T00:00:00.000Z"
            }
          ],
          "disable": [
            "2011-06-19"
          ]
        },
        "2011-06-19": {
          "name": {
            "en": "José Rizal's birthday",
            "fil": "Araw ng Kapanganakan ni José Rizal"
          }
        },
        "07-27": {
          "type": "observance",
          "name": {
            "en": "Iglesia ni Cristo Day",
            "fil": "Araw ng Iglesia ni Cristo"
          }
        },
        "08-21": {
          "name": {
            "en": "Ninoy Aquino Day",
            "fil": "Araw ng Kabayanihan ni Ninoy Aquino"
          },
          "type": "optional",
          "note": "Non-working Day"
        },
        "1st monday before September": {
          "name": {
            "en": "National Heroes' Day",
            "fil": "Araw ng mga Bayani"
          }
        },
        "chinese 08-0-15": {
          "type": "observance",
          "name": {
            "en": "Mid-Autumn Festival",
            "fil": "Piyestang Zhōngqiū Jié"
          }
        },
        "11-01": {
          "_name": "11-01",
          "type": "optional",
          "note": "Non-working Day"
        },
        "11-02": {
          "_name": "11-02",
          "type": "optional",
          "note": "Non-working Day"
        },
        "11-30": {
          "name": {
            "en": "Bonifacio Day",
            "fil": "Araw ng Kapanganakan ni Bonifacio"
          }
        },
        "12-08": {
          "_name": "12-08",
          "name": {
            "en": "Feast of the Immaculate Conception of the Blessed Virgin Mary",
            "fil": "Pagdiriwang ng Kalinis-linisang Paglilihi sa Mahal na Birheng Maria"
          },
          "type": "optional",
          "note": "Non-working Day"
        },
        "12-24": {
          "_name": "12-24",
          "type": "optional",
          "note": "Non-working Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-30": {
          "name": {
            "en": "Rizal Day",
            "fil": "Paggunita sa Kamatayan ni Dr. Jose Rizal"
          }
        },
        "12-31": {
          "_name": "12-31",
          "type": "optional",
          "note": "Non-working Day"
        },
        "1 Muharram": {
          "type": "observance",
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "type": "observance",
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "PL": {
      "names": {
        "pl": "Polska",
        "en": "Poland"
      },
      "dayoff": "sunday",
      "langs": [
        "pl"
      ],
      "zones": [
        "Europe/Warsaw"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06 since 2011": {
          "_name": "01-06"
        },
        "01-21": {
          "name": {
            "pl": "Dzień Babci",
            "en": "Grandmother's Day"
          },
          "type": "observance"
        },
        "01-22": {
          "name": {
            "pl": "Dzień Dziadka",
            "en": "Grandfather's Day"
          },
          "type": "observance"
        },
        "02-14": {
          "_name": "02-14",
          "type": "observance"
        },
        "02-19 since 2020": {
          "name": {
            "pl": "Dzień Nauki Polskiej",
            "en": "Polish Science Day"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "03-01 since 2011": {
          "name": {
            "pl": "Narodowy Dzień Pamięci „Żołnierzy Wyklętych”",
            "en": "National Cursed Soldiers Remembrance Day"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "Thursday before easter -46": {
          "name": {
            "pl": "Tłusty Czwartek",
            "en": "Fat Thursday"
          },
          "type": "observance"
        },
        "easter -47": {
          "_name": "easter -47",
          "type": "observance"
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "03-10": {
          "name": {
            "pl": "Dzień Mężczyzny",
            "en": "Men's Day"
          },
          "type": "observance"
        },
        "03-21": {
          "name": {
            "pl": "Pierwszy Dzień Wiosny / Dzień Wagarowicza",
            "en": "First Day of Spring / Truant's Day"
          },
          "type": "observance"
        },
        "03-24 since 2018": {
          "name": {
            "pl": "Narodowy Dzień Pamięci Polaków ratujących Żydów pod okupacją niemiecką",
            "en": "National Day for the Remembrance of Poles Rescuing Jews under German Occupation"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "04-14 since 2019": {
          "name": {
            "pl": "Święto Chrztu Polski",
            "en": "Baptism of Poland Day"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "easter -7": {
          "_name": "easter -7",
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "school",
          "note": "Religious holiday - a working day, but schools are closed"
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "school",
          "note": "Religious holiday - a working day, but schools are closed"
        },
        "easter -1": {
          "_name": "easter -1",
          "type": "observance"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-19": {
          "name": {
            "pl": "Dzień Pamięci Ofiar Holocaustu i Powstania w Getcie Warszawskim",
            "en": "Warsaw Ghetto Uprising Remembrance Day"
          },
          "type": "observance"
        },
        "04-22": {
          "name": {
            "pl": "Dzień Ziemi",
            "en": "International Mother Earth Day"
          },
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "pl": "Święto Państwowe; Święto Pracy"
          }
        },
        "05-02 since 2004": {
          "name": {
            "pl": "Dzień Flagi Rzeczypospolitej Polskiej",
            "en": "Flag Day"
          },
          "type": "optional",
          "note": "Declared by statue"
        },
        "05-03": {
          "name": {
            "pl": "Święto Narodowe Trzeciego Maja",
            "en": "Constitution Day"
          }
        },
        "05-08 since 2015": {
          "name": {
            "pl": "Narodowy Dzień Zwycięstwa",
            "en": "National Victory Day"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "05-09": {
          "_name": "05-09",
          "type": "observance"
        },
        "05-26": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-01": {
          "name": {
            "pl": "Dzień Dziecka",
            "en": "Children's Day"
          },
          "type": "observance"
        },
        "06-12 since 2017": {
          "name": {
            "pl": "Dzień Walki i Męczeństwa Wsi Polskiej",
            "en": "Day of Struggle and Martyrdom of the Polish Villages"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "06-23": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "08-01 since 2009": {
          "name": {
            "pl": "Narodowy Dzień Pamięci Powstania Warszawskiego",
            "en": "National Warsaw Uprising Remembrance Day"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "08-15": {
          "_name": "08-15"
        },
        "08-31 since 2005": {
          "name": {
            "pl": "Dzień Solidarności i Wolności",
            "en": "Day of Solidarity and Freedom"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "09-01": {
          "name": {
            "pl": "Rocznica wybuchu II wojny światowej",
            "en": "Anniversary of the outbreak of the Second World War in Poland"
          },
          "type": "observance"
        },
        "09-17": {
          "name": {
            "pl": "Rocznica agresji ZSRR na Polskę",
            "en": "Anniversary of the Soviet invasion of Poland"
          },
          "type": "observance"
        },
        "09-30": {
          "name": {
            "pl": "Dzień Chłopaka",
            "en": "Boy's Day"
          },
          "type": "observance"
        },
        "10-19 since 2018": {
          "name": {
            "pl": "Narodowy Dzień Pamięci Duchownych Niezłomnych",
            "en": "National Day of Remembrance for Steadfast Clergy"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-11": {
          "_name": "Independence Day"
        },
        "12-06": {
          "_name": "12-06",
          "type": "observance"
        },
        "12-24 since 2025": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-27 since 2021": {
          "name": {
            "pl": "Narodowy Dzień Pamięci Zwycięskiego Powstania Wielkopolskiego",
            "en": "Greater Poland Uprising Remebrence Day"
          },
          "type": "observance",
          "note": "National holiday, although not a public holiday"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        }
      }
    },
    "PM": {
      "names": {
        "en": "St. Pierre & Miquelon"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "America/Miquelon"
      ],
      "dayoff": "sunday",
      "days": {},
      "_days": "FR"
    },
    "PR": {
      "names": {
        "en": "Puerto Rico"
      },
      "langs": [
        "es",
        "en"
      ],
      "zones": [
        "America/Puerto_Rico"
      ],
      "dayoff": "sunday",
      "_days": "US",
      "days": {
        "01-06": {
          "_name": "01-06"
        },
        "2nd Monday in January": {
          "name": {
            "es": "Natalicio de Eugenio María de Hostos",
            "en": "Birthday of Eugenio María de Hostos"
          }
        },
        "02-18": {
          "name": {
            "es": "Natalicio de Luis Muñoz Marín",
            "en": "Birthday of Luis Muñoz Marín"
          }
        },
        "03-02 since 2017": {
          "name": {
            "es": "Día de la Ciudadanía Americana",
            "en": "American Citizenship Day"
          }
        },
        "03-17": false,
        "03-22": {
          "name": {
            "es": "Día de la Abolición de Esclavitud",
            "en": "Emancipation Day"
          }
        },
        "04-16": {
          "name": {
            "es": "Natalicio de José de Diego",
            "en": "Birthday of José de Diego"
          }
        },
        "3rd Monday in July": {
          "name": {
            "es": "Natalicio de Don Luis Muñoz Rivera",
            "en": "Birthday of Don Luis Muñoz Rivera"
          }
        },
        "07-25": {
          "name": {
            "es": "Constitución de Puerto Rico",
            "en": "Puerto Rico Constitution Day"
          }
        },
        "07-27": {
          "name": {
            "es": "Natalicio de Dr. José Celso Barbosa",
            "en": "Birthday of Dr. José Celso Barbosa"
          }
        },
        "11-19": {
          "name": {
            "es": "Día del Descubrimiento de Puerto Rico",
            "en": "Discovery of Puerto Rico"
          }
        }
      }
    },
    "PT": {
      "names": {
        "pt": "Portugal",
        "en": "Portugal"
      },
      "dayoff": "sunday",
      "langs": [
        "pt"
      ],
      "zones": [
        "Europe/Lisbon",
        "Atlantic/Madeira",
        "Atlantic/Azores"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -47": {
          "_name": "easter -47",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "04-25": {
          "name": {
            "pt": "Dia da Liberdade",
            "en": "Liberty Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "1st sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "06-10": {
          "name": {
            "pt": "Dia de Portugal",
            "en": "Portugal Day"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "10-05": {
          "name": {
            "pt": "Implantação da República"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-01": {
          "name": {
            "pt": "Restauração da Independência"
          }
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-24": {
          "_name": "12-24",
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        }
      }
    },
    "PY": {
      "names": {
        "es": "Paraguay",
        "en": "Paraguay"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Asuncion"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "03-01": {
          "disable": [
            "2017-03-01"
          ],
          "enable": [
            "2017-02-27"
          ],
          "name": {
            "en": "Heroes' Day",
            "es": "Dia de los héroes"
          }
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "04-30": {
          "name": {
            "en": "Teacher's Day",
            "es": "Día del Maestro"
          },
          "type": "optional",
          "note": "Affects educational institutions"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-14": {
          "_name": "Independence Day"
        },
        "05-15": {
          "_name": "Independence Day"
        },
        "06-12": {
          "name": {
            "en": "Chaco Armistice",
            "es": "Día de la Paz del Chaco"
          },
          "disable": [
            "2020-06-12"
          ],
          "enable": [
            "2020-06-15"
          ]
        },
        "08-15": {
          "_name": "08-15",
          "disable": [
            "2017-08-15"
          ],
          "enable": [
            "2017-08-14"
          ]
        },
        "09-29": {
          "disable": [
            "2017-09-29"
          ],
          "enable": [
            "2017-10-02"
          ],
          "name": {
            "en": "Boqueron Battle Victory Day",
            "es": "Victoria de Boquerón"
          }
        },
        "12-08": {
          "_name": "12-08",
          "name": {
            "en": "Virgin of Caacupe",
            "es": "Virgen de Caacupé"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "RE": {
      "names": {
        "fr": "Réunion",
        "en": "Réunion"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "Indian/Reunion"
      ],
      "dayoff": "",
      "_days": "FR",
      "days": {
        "12-20": {
          "_name": "Abolition of Slavery"
        }
      }
    },
    "RO": {
      "names": {
        "ro": "Romania",
        "en": "Romania"
      },
      "dayoff": "sunday",
      "langs": [
        "ro"
      ],
      "zones": [
        "Europe/Bucharest"
      ],
      "days": {
        "01-01 P2DT": {
          "name": {
            "ro": "Anul nou",
            "en": "New Year's Day"
          }
        },
        "01-06": {
          "name": {
            "ro": "Bobotează",
            "en": "Epiphany"
          }
        },
        "01-07": {
          "name": {
            "ro": "Sfântul Ion",
            "en": "Saint John the Baptist"
          }
        },
        "01-24": {
          "name": {
            "ro": "Ziua Unirii Principatelor Române",
            "en": "Day of the Unification of the Romanian Principalities"
          }
        },
        "03-08": {
          "name": {
            "ro": "Ziua Mamei",
            "en": "Mother's Day"
          },
          "type": "observance"
        },
        "orthodox -2": {
          "_name": "easter -2"
        },
        "orthodox": {
          "_name": "easter"
        },
        "orthodox 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "orthodox 39": {
          "_name": "easter 39",
          "type": "observance"
        },
        "orthodox 49": {
          "_name": "easter 49"
        },
        "orthodox 50": {
          "_name": "easter 50"
        },
        "Sunday before 06-01": {
          "name": {
            "ro": "Ziua Românilor de Pretutindeni, Ziua Românului de Pretutindeni",
            "en": "Day of the Romanians Everywhere, Romanian Businessperson Day"
          },
          "type": "observance"
        },
        "06-01": {
          "name": {
            "ro": "Ziua Copilului",
            "en": "Children's Day"
          }
        },
        "06-26": {
          "name": {
            "ro": "Ziua drapelului national",
            "en": "Flag Day"
          },
          "type": "observance"
        },
        "07-29": {
          "name": {
            "ro": "Ziua Imnului național",
            "en": "National Anthem Day"
          },
          "type": "observance"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-30": {
          "name": {
            "ro": "Sfântul Andrei",
            "en": "St Andrew's Day"
          }
        },
        "12-01": {
          "name": {
            "ro": "Ziua națională, Ziua Marii Uniri",
            "en": "National holiday"
          }
        },
        "12-08": {
          "_name": "Constitution Day",
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "RS": {
      "names": {
        "sr": "Република Србија",
        "en": "Serbia"
      },
      "langs": [
        "sr"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 if sunday then next tuesday": {
          "_name": "01-01"
        },
        "01-02 if sunday then next monday": {
          "_name": "01-01"
        },
        "julian 12-25": {
          "_name": "julian 12-25"
        },
        "02-15 if sunday then next tuesday": {
          "name": {
            "sr": "Дан државности Србије",
            "en": "Statehood Day"
          }
        },
        "02-16 if sunday then next monday": {
          "name": {
            "sr": "Дан државности Србије",
            "en": "Statehood Day"
          }
        },
        "orthodox -2": {
          "_name": "orthodox -2"
        },
        "orthodox": {
          "_name": "orthodox"
        },
        "orthodox 1": {
          "_name": "orthodox 1"
        },
        "05-01 if sunday then next tuesday": {
          "_name": "05-01"
        },
        "05-02 if sunday then next monday": {
          "_name": "05-01"
        },
        "11-11 if sunday then next monday": {
          "name": {
            "sr": "Дан примирја",
            "en": "Armistice Day"
          }
        },
        "easter -2": {
          "_name": "easter -2",
          "type": "optional",
          "note": "Catholic believers"
        },
        "easter": {
          "_name": "easter",
          "type": "optional",
          "note": "Catholic believers"
        },
        "easter 1": {
          "_name": "easter 1",
          "type": "optional",
          "note": "Catholic believers"
        },
        "12-25": {
          "_name": "12-25",
          "type": "optional",
          "note": "Catholic believers"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "type": "optional",
          "note": "Muslim believers"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "type": "optional",
          "note": "Muslim believers"
        },
        "10 Tishrei": {
          "_name": "10 Tishrei",
          "type": "optional",
          "note": "Jewish believers"
        },
        "julian 01-14": {
          "name": {
            "sr": "Свети Сава",
            "en": "Saint Sava Day"
          },
          "type": "observance"
        },
        "04-22": {
          "name": {
            "sr": "Дан сећања на жртве холокауста",
            "en": "Holocaust Remembrance Day"
          },
          "type": "observance"
        },
        "05-09": {
          "name": {
            "sr": "Дан победе",
            "en": "Victory Day"
          },
          "type": "observance"
        },
        "julian 06-15": {
          "name": {
            "sr": "Видовдан",
            "en": "Saint Vitus Day"
          },
          "type": "observance"
        },
        "10-21": {
          "name": {
            "sr": "Дан сећања на српске жртве у Другом светском рату",
            "en": "World War II Serbian Victims Remembrance Day"
          },
          "type": "observance"
        }
      }
    },
    "RU": {
      "names": {
        "ru": "Россия",
        "en": "Russia"
      },
      "dayoff": "sunday",
      "langs": [
        "ru"
      ],
      "zones": [
        "Europe/Moscow",
        "Europe/Kaliningrad",
        "Europe/Simferopol",
        "Europe/Volgograd",
        "Europe/Samara",
        "Asia/Yekaterinburg",
        "Asia/Omsk",
        "Asia/Novosibirsk",
        "Asia/Novokuznetsk",
        "Asia/Krasnoyarsk",
        "Asia/Irkutsk",
        "Asia/Chita",
        "Asia/Yakutsk",
        "Asia/Khandyga",
        "Asia/Vladivostok",
        "Asia/Sakhalin",
        "Asia/Ust-Nera",
        "Asia/Magadan",
        "Asia/Srednekolymsk",
        "Asia/Kamchatka",
        "Asia/Anadyr"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02 P5D": {
          "name": {
            "ru": "Новогодние каникулы",
            "en": "New Year Holiday"
          }
        },
        "julian 12-25": {
          "_name": "12-25"
        },
        "01-08": {
          "name": {
            "ru": "Новогодние каникулы",
            "en": "New Year Holiday"
          }
        },
        "02-23": {
          "name": {
            "ru": "День защитника Отечества",
            "en": "Defender of the Fatherland Day"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "05-01": {
          "name": {
            "ru": "День весны и труда",
            "en": "Spring and Labour Day"
          }
        },
        "05-09": {
          "name": {
            "ru": "День Победы",
            "en": "Victory Day"
          }
        },
        "06-12": {
          "name": {
            "ru": "День России",
            "en": "Russia Day"
          }
        },
        "11-04": {
          "name": {
            "ru": "День народного единства",
            "en": "Unity Day"
          }
        }
      }
    },
    "RW": {
      "names": {
        "en": "Rwanda",
        "fr": "République du Rwanda",
        "rw": "Repubulika y'u Rwanda"
      },
      "dayoff": "sunday",
      "langs": [
        "en",
        "fr",
        "rw"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02": {
          "_name": "Public Holiday"
        },
        "02-01": {
          "name": {
            "en": "Heroes Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "04-07": {
          "name": {
            "fr": "Jour de Mémorial du Génocide",
            "en": "Genocide Memorial Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-01": {
          "_name": "Independence Day"
        },
        "07-04": {
          "name": {
            "fr": "Jour de la Libération",
            "en": "Liberation Day"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "1st friday in August": {
          "name": {
            "rw": "Umuganura",
            "fr": "Journée nationale de récolte",
            "en": "National Harvest Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "SA": {
      "names": {
        "ar": "المملكة العربية السعودية",
        "en": "Saudi Arabia"
      },
      "langs": [
        "ar",
        "en"
      ],
      "zones": [
        "Asia/Riyadh"
      ],
      "dayoff": "Saturday",
      "days": {
        "02-22 since 2022": {
          "name": {
            "ar": "يوم التأسيس",
            "en": "Founding Day"
          }
        },
        "09-23 since 2005": {
          "name": {
            "ar": "اليوم الوطني",
            "en": "National Day"
          }
        },
        "29 Ramadan P4D": {
          "_name": "1 Shawwal"
        },
        "9 Dhu al-Hijjah P4D": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "SC": {
      "names": {
        "en": "Seychelles",
        "fr": "République des Seychelles",
        "crs": "Repiblik Sesel"
      },
      "langs": [
        "en",
        "fr",
        "crs"
      ],
      "zones": [
        "Indian/Mahe"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 P2D": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-18": {
          "_name": "National Holiday"
        },
        "06-29": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        }
      }
    },
    "SD": {
      "names": {
        "ar": "جمهورية السودان",
        "en": "Sudan"
      },
      "langs": [],
      "zones": [
        "Africa/Khartoum"
      ],
      "dayoff": "",
      "days": {
        "01-01": {
          "_name": "Independence Day"
        },
        "12-19": {
          "_name": "Revolution Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal P4D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah P3D": {
          "_name": "10 Dhu al-Hijjah"
        },
        "julian 12-25": {
          "_name": "julian 12-25",
          "name": {
            "en": "Coptic Christmas"
          }
        },
        "orthodox": {
          "_name": "orthodox",
          "name": {
            "en": "Coptic Easter"
          }
        }
      }
    },
    "SE": {
      "names": {
        "sv": "Sverige",
        "en": "Sweden"
      },
      "dayoff": "sunday",
      "langs": [
        "sv"
      ],
      "zones": [
        "Europe/Stockholm"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-05 12:00": {
          "name": {
            "sv": "Trettondagsafton",
            "en": "Twelfth Night"
          },
          "type": "optional"
        },
        "01-06": {
          "_name": "01-06"
        },
        "01-13": {
          "name": {
            "sv": "Tjugondag Knut",
            "en": "Saint Knut's Day"
          },
          "type": "observance"
        },
        "1st sunday in March": {
          "name": {
            "sv": "Vasaloppet"
          },
          "type": "observance"
        },
        "03-25": {
          "name": {
            "sv": "Marie Bebådelsedag",
            "en": "Annunciation Day",
            "lat": "Annuntiatio Mariæ"
          },
          "type": "observance"
        },
        "04-30 12:00": {
          "name": {
            "sv": "Valborgsmässoafton",
            "en": "Walpurgis Night"
          },
          "type": "optional"
        },
        "easter -3": {
          "_name": "easter -3",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter -1": {
          "_name": "easter -1",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 48": {
          "name": {
            "sv": "Pingstafton",
            "en": "Whitsun Eve"
          },
          "type": "observance"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "public"
        },
        "easter 50": {
          "_name": "easter 50",
          "type": "observance"
        },
        "sunday before 06-01": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-06": {
          "name": {
            "sv": "Sveriges nationaldag",
            "en": "National Day"
          }
        },
        "friday after 06-19": {
          "name": {
            "sv": "Midsommarafton",
            "en": "Midsummer Eve",
            "fi": "Juhannusaatto"
          },
          "type": "bank"
        },
        "saturday after 06-20": {
          "name": {
            "sv": "Midsommardagen",
            "en": "Midsummer Day",
            "fi": "Juhannuspäivä"
          }
        },
        "friday after 10-30 12:00": {
          "name": {
            "sv": "Allhelgonaafton",
            "en": "Halloween"
          },
          "type": "optional"
        },
        "saturday after 10-31": {
          "_name": "11-01"
        },
        "11-06": {
          "name": {
            "sv": "Gustav-Adolf-dagen",
            "en": "Gustavus Adolphus Day"
          },
          "type": "observance"
        },
        "11-11": {
          "name": {
            "sv": "Mårtensgås",
            "en": "Saint Martin's Day"
          },
          "type": "observance"
        },
        "12-10": {
          "name": {
            "sv": "Nobeldagen",
            "en": "Nobel Day"
          },
          "type": "observance"
        },
        "12-13": {
          "name": {
            "sv": "Luciadagen",
            "en": "Saint Lucy's Day"
          },
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24",
          "type": "bank"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31": {
          "_name": "12-31",
          "type": "bank"
        }
      }
    },
    "SG": {
      "names": {
        "en": "Singapore"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Asia/Singapore"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "chinese 01-0-01": {
          "name": {
            "en": "Chinese New Year"
          }
        },
        "chinese 01-0-02": {
          "name": {
            "en": "Chinese New Year"
          }
        },
        "substitutes chinese 01-0-01 if sunday then next tuesday": {
          "substitute": true,
          "name": {
            "en": "Chinese New Year"
          }
        },
        "substitutes chinese 01-0-02 if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Chinese New Year"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "05-01": {
          "_name": "05-01"
        },
        "substitutes 05-01 if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "08-09": {
          "name": {
            "en": "National Day"
          }
        },
        "substitutes 08-09 if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "National Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal",
          "name": {
            "en": "Hari Raya Puasa"
          },
          "disable": [
            "2022-05-02",
            "2023-04-21",
            "2024-04-09",
            "2025-03-30"
          ],
          "enable": [
            "2022-05-03",
            "2023-04-22",
            "2024-04-10",
            "2025-03-31"
          ]
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "en": "Hari Raya Haji"
          },
          "disable": [
            "2022-07-09",
            "2023-06-28",
            "2024-06-29",
            "2025-06-06"
          ],
          "enable": [
            "2022-07-10",
            "2023-06-29",
            "2024-06-17",
            "2025-06-07"
          ]
        },
        "2001-05-07": {
          "_name": "Vesak"
        },
        "2002-05-27": {
          "_name": "Vesak"
        },
        "2003-05-15": {
          "_name": "Vesak"
        },
        "2004-06-02": {
          "_name": "Vesak"
        },
        "2005-05-23": {
          "_name": "Vesak"
        },
        "2006-05-12": {
          "_name": "Vesak"
        },
        "2007-05-31": {
          "_name": "Vesak"
        },
        "2008-05-19": {
          "_name": "Vesak"
        },
        "2009-05-09": {
          "_name": "Vesak"
        },
        "2010-05-28": {
          "_name": "Vesak"
        },
        "2011-05-17": {
          "_name": "Vesak"
        },
        "2012-05-05": {
          "_name": "Vesak"
        },
        "2013-05-24": {
          "_name": "Vesak"
        },
        "2014-05-13": {
          "_name": "Vesak"
        },
        "2015-06-01": {
          "_name": "Vesak"
        },
        "2016-05-21": {
          "_name": "Vesak"
        },
        "2017-05-10": {
          "_name": "Vesak"
        },
        "2018-05-29": {
          "_name": "Vesak"
        },
        "2019-05-19": {
          "_name": "Vesak"
        },
        "2019-05-20": {
          "substitute": true,
          "_name": "Vesak"
        },
        "2020-05-07": {
          "_name": "Vesak"
        },
        "2021-05-26": {
          "_name": "Vesak"
        },
        "2022-05-15": {
          "_name": "Vesak"
        },
        "2022-05-16": {
          "substitute": true,
          "_name": "Vesak"
        },
        "2023-06-02": {
          "_name": "Vesak"
        },
        "2024-05-22": {
          "_name": "Vesak"
        },
        "2000-10-26": {
          "_name": "Deepavali"
        },
        "2001-11-14": {
          "_name": "Deepavali"
        },
        "2002-11-03": {
          "_name": "Deepavali"
        },
        "2002-11-04": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2003-10-23": {
          "_name": "Deepavali"
        },
        "2004-11-11": {
          "_name": "Deepavali"
        },
        "2005-11-01": {
          "_name": "Deepavali"
        },
        "2006-10-21": {
          "_name": "Deepavali"
        },
        "2007-11-08": {
          "_name": "Deepavali"
        },
        "2008-10-27": {
          "_name": "Deepavali"
        },
        "2009-10-17": {
          "_name": "Deepavali"
        },
        "2010-11-05": {
          "_name": "Deepavali"
        },
        "2011-10-26": {
          "_name": "Deepavali"
        },
        "2012-11-13": {
          "_name": "Deepavali"
        },
        "2013-11-03": {
          "_name": "Deepavali"
        },
        "2013-11-04": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2014-10-22": {
          "_name": "Deepavali"
        },
        "2015-11-10": {
          "_name": "Deepavali"
        },
        "2016-10-29": {
          "_name": "Deepavali"
        },
        "2017-10-18": {
          "_name": "Deepavali"
        },
        "2018-11-06": {
          "_name": "Deepavali"
        },
        "2019-10-27": {
          "_name": "Deepavali"
        },
        "2019-10-28": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2020-11-14": {
          "_name": "Deepavali"
        },
        "2021-11-04": {
          "_name": "Deepavali"
        },
        "2022-10-24": {
          "_name": "Deepavali"
        },
        "2023-11-13": {
          "_name": "Deepavali"
        },
        "2024-10-31": {
          "_name": "Deepavali"
        },
        "2025-10-20": {
          "_name": "Deepavali"
        },
        "2026-11-09": {
          "_name": "Deepavali"
        },
        "2027-10-28": {
          "_name": "Deepavali"
        },
        "2028-11-15": {
          "_name": "Deepavali"
        },
        "2029-11-05": {
          "_name": "Deepavali"
        },
        "2030-10-25": {
          "_name": "Deepavali"
        },
        "2023-09-1": {
          "name": {
            "en": "Presidential Election Day"
          },
          "type": "public"
        }
      }
    },
    "SH": {
      "names": {
        "en": "St. Helena"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "substitutes 01-01 if saturday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "3rd monday in April": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "05-21": {
          "name": {
            "en": "Saint Helena Day"
          }
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "monday before 09-01": {
          "name": {
            "en": "August Bank Holiday"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "substitutes 12-25 if saturday then next tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "substitutes 12-25 if sunday then next tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "substitutes 12-26 if saturday then next monday": {
          "substitute": true,
          "_name": "12-26"
        },
        "substitutes 12-26 if sunday then next monday": {
          "substitute": true,
          "_name": "12-26"
        }
      },
      "states": {
        "AC": {
          "name": "Ascension Island",
          "days": {
            "easter 39": {
              "_name": "easter 39"
            }
          }
        },
        "HL": {
          "name": "Saint Helena",
          "days": {}
        },
        "TA": {
          "name": "Tristan da Cunha",
          "days": {
            "easter 39": {
              "_name": "easter 39"
            },
            "2012-04-23": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "2013-05-03": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "2014-05-02": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "2015-05-16": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "2016-04-30": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "2017-05-26": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "2018-06-02": {
              "name": {
                "en": "Ratting Day"
              }
            },
            "08-14": {
              "name": {
                "en": "Anniversary Day"
              }
            },
            "monday before 09-01": false
          }
        }
      }
    },
    "SI": {
      "names": {
        "sl": "Republika Slovenija",
        "en": "Slovenia"
      },
      "langs": [
        "sl"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02": {
          "_name": "01-01",
          "active": [
            {
              "to": 1955
            },
            {
              "from": 2017
            }
          ]
        },
        "02-08": {
          "name": {
            "en": "Prešeren Day, the Slovenian Cultural Holiday",
            "sl": "Prešernov dan, slovenski kulturni praznik"
          },
          "active": [
            {
              "from": 1991
            }
          ]
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "04-23": {
          "name": {
            "sl": "Jurjevanje",
            "en": "St. George's Day"
          },
          "type": "observance"
        },
        "easter -49": {
          "name": {
            "sl": "Pust",
            "en": "Carnival"
          },
          "type": "observance"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-27": {
          "name": {
            "sl": "Dan upora proti okupatorju",
            "en": "Day of Uprising Against Occupation"
          }
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Labour Day"
          },
          "active": [
            {
              "from": 1949
            }
          ]
        },
        "05-02": {
          "_name": "05-01",
          "name": {
            "en": "Labour Day"
          },
          "active": [
            {
              "from": 1949
            }
          ]
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "06-08": {
          "name": {
            "sl": "Dan Primoža Trubarja",
            "en": "Primož Trubar Day"
          },
          "type": "observance",
          "active": [
            {
              "from": 2010
            }
          ]
        },
        "06-25": {
          "name": {
            "sl": "Dan državnosti",
            "en": "Statehood Day"
          },
          "active": [
            {
              "from": 1991
            }
          ]
        },
        "08-15": {
          "_name": "08-15",
          "active": [
            {
              "from": 1992
            }
          ]
        },
        "08-17": {
          "name": {
            "sl": "Združitev prekmurskih Slovencev z matičnim narodom",
            "en": "Unification of Prekmurje Slovenes with the Mother Nation"
          },
          "type": "observance",
          "active": [
            {
              "from": 2006
            }
          ]
        },
        "09-15": {
          "name": {
            "sl": "Vrnitev Primorske k matični domovini",
            "en": "Return of Primorska to the Motherland"
          },
          "type": "observance",
          "active": [
            {
              "from": 2005
            }
          ]
        },
        "09-23": {
          "name": {
            "sl": "Dan slovenskega športa",
            "en": "Slovenian Sports Day"
          },
          "type": "observance",
          "active": [
            {
              "from": 2020
            }
          ]
        },
        "10-25": {
          "name": {
            "sl": "Dan suverenosti",
            "en": "Sovereignty Day"
          },
          "type": "observance",
          "active": [
            {
              "from": 2015
            }
          ]
        },
        "10-31": {
          "name": {
            "sl": "Dan reformacije",
            "en": "Reformation Day"
          }
        },
        "11-01": {
          "name": {
            "sl": "Dan spomina na mrtve",
            "en": "Day of Remembrance for the Dead"
          }
        },
        "11-11": {
          "name": {
            "sl": "Martinovanje",
            "en": "St. Martin's Day"
          },
          "type": "observance"
        },
        "11-23": {
          "name": {
            "sl": "Dan Rudolfa Maistra",
            "en": "Rudolf Maister Day"
          },
          "type": "observance",
          "active": [
            {
              "from": 2015
            }
          ]
        },
        "12-06": {
          "name": {
            "sl": "Miklavž",
            "en": "Saint Nicholas Day"
          },
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25",
          "active": [
            {
              "to": 1953
            },
            {
              "from": 1991
            }
          ]
        },
        "12-26": {
          "name": {
            "sl": "Dan samostojnosti in enotnosti",
            "en": "Independence and Unity Day"
          }
        }
      }
    },
    "SJ": {
      "names": {
        "en": "Svalbard & Jan Mayen"
      },
      "langs": [
        "no"
      ],
      "zones": [
        "Europe/Oslo"
      ],
      "dayoff": "sunday",
      "_days": "NO"
    },
    "SK": {
      "names": {
        "sk": "Slovenská republika",
        "en": "Slovakia"
      },
      "langs": [
        "sk"
      ],
      "zones": [
        "Europe/Prague"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01",
          "name": {
            "sk": "Deň vzniku Slovenskej republiky"
          }
        },
        "01-06": {
          "_name": "01-06"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-08": {
          "name": {
            "sk": "Deň víťazstva nad fašizmom",
            "en": "Day of victory over fascism"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "07-05": {
          "name": {
            "sk": "Sviatok svätého Cyrila a Metoda",
            "en": "Saints Cyril and Methodius Day"
          }
        },
        "08-29": {
          "name": {
            "sk": "Výročie Slovenského národného povstania",
            "en": "Slovak National Uprising anniversary"
          }
        },
        "09-01 since 1994 and prior to 2024": {
          "_name": "Constitution Day"
        },
        "09-01 since 2024": {
          "_name": "Constitution Day",
          "type": "observance"
        },
        "09-15": {
          "name": {
            "sk": "Sviatok Panny Márie Sedembolestnej",
            "en": "Day of Our Lady of the Seven Sorrows"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-17": {
          "name": {
            "sk": "Deň boja za slobodu a demokraciu",
            "en": "Struggle for Freedom and Democracy Day"
          }
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "SL": {
      "names": {
        "en": "Sierra Leone"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "02-18 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Armed Forces Day"
          }
        },
        "03-08 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "03-08"
        },
        "04-27 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1 Shawwal and if Sunday then next Monday": {
          "substitute": true,
          "_name": "1 Shawwal",
          "name": {
            "en": "Korité"
          }
        },
        "10 Dhu al-Hijjah and if Sunday then next Monday": {
          "substitute": true,
          "_name": "10 Dhu al-Hijjah",
          "name": {
            "en": "Tabaski"
          }
        },
        "12 Rabi al-awwal and if Sunday then next Monday": {
          "substitute": true,
          "_name": "12 Rabi al-awwal",
          "name": {
            "en": "Mawlid"
          }
        },
        "12-25 and if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "12-26"
        }
      }
    },
    "SM": {
      "names": {
        "it": "San Marino",
        "en": "San Marino"
      },
      "langs": [
        "it"
      ],
      "zones": [
        "Europe/Rome"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06",
          "name": {
            "it": "Epifania"
          }
        },
        "02-05": {
          "name": {
            "it": "Festa di Sant’Agata",
            "en": "Feast of Saint Agatha"
          }
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "03-25": {
          "name": {
            "it": "Anniversario dell'Arengo",
            "en": "Anniversary of the Arengo"
          }
        },
        "04-01": {
          "name": {
            "it": "Cerimonia di investitura dei Capitani Reggenti",
            "en": "Inauguration Ceremony"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "07-28": {
          "name": {
            "it": "Anniversario della caduta del Fascismo e Festa della Libertà",
            "en": "Liberation from Fascism"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "09-03": {
          "name": {
            "it": "Festa di San Marino e di Fondazione della Repubblica",
            "en": "The Feast of San Marino and the Republic"
          }
        },
        "10-01": {
          "name": {
            "it": "Cerimonia di investitura dei Capitani Reggenti"
          }
        },
        "11-01": {
          "_name": "11-01",
          "name": {
            "it": "Tutti i Santi"
          }
        },
        "11-02": {
          "name": {
            "it": "Commemorazione dei defunti",
            "en": "Commemoration of the deceased"
          }
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "12-31": {
          "_name": "12-31",
          "type": "optional"
        }
      }
    },
    "SN": {
      "names": {
        "fr": "République du Sénégal",
        "wo": "Réewum Senegaal",
        "en": "Senegal"
      },
      "langs": [
        "fr",
        "wo"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "04-04": {
          "_name": "National Holiday"
        },
        "05-01": {
          "_name": "05-01"
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal and if sunday then next monday": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah and if sunday then next monday": {
          "_name": "10 Dhu al-Hijjah"
        },
        "10 Muharram": {
          "_name": "10 Muharram"
        },
        "18 Safar": {
          "name": "Magal de Touba"
        }
      }
    },
    "SO": {
      "names": {
        "so": "Jamhuuriyadda Federaalka Soomaaliya",
        "ar": "جمهورية الصومال الفدرالية",
        "en": "Somalia"
      },
      "dayoff": "?",
      "langs": [
        "so",
        "ar",
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-26": {
          "name": {
            "ar": "استقلال الصومال البريطاني",
            "en": "Independence of British Somaliland"
          }
        },
        "07-01": {
          "_name": "Independence Day"
        },
        "10 Muharram": {
          "_name": "10 Muharram"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      },
      "states": {
        "AW": {
          "name": "Awdal",
          "days": {
            "01-01": false,
            "05-18 P2D": {
              "name": {
                "en": "Restoration of Somaliland Sovereignty"
              }
            },
            "07-01": false,
            "1 Muharram": {
              "_name": "1 Muharram"
            },
            "10 Muharram": false,
            "27 Rajab": {
              "_name": "27 Rajab"
            }
          }
        },
        "SA": {
          "name": "Sanaag",
          "_days": [
            "SO",
            "states",
            "AW"
          ]
        },
        "SO": {
          "name": "Sool",
          "_days": [
            "SO",
            "states",
            "AW"
          ]
        },
        "TO": {
          "name": "Togdheer",
          "_days": [
            "SO",
            "states",
            "AW"
          ]
        },
        "WO": {
          "name": "Woqooyi Galbeed",
          "_days": [
            "SO",
            "states",
            "AW"
          ]
        }
      }
    },
    "SR": {
      "names": {
        "en": "Suriname"
      },
      "langs": [
        "nl",
        "srn"
      ],
      "zones": [
        "America/Paramaribo"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "chinese 01-0-01": {
          "name": {
            "nl": "Chinees Nieuwjaar",
            "en": "Chinese New Year"
          }
        },
        "02-25": {
          "name": {
            "nl": "Dag van Bevrijding en Vernieuwing",
            "en": "Day of Liberation and Innovation"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-01": {
          "name": {
            "nl": "Dag der Vrijheden (Keti koti)",
            "srn": "Keti koti",
            "en": "Emancipation Day"
          }
        },
        "08-09": {
          "name": {
            "nl": "Dag der Inheemsen",
            "en": "Indigenous People's Day"
          }
        },
        "10-10": {
          "name": {
            "nl": "Dag van de Marrons",
            "en": "Day of the Maroons"
          }
        },
        "11-25": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "2015-03-06": {
          "_name": "Holi"
        },
        "2016-03-23": {
          "_name": "Holi"
        },
        "2017-03-12": {
          "_name": "Holi"
        },
        "2018-03-02": {
          "_name": "Holi"
        },
        "2019-03-21": {
          "_name": "Holi"
        },
        "2020-03-09": {
          "_name": "Holi"
        },
        "2021-03-28": {
          "_name": "Holi"
        },
        "2022-03-18": {
          "_name": "Holi"
        },
        "2023-03-07": {
          "_name": "Holi"
        },
        "2024-03-25": {
          "_name": "Holi"
        },
        "2025-03-14": {
          "_name": "Holi"
        },
        "2026-03-03": {
          "_name": "Holi"
        },
        "2027-03-22": {
          "_name": "Holi"
        },
        "2028-03-11": {
          "_name": "Holi"
        },
        "2029-03-28": {
          "_name": "Holi"
        },
        "2030-03-19": {
          "_name": "Holi"
        },
        "2014-10-23": {
          "_name": "Deepavali"
        },
        "2015-11-11": {
          "_name": "Deepavali"
        },
        "2016-10-30": {
          "_name": "Deepavali"
        },
        "2017-10-19": {
          "_name": "Deepavali"
        },
        "2018-11-07": {
          "_name": "Deepavali"
        },
        "2019-10-27": {
          "_name": "Deepavali"
        },
        "2020-11-14": {
          "_name": "Deepavali"
        },
        "2021-11-04": {
          "_name": "Deepavali"
        },
        "2022-10-24": {
          "_name": "Deepavali"
        },
        "2023-11-12": {
          "_name": "Deepavali"
        },
        "2024-10-31": {
          "_name": "Deepavali"
        },
        "2025-10-20": {
          "_name": "Deepavali"
        },
        "2026-11-08": {
          "_name": "Deepavali"
        },
        "2027-10-28": {
          "_name": "Deepavali"
        },
        "2028-10-17": {
          "_name": "Deepavali"
        },
        "2029-11-05": {
          "_name": "Deepavali"
        },
        "2030-10-25": {
          "_name": "Deepavali"
        }
      }
    },
    "SS": {
      "names": {
        "en": "South Sudan"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-09": {
          "name": {
            "en": "Peace Agreement Day"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "05-16": {
          "name": {
            "en": "SPLA Day"
          }
        },
        "1st monday in July": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "07-09": {
          "_name": "Independence Day"
        },
        "07-30": {
          "name": {
            "en": "Martyrs Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-28": {
          "name": {
            "en": "Republic Day"
          }
        },
        "12-31": {
          "_name": "12-31"
        },
        "2 Shawwal": {
          "_name": "1 Shawwal"
        },
        "12 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "ST": {
      "names": {
        "pt": "São Tomé & Príncipe",
        "en": "São Tomé & Príncipe"
      },
      "langs": [
        "pt",
        "en"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "02-03 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Martyrs' Day",
            "pt": "Dia dos Mártires"
          }
        },
        "05-01 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "07-12 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "09-06 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Armed Forces Day",
            "pt": "Dia das Forças Armadas"
          }
        },
        "09-30 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Agricultural Reform Day",
            "pt": "Dia da Reforma Agrária"
          }
        },
        "12-21 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "São Tomé Day",
            "pt": "Dia de São Tomé"
          }
        },
        "12-25 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "_name": "12-25"
        }
      }
    },
    "SV": {
      "names": {
        "es": "El Salvador",
        "en": "El Salvador"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/El_Salvador"
      ],
      "days": {
        "01-01": {
          "_name": "01-01",
          "type": "observance"
        },
        "01-16": {
          "name": {
            "es": "Firma de los Acuerdos de Paz"
          },
          "type": "observance"
        },
        "03-08": {
          "name": {
            "es": "Día de la Mujer"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter -1": {
          "_name": "easter -1"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-07": {
          "name": {
            "en": "Soldier's Day",
            "es": "Día del Soldado"
          },
          "type": "observance"
        },
        "05-10": {
          "_name": "Mothers Day",
          "type": "optional",
          "note": "Public Offices only"
        },
        "06-17": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "06-22": {
          "name": {
            "es": "Día del Maestro"
          },
          "type": "optional",
          "note": "Dayoff for teachers only"
        },
        "08-06": {
          "name": {
            "es": "Celebración del Divino Salvador del Mundo"
          }
        },
        "09-15": {
          "_name": "Independence Day"
        },
        "11-02": {
          "_name": "11-02"
        },
        "12-25": {
          "_name": "12-25"
        }
      },
      "regions": {
        "SS": {
          "name": "San Salvador",
          "days": {
            "08-03": {
              "name": {
                "es": "Fiestas Agostinas"
              }
            },
            "08-05": {
              "name": {
                "es": "Fiestas Agostinas"
              }
            }
          }
        }
      }
    },
    "SX": {
      "names": {
        "en": "Sint Maarten"
      },
      "langs": [
        "nl"
      ],
      "zones": [
        "America/Curacao"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-27": {
          "name": {
            "nl": "Koningsdag",
            "en": "King's Day"
          }
        },
        "04-30 if Sunday then next Tuesday prior to 2017": {
          "name": {
            "nl": "Carnaval",
            "en": "Carnival"
          }
        },
        "04-30 if Saturday then previous Friday if Sunday then next Tuesday since 2017": {
          "name": {
            "nl": "Carnaval",
            "en": "Carnival"
          }
        },
        "05-01 if Sunday then next Monday": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 49": {
          "_name": "easter 49"
        },
        "07-01": {
          "name": {
            "nl": "Emancipatiedag",
            "en": "Emancipation Day"
          }
        },
        "10-09": {
          "_name": "Constitution Day"
        },
        "11-11": {
          "name": {
            "en": "Sint Maarten Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "SZ": {
      "names": {
        "ss": "Eswatini",
        "en": "Swaziland"
      },
      "langs": [
        "ss",
        "en"
      ],
      "zones": [
        "Africa/Johannesburg"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-19 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Birthday of King Mswati III"
          }
        },
        "04-25 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "National Flag Day"
          }
        },
        "05-01 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "07-22 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Birthday of the late King Sobhuza"
          }
        },
        "1st Monday in September": {
          "name": {
            "ss": "Umhlanga Reed Dance",
            "en": "Umhlanga Reed Dance"
          }
        },
        "09-06 and if Saturday, Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day",
          "name": {
            "ss": "Somhlolo Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26 and if Sunday then next Monday": {
          "_name": "12-26"
        },
        "12-28 P6D": {
          "name": {
            "ss": "Incwala",
            "en": "Incwala Festival"
          }
        }
      }
    },
    "TC": {
      "names": {
        "en": "Turks & Caicos Islands"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Grand_Turk"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Saturday, Sunday then next Monday": {
          "_name": "01-01"
        },
        "2nd Monday in March": {
          "name": {
            "en": "Commonwealth Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "1st Monday before 06-01": {
          "name": {
            "en": "National Heroes' Day"
          }
        },
        "2nd Monday after 06-02": {
          "name": {
            "en": "Queen's Birthday"
          }
        },
        "1st Monday in August": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "1st Friday before 10-01": {
          "name": {
            "en": "National Youth Day"
          }
        },
        "2nd Monday in October": {
          "name": {
            "en": "National Heritage Day"
          }
        },
        "4th Friday in November": {
          "name": {
            "en": "National Day of Thanksgiving"
          }
        },
        "12-25 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-26"
        }
      }
    },
    "TD": {
      "names": {
        "ar": "جمهورية تشاد",
        "fr": "République du Tchad",
        "en": "Chad"
      },
      "langs": [
        "ar",
        "fr"
      ],
      "zones": [
        "Africa/Ndjamena"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if sunday then next monday": {
          "_name": "01-01"
        },
        "05-01 and if sunday then next monday": {
          "_name": "05-01"
        },
        "08-11 and if sunday then next monday": {
          "name": {
            "fr": "Fête Nationale (Indépendance)",
            "en": "Independence Day"
          }
        },
        "12-01 and if sunday then next monday": {
          "name": {
            "fr": "Journée de la libération et de la démocratie",
            "en": "Freedom and Democracy Day"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "11-28": {
          "name": {
            "fr": "Anniversaire de la Proclamation de la République",
            "en": "Proclamation of the Republic"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "TG": {
      "names": {
        "fr": "République togolaise",
        "en": "Togolese Republic"
      },
      "dayoff": "sunday",
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Abidjan"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-13": {
          "name": {
            "fr": "Jour de la libération",
            "en": "Liberation Day"
          }
        },
        "04-27": {
          "_name": "Independence Day"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "06-21": {
          "name": {
            "fr": "Journée des Martyrs",
            "en": "Day of the Martyrs"
          }
        },
        "08-15": {
          "_name": "08-15"
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-25": {
          "_name": "12-25"
        },
        "13 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "2 Shawwal": {
          "_name": "1 Shawwal"
        },
        "11 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "TH": {
      "names": {
        "en": "Thailand"
      },
      "langs": [
        "en",
        "th"
      ],
      "zones": [
        "Asia/Bangkok"
      ],
      "dayoff": "Saturday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "04-06": {
          "name": {
            "en": "Chakri Memorial Day",
            "th": "วันจักรี"
          }
        },
        "04-13": {
          "name": {
            "en": "Songkran Festival",
            "th": "วันสงกรานต์"
          }
        },
        "04-14": {
          "name": {
            "en": "Songkran Festival",
            "th": "วันสงกรานต์"
          }
        },
        "04-15": {
          "name": {
            "en": "Songkran Festival",
            "th": "วันสงกรานต์"
          }
        },
        "05-04": {
          "name": {
            "en": "Coronation Day",
            "th": "วันฉัตรมงคล"
          }
        },
        "06-03": {
          "name": {
            "en": "Queen Suthida's Birthday",
            "th": "วันเฉลิมพระชนมพรรษาสมเด็จพระนางเจ้าสุทิดา พัชรสุธาพิมลลักษณ พระบรมราชินี"
          }
        },
        "07-28": {
          "name": {
            "en": "King's Birthday",
            "th": "วันเฉลิมพระชนมพรรษาพระบาทสมเด็จพระวชิรเกล้าเจ้าอยู่หัว"
          }
        },
        "08-12": {
          "name": {
            "en": "The Queen Mother's Birthday",
            "th": "วันเฉลิมพระชนมพรรษาสมเด็จพระนางเจ้าสิริกิติ์ พระบรมราชินีนาถ พระบรมราชชนนีพันปีหลวง"
          }
        },
        "10-13": {
          "name": {
            "en": "King Bhumibol Adulyadej Memorial Day",
            "th": "วันคล้ายวันสวรรคตพระบาทสมเด็จพระบรมชนกาธิเบศร มหาภูมิพลอดุลยเดชมหาราช บรมนาถบพิตร"
          }
        },
        "10-23": {
          "name": {
            "en": "King Chulalongkorn Day",
            "th": "วันปิยมหาราช"
          }
        },
        "12-05": {
          "name": {
            "en": "King Bhumibol Adulyadej's Birthday",
            "th": "วันคล้ายวันพระบรมราชสมภพ พระบาทสมเด็จพระบรมชนกาธิเบศร มหาภูมิพลอดุลยเดชมหาราช บรมนาถบพิตร"
          }
        },
        "12-10": {
          "name": {
            "en": "Constitution Day",
            "th": "วันรัฐธรรมนูญ"
          }
        },
        "12-31": {
          "_name": "12-31"
        },
        "2010-03-01": {
          "_name": "Makha Bucha"
        },
        "2011-02-18": {
          "_name": "Makha Bucha"
        },
        "2012-03-07": {
          "_name": "Makha Bucha"
        },
        "2013-02-25": {
          "_name": "Makha Bucha"
        },
        "2014-02-14": {
          "_name": "Makha Bucha"
        },
        "2015-03-04": {
          "_name": "Makha Bucha"
        },
        "2016-02-22": {
          "_name": "Makha Bucha"
        },
        "2017-02-11": {
          "_name": "Makha Bucha"
        },
        "2018-03-01": {
          "_name": "Makha Bucha"
        },
        "2019-02-19": {
          "_name": "Makha Bucha"
        },
        "2020-02-08": {
          "_name": "Makha Bucha"
        },
        "2021-02-26": {
          "_name": "Makha Bucha"
        },
        "2022-02-16": {
          "_name": "Makha Bucha"
        },
        "2023-03-06": {
          "_name": "Makha Bucha"
        },
        "2024-02-24": {
          "_name": "Makha Bucha"
        },
        "2025-02-13": {
          "_name": "Makha Bucha"
        },
        "2026-03-03": {
          "_name": "Makha Bucha"
        },
        "2010-05-28": {
          "_name": "Vesak"
        },
        "2011-05-17": {
          "_name": "Vesak"
        },
        "2012-05-06": {
          "_name": "Vesak"
        },
        "2013-05-25": {
          "_name": "Vesak"
        },
        "2014-05-15": {
          "_name": "Vesak"
        },
        "2015-06-02": {
          "_name": "Vesak"
        },
        "2016-05-22": {
          "_name": "Vesak"
        },
        "2017-05-10": {
          "_name": "Vesak"
        },
        "2018-05-29": {
          "_name": "Vesak"
        },
        "2019-05-19": {
          "_name": "Vesak"
        },
        "2020-05-07": {
          "_name": "Vesak"
        },
        "2021-05-26": {
          "_name": "Vesak"
        },
        "2022-05-15": {
          "_name": "Vesak"
        },
        "2022-05-16": {
          "substitute": true,
          "_name": "Vesak"
        },
        "2023-05-04": {
          "_name": "Vesak"
        },
        "2024-05-22": {
          "_name": "Vesak"
        },
        "2025-05-12": {
          "_name": "Vesak"
        },
        "2026-05-31": {
          "_name": "Vesak"
        },
        "2010-07-25": {
          "_name": "Asalha Puja"
        },
        "2011-07-15": {
          "_name": "Asalha Puja"
        },
        "2012-08-02": {
          "_name": "Asalha Puja"
        },
        "2013-07-22": {
          "_name": "Asalha Puja"
        },
        "2014-07-11": {
          "_name": "Asalha Puja"
        },
        "2015-07-30": {
          "_name": "Asalha Puja"
        },
        "2016-07-19": {
          "_name": "Asalha Puja"
        },
        "2017-07-08": {
          "_name": "Asalha Puja"
        },
        "2018-07-27": {
          "_name": "Asalha Puja"
        },
        "2019-07-16": {
          "_name": "Asalha Puja"
        },
        "2020-07-04": {
          "_name": "Asalha Puja"
        },
        "2021-07-24": {
          "_name": "Asalha Puja"
        },
        "2022-07-13": {
          "_name": "Asalha Puja"
        },
        "2023-07-31": {
          "_name": "Asalha Puja"
        },
        "2024-07-19": {
          "_name": "Asalha Puja"
        },
        "2025-07-10": {
          "_name": "Asalha Puja"
        },
        "2026-07-29": {
          "_name": "Asalha Puja"
        },
        "2010-07-26": {
          "_name": "Buddhist Lent"
        },
        "2011-07-16": {
          "_name": "Buddhist Lent"
        },
        "2012-08-03": {
          "_name": "Buddhist Lent"
        },
        "2013-07-23": {
          "_name": "Buddhist Lent"
        },
        "2014-07-12": {
          "_name": "Buddhist Lent"
        },
        "2015-07-31": {
          "_name": "Buddhist Lent"
        },
        "2016-07-20": {
          "_name": "Buddhist Lent"
        },
        "2017-07-09": {
          "_name": "Buddhist Lent"
        },
        "2018-07-28": {
          "_name": "Buddhist Lent"
        },
        "2019-07-17": {
          "_name": "Buddhist Lent"
        },
        "2020-07-05": {
          "_name": "Buddhist Lent"
        },
        "2021-07-25": {
          "_name": "Buddhist Lent"
        },
        "2022-07-14": {
          "_name": "Buddhist Lent"
        },
        "2023-08-01": {
          "_name": "Buddhist Lent"
        },
        "2024-07-20": {
          "_name": "Buddhist Lent"
        },
        "2025-07-11": {
          "_name": "Buddhist Lent"
        },
        "2026-07-30": {
          "_name": "Buddhist Lent"
        }
      }
    },
    "TN": {
      "names": {
        "ar": "الجمهورية التونسية",
        "fr": "République tunisienne",
        "en": "Tunisia"
      },
      "langs": [
        "ar",
        "fr"
      ],
      "zones": [
        "Africa/Tunis"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-14": {
          "name": {
            "fr": "Fête de la Révolution et de la Jeunesse",
            "ar": "عيد الثورة و الشباب"
          }
        },
        "03-20": {
          "name": {
            "fr": "Fête de l'indépendance",
            "ar": "عيد الإستقلال"
          }
        },
        "04-09": {
          "name": {
            "fr": "Journée des Martyrs",
            "ar": "عيد الشهداء"
          }
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal"
        },
        "1 Muharram": {
          "_name": "1 Muharram"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-25": {
          "name": {
            "fr": "Fête de la République",
            "ar": "عيد الجمهورية"
          }
        },
        "08-13": {
          "name": {
            "fr": "Fête de la Femme et de la Famille",
            "ar": "عيد المرأة"
          }
        },
        "10-15": {
          "name": {
            "fr": "Fête de l'Évacuation",
            "ar": "عيد الجلاء"
          }
        }
      }
    },
    "TO": {
      "names": {
        "to": "Puleʻanga Fakatuʻi ʻo Tonga",
        "en": "Tonga"
      },
      "langs": [
        "to",
        "en"
      ],
      "zones": [
        "Pacific/Tongatapu"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-25": {
          "name": {
            "en": "ANZAC Day"
          }
        },
        "06-04 if thursday,friday,saturday,sunday then next monday and if tuesday then previous monday": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "07-04": {
          "name": {
            "en": "Official Birthday of His Majesty King Tupou VI"
          }
        },
        "09-17 if thursday,friday,saturday,sunday then next monday and if tuesday then previous monday": {
          "name": {
            "en": "Birthday of His Royal Highness The Crown Prince Tupotoʻa-ʻUlukalala"
          }
        },
        "11-04 if thursday,friday,saturday,sunday then next monday and if tuesday then previous monday": {
          "_name": "Constitution Day",
          "name": {
            "en": "Constitutional Day"
          }
        },
        "12-04 if thursday,friday,saturday,sunday then next monday and if tuesday then previous monday": {
          "name": {
            "en": "Tupou I Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    },
    "TR": {
      "names": {
        "tr": "Türkiye",
        "en": "Turkey"
      },
      "dayoff": "saturday",
      "langs": [
        "tr"
      ],
      "zones": [
        "Europe/Istanbul"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "04-23": {
          "name": {
            "en": "National Sovereignty and Children's Day",
            "tr": "Ulusal Egemenlik ve Çocuk Bayramı"
          }
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Labour and Solidarity Day",
            "tr": "Emek ve Dayanışma Günü"
          }
        },
        "05-19": {
          "name": {
            "en": "Commemoration of Atatürk, Youth and Sports Day",
            "tr": "Atatürk'ü Anma Gençlik ve Spor Bayramı"
          }
        },
        "07-15": {
          "name": {
            "en": "Democracy and National Unity Day",
            "tr": "Demokrasi ve Millî Birlik Günü"
          }
        },
        "08-30": {
          "name": {
            "en": "Victory Day",
            "tr": "Zafer Bayramı"
          }
        },
        "10-29": {
          "name": {
            "en": "Republic Day",
            "tr": "Cumhuriyet Bayramı"
          }
        },
        "1 Shawwal PT90H": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah PT114H": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "TT": {
      "names": {
        "en": "Trinidad & Tobago"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1",
          "type": "observance"
        },
        "03-30 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Spiritual Baptist Liberation Day"
          }
        },
        "easter 60": {
          "_name": "easter 60"
        },
        "05-30 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Indian Arrival Day"
          }
        },
        "06-19 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "08-01 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Emancipation Day"
          }
        },
        "08-31 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "09-24 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Republic Day"
          }
        },
        "12-25 and if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "12-26"
        },
        "1 Shawwal and if Sunday then next Monday": {
          "substitute": true,
          "_name": "1 Shawwal"
        },
        "2012-11-13": {
          "_name": "Deepavali"
        },
        "2013-11-03": {
          "_name": "Deepavali"
        },
        "2013-11-04": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2014-10-23": {
          "_name": "Deepavali"
        },
        "2015-11-11": {
          "_name": "Deepavali"
        },
        "2016-10-29": {
          "_name": "Deepavali"
        },
        "2017-10-19": {
          "_name": "Deepavali"
        },
        "2018-11-07": {
          "_name": "Deepavali"
        },
        "2019-10-27": {
          "_name": "Deepavali"
        },
        "2019-10-28": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2020-11-14": {
          "_name": "Deepavali"
        },
        "2021-11-04": {
          "_name": "Deepavali"
        },
        "2022-10-24": {
          "_name": "Deepavali"
        },
        "2023-11-12": {
          "_name": "Deepavali"
        },
        "2023-11-13": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2024-10-31": {
          "_name": "Deepavali"
        },
        "2025-10-20": {
          "_name": "Deepavali"
        },
        "2026-11-08": {
          "_name": "Deepavali"
        },
        "2026-11-09": {
          "substitute": true,
          "_name": "Deepavali"
        },
        "2027-10-28": {
          "_name": "Deepavali"
        },
        "2028-10-17": {
          "_name": "Deepavali"
        },
        "2029-11-05": {
          "_name": "Deepavali"
        },
        "2030-10-25": {
          "_name": "Deepavali"
        }
      }
    },
    "TW": {
      "names": {
        "zh": "中華民國",
        "en": "Taiwan"
      },
      "langs": [
        "zh"
      ],
      "zones": [
        "Asia/Taipei"
      ],
      "dayoff": "",
      "days": {
        "01-01 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01",
          "name": {
            "zh": "中華民國開國紀念日 / 元旦",
            "en": "Founding of the Republic of China"
          }
        },
        "chinese 01-0-00": {
          "name": {
            "en": "Chinese New Year's Eve",
            "zh": "農曆除夕"
          }
        },
        "chinese 01-0-01": {
          "name": {
            "en": "Chinese New Year",
            "zh": "農曆年初一"
          }
        },
        "chinese 01-0-01 if Monday then next Friday if Tuesday then next Saturdayif Wednesday then next Sunday if Thursday then next Monday if Friday then next Tuesday if Saturday then next Wednesday if Sunday then next Thursday": {
          "name": {
            "en": "Chinese New Year Holiday",
            "zh": "农历新年假期"
          }
        },
        "chinese 01-0-02": {
          "name": {
            "en": "The second day of the Chinese New Year",
            "zh": "農曆年初二"
          }
        },
        "chinese 01-0-03": {
          "name": {
            "en": "The third day of the Chinese New Year",
            "zh": "農曆年初三"
          }
        },
        "chinese 01-0-04": {
          "name": {
            "en": "The forth day of the Chinese New Year",
            "zh": "農曆年初四"
          }
        },
        "02-28 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Peace Memorial Day",
            "zh": "228和平紀念日"
          }
        },
        "04-04 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Children's Day",
            "zh": "兒童節"
          }
        },
        "chinese 5-01 solarterm and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Tomb Sweeping Day",
            "zh": "淸明節"
          }
        },
        "chinese 05-0-05 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Dragon Boat Festival",
            "zh": "端午節"
          }
        },
        "chinese 08-0-15 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Mid-Autumn Festival",
            "zh": "中秋節"
          }
        },
        "10-10 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "National Day / Double Tenth Day",
            "zh": "國慶日 / 雙十節"
          }
        },
        "02-04": {
          "name": {
            "en": "Farmer's Day",
            "zh": "農民節"
          },
          "type": "observance"
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "03-12": {
          "name": {
            "en": "Arbor Day",
            "zh": "國父逝世紀念日"
          },
          "type": "observance"
        },
        "03-29": {
          "name": {
            "en": "Youth Day",
            "zh": "靑年節"
          },
          "type": "observance"
        },
        "05-01 and if Saturday then previous Friday if Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01",
          "name": {
            "zh": "勞動節"
          },
          "type": "observance",
          "note": "private sector"
        },
        "05-04": {
          "name": {
            "en": "Literary Day",
            "zh": "文藝節"
          },
          "type": "observance"
        },
        "2nd Sunday in May": {
          "_name": "Mothers Day",
          "name": {
            "zh": "母親節"
          },
          "type": "observance"
        },
        "06-03": {
          "name": {
            "en": "Opium Suppression Movement Day",
            "zh": "禁菸節"
          },
          "type": "observance"
        },
        "08-08": {
          "_name": "Fathers Day",
          "name": {
            "zh": "父親節"
          },
          "type": "observance"
        },
        "09-01": {
          "name": {
            "en": "Journalist' Day",
            "zh": "記者節"
          },
          "type": "observance"
        },
        "09-03": {
          "name": {
            "en": "Armed Forces Day",
            "zh": "軍人節"
          },
          "type": "observance"
        },
        "09-28": {
          "name": {
            "en": "Teachers' Day",
            "zh": "孔子誕辰紀念日"
          },
          "type": "observance"
        },
        "10-21": {
          "name": {
            "en": "Overseas Chinese Day",
            "zh": "華僑節"
          },
          "type": "observance"
        },
        "10-25": {
          "name": {
            "en": "Taiwan Retrocession Day",
            "zh": "臺灣光復節"
          },
          "type": "observance"
        },
        "11-12": {
          "name": {
            "en": "Sun Yat-sen's Birthday",
            "zh": "國父誕辰紀念日"
          },
          "note": "Also Doctors' Day and Cultural Renaissance Day",
          "type": "observance"
        },
        "december solstice": {
          "name": {
            "en": "Dongzhi Festival",
            "zh": "冬至"
          },
          "type": "observance"
        },
        "12-25": {
          "name": {
            "en": "Constitution Day",
            "zh": "行憲紀念日"
          },
          "type": "observance"
        },
        "chinese 01-0-15": {
          "name": {
            "en": "Lantern Festival",
            "zh": "元宵節"
          },
          "type": "observance"
        },
        "chinese 01-0-15 #1": {
          "name": {
            "en": "Tourism Day",
            "zh": "觀光節"
          },
          "type": "observance"
        },
        "chinese 02-0-02": {
          "name": {
            "en": "Earth God's Birthday",
            "zh": "土地公誕辰"
          },
          "type": "observance"
        },
        "chinese 02-0-19": {
          "name": {
            "en": "Kuan Yin's Birthday",
            "zh": "觀音誕辰"
          },
          "type": "observance"
        },
        "chinese 03-0-15": {
          "name": {
            "en": "God of Medicine's Birthday",
            "zh": "保生大帝誕辰"
          },
          "type": "observance"
        },
        "chinese 03-0-23": {
          "name": {
            "en": "Matsu's Birthday",
            "zh": "媽祖誕辰"
          },
          "type": "observance"
        },
        "chinese 04-0-08": {
          "name": {
            "en": "Buddha's Birthday",
            "zh": "佛誕日"
          },
          "type": "observance"
        },
        "chinese 05-0-13": {
          "name": {
            "en": "Kuan Kung's Birthday",
            "zh": "關公誕辰"
          },
          "type": "observance"
        },
        "chinese 05-0-13 #1": {
          "name": {
            "en": "Cheng Huang's Birthday",
            "zh": "城隍爺誕辰"
          },
          "type": "observance"
        },
        "chinese 07-0-07": {
          "name": {
            "en": "Qixi Festival",
            "zh": "七夕"
          },
          "type": "observance"
        },
        "chinese 07-0-15": {
          "name": {
            "en": "Ghost Festival",
            "zh": "中元節"
          },
          "type": "observance"
        },
        "chinese 09-0-09": {
          "name": {
            "en": "Double Ninth Festival",
            "zh": "重陽節"
          },
          "type": "observance"
        },
        "chinese 10-0-15": {
          "name": {
            "en": "Saisiat Festival",
            "zh": "賽夏節"
          },
          "type": "observance"
        }
      }
    },
    "TZ": {
      "names": {
        "en": "Tanzania"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-02": {
          "name": {
            "en": "Zanzibar Revolution Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-07": {
          "name": {
            "en": "Karume Day"
          }
        },
        "04-26": {
          "name": {
            "en": "Union Day"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "07-07": {
          "name": {
            "en": "Saba Saba Day"
          }
        },
        "08-08": {
          "name": {
            "en": "Nane Nane Day"
          }
        },
        "10-14": {
          "name": {
            "en": "Nyerere Day"
          }
        },
        "12-09": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-25"
        },
        "1 Shawwal P2D": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        },
        "12 Rabi al-awwal": {
          "_name": "12 Rabi al-awwal",
          "name": {
            "en": "Maulid Day"
          }
        }
      }
    },
    "UA": {
      "names": {
        "uk": "Україна",
        "en": "Ukraine"
      },
      "langs": [
        "uk"
      ],
      "zones": [
        "Europe/Kiev",
        "Europe/Uzhgorod",
        "Europe/Zaporozhye"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if saturday, sunday then next tuesday": {
          "_name": "01-01",
          "name": {
            "en": "New Year"
          },
          "substitute": true
        },
        "01-02 and if saturday, sunday then next monday": {
          "_name": "01-01",
          "name": {
            "en": "New Year"
          },
          "substitute": true
        },
        "julian 12-25 and if saturday, sunday then next monday prior to 2023": {
          "_name": "julian 12-25",
          "substitute": true
        },
        "03-08 and if saturday, sunday then next monday": {
          "_name": "03-08"
        },
        "orthodox and if sunday then next monday": {
          "_name": "orthodox"
        },
        "orthodox 49 and if sunday then next monday": {
          "_name": "easter 49"
        },
        "05-01 and if saturday, sunday then next tuesday": {
          "_name": "05-01",
          "substitute": true
        },
        "05-02 and if saturday, sunday then next monday prior to 2018": {
          "_name": "05-01",
          "substitute": true
        },
        "05-09 and if saturday, sunday then next monday": {
          "name": {
            "uk": "День перемоги над нацизмом у Другій світовій війні",
            "en": "Victory Day"
          },
          "substitute": true
        },
        "06-28 and if saturday, sunday then next monday": {
          "_name": "Constitution Day",
          "substitute": true
        },
        "07-15 and if saturday, sunday then next monday since 2023": {
          "name": {
            "en": "Statehood Day",
            "uk": "День Української Державності"
          }
        },
        "07-28 and if saturday, sunday then next monday prior to 2023": {
          "name": {
            "en": "Statehood Day",
            "uk": "День Української Державності"
          }
        },
        "08-24 and if saturday, sunday then next monday": {
          "_name": "Independence Day",
          "substitute": true
        },
        "10-14 and if saturday, sunday then next monday since 2015 and prior to 2023": {
          "name": {
            "uk": "День захисника України",
            "en": "Defenders of Ukraine Day"
          },
          "substitute": true
        },
        "10-01 and if saturday, sunday then next monday since 2023": {
          "name": {
            "uk": "День захисників і захисниць України",
            "en": "Defenders of Ukraine Day"
          },
          "substitute": true
        },
        "12-25 and if saturday, sunday then next monday since 2017": {
          "_name": "12-25"
        }
      }
    },
    "UG": {
      "names": {
        "en": "Uganda"
      },
      "dayoff": "sundays",
      "langs": [
        "en",
        "sw"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-26": {
          "name": {
            "en": "Liberation Day"
          }
        },
        "02-16": {
          "name": {
            "en": "Archbishop Janan Luwum Day"
          }
        },
        "03-08": {
          "_name": "03-08"
        },
        "easter -46": {
          "_name": "easter -46",
          "type": "observance"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-03": {
          "name": {
            "en": "Martyr's Day"
          }
        },
        "06-09": {
          "name": {
            "en": "National Heroes Day"
          }
        },
        "10-09": {
          "_name": "Independence Day"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "US": {
      "names": {
        "en": "United States of America"
      },
      "dayoff": "sunday",
      "zones": [
        "America/New_York",
        "America/Detroit",
        "America/Kentucky/Louisville",
        "America/Kentucky/Monticello",
        "America/Indiana/Indianapolis",
        "America/Indiana/Vincennes",
        "America/Indiana/Winamac",
        "America/Indiana/Marengo",
        "America/Indiana/Petersburg",
        "America/Indiana/Vevay",
        "America/Chicago",
        "America/Indiana/Tell_City",
        "America/Indiana/Knox",
        "America/Menominee",
        "America/North_Dakota/Center",
        "America/North_Dakota/New_Salem",
        "America/North_Dakota/Beulah",
        "America/Denver",
        "America/Boise",
        "America/Phoenix",
        "America/Los_Angeles",
        "America/Metlakatla",
        "America/Anchorage",
        "America/Juneau",
        "America/Sitka",
        "America/Yakutat",
        "America/Nome",
        "America/Adak",
        "Pacific/Honolulu"
      ],
      "langs": [
        "en-us",
        "en"
      ],
      "days": {
        "01-01 and if sunday then next monday if saturday then previous friday": {
          "substitute": true,
          "_name": "01-01"
        },
        "3rd monday in January": {
          "name": {
            "en": "Martin Luther King Jr. Day",
            "es": "Natalicio de Martin Luther King, Jr."
          }
        },
        "3rd monday in February": {
          "name": {
            "en": "Washington's Birthday",
            "es": "Día de los Presidentes"
          }
        },
        "02-14": {
          "_name": "02-14",
          "type": "observance"
        },
        "03-17": {
          "name": {
            "en": "St. Patrick's Day"
          },
          "type": "observance"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "04-15 if friday then next monday if saturday,sunday then next tuesday": {
          "name": {
            "en": "Tax Day"
          },
          "type": "observance"
        },
        "wednesday before 04-28": {
          "name": {
            "en": "Administrative Professionals Day"
          },
          "type": "observance"
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "monday before 06-01": {
          "name": {
            "en": "Memorial Day",
            "es": "Recordación de los Muertos de la Guerra"
          }
        },
        "06-19 and if sunday then next monday if saturday then previous friday since 2021": {
          "substitute": true,
          "name": {
            "en": "Juneteenth"
          }
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "07-04 and if sunday then next monday if saturday then previous friday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "1st monday in September": {
          "_name": "05-01"
        },
        "2nd monday in October": {
          "name": {
            "en": "Columbus Day",
            "es": "Descubrimiento de América"
          }
        },
        "10-31 18:00": {
          "name": {
            "en": "Halloween"
          },
          "type": "observance"
        },
        "11-11": {
          "name": {
            "en": "Veterans Day",
            "es": "Día del Veterano"
          }
        },
        "substitutes 11-11 if sunday then next monday if saturday then previous friday": {
          "substitute": true,
          "name": {
            "en": "Veterans Day",
            "es": "Día del Veterano"
          },
          "type": "bank",
          "note": "Federal Government offices are closed"
        },
        "tuesday after 1st monday in November every 4 years since 1848": {
          "name": {
            "en": "Election Day"
          },
          "type": "observance"
        },
        "4th thursday in November": {
          "name": {
            "en": "Thanksgiving Day",
            "es": "Acción de Gracias"
          }
        },
        "friday after 4th thursday in November": {
          "name": {
            "en": "Day after Thanksgiving Day",
            "es": "Dia despues Acción de Gracias"
          },
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24",
          "type": "optional"
        },
        "12-25 and if sunday then next monday if saturday then previous friday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        }
      },
      "states": {
        "AL": {
          "name": "Alabama",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "3rd monday in January": {
              "name": {
                "en": "Robert E. Lee/Martin Luther King Birthday"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "George Washington/Thomas Jefferson Birthday"
              }
            },
            "4th monday in April": {
              "name": {
                "en": "Confederate Memorial Day"
              }
            },
            "1st monday in June": {
              "name": {
                "en": "Jefferson Davis' birthday"
              }
            }
          }
        },
        "AK": {
          "name": "Alaska",
          "zones": [
            "America/Anchorage",
            "America/Metlakatla",
            "America/Juneau",
            "America/Sitka",
            "America/Yakutat",
            "America/Nome"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            },
            "monday before April": {
              "name": {
                "en": "Seward's Day"
              }
            },
            "2nd monday in October": {
              "name": {
                "en": "Columbus Day"
              },
              "active": [
                {
                  "to": "2017-01-01"
                }
              ]
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2017-01-01"
                }
              ]
            },
            "10-18": {
              "name": {
                "en": "Alaska Day"
              }
            }
          }
        },
        "AZ": {
          "name": "Arizona",
          "zones": [
            "America/Phoenix",
            "America/Denver"
          ],
          "days": {
            "3rd monday in January": {
              "name": {
                "en": "Dr. Martin Luther King Jr./ Civil Rights Day"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "Lincoln/Washington Presidents' Day"
              }
            }
          }
        },
        "AR": {
          "name": "Arkansas",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "3rd monday in January": {
              "name": {
                "en": "Dr. Martin Luther King Jr./Robert E. Lee's Birthdays"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "George Washington's Birthday/Daisy Gatson Bates Day"
              }
            },
            "12-24": {
              "_name": "12-24"
            }
          }
        },
        "CA": {
          "name": "California",
          "zones": [
            "America/Los_Angeles"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "2nd monday in October": false,
            "02-15": {
              "type": "observance",
              "name": {
                "en": "Susan B. Anthony Day"
              }
            },
            "03-31 and if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "César Chávez Day"
              }
            },
            "05-19": {
              "type": "observance",
              "name": {
                "en": "Malcolm X Day"
              }
            },
            "05-23": {
              "type": "observance",
              "name": {
                "en": "Harvey Milk Day"
              }
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day after Thanksgiving Day"
              },
              "type": "public"
            }
          },
          "regions": {
            "LA": {
              "name": "Los Angeles",
              "days": {
                "08-24": {
                  "name": {
                    "en": "Kobe Bryant Day"
                  },
                  "type": "observance",
                  "active": [
                    {
                      "from": 2016
                    }
                  ]
                }
              }
            }
          }
        },
        "CO": {
          "name": "Colorado",
          "zones": [
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Washington-Lincoln Day"
              }
            },
            "2nd monday in October": {
              "type": "observance"
            }
          }
        },
        "CT": {
          "name": "Connecticut",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "02-12": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            },
            "easter -2": {
              "_name": "easter -2"
            }
          }
        },
        "DE": {
          "name": "Delaware",
          "days": {
            "2nd monday in October": false,
            "3rd monday in February": false,
            "easter -2": {
              "_name": "easter -2"
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day After Thanksgiving"
              }
            },
            "tuesday after 1st monday in November in even years": {
              "name": {
                "en": "Election Day"
              }
            }
          }
        },
        "DC": {
          "name": "District of Columbia",
          "days": {
            "04-16": {
              "name": {
                "en": "Emancipation Day"
              }
            },
            "2nd monday in October": {
              "name": {
                "en": "Columbus Day"
              },
              "active": [
                {
                  "to": "2019-10-08"
                }
              ]
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2019-10-09"
                }
              ]
            }
          }
        },
        "FL": {
          "name": "Florida",
          "days": {
            "2nd monday in October": false,
            "3rd monday in February": false,
            "02-15": {
              "name": {
                "en": "Susan B. Anthony Day"
              }
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day After Thanksgiving"
              }
            }
          }
        },
        "GA": {
          "name": "Georgia",
          "days": {
            "3rd monday in February": false,
            "monday before 05-01 #1": {
              "name": {
                "en": "Confederate Memorial Day"
              },
              "active": [
                {
                  "to": "2016-01-01"
                }
              ]
            },
            "monday before 05-01 #2": {
              "name": {
                "en": "State Holiday"
              },
              "note": "Known as Confederate Memorial Day prior to 2016",
              "active": [
                {
                  "from": "2016-01-01"
                }
              ]
            },
            "friday after 4th thursday in November #1": {
              "name": {
                "en": "Robert E. Lee's Birthday"
              },
              "note": "General Lee was born on 1807-01-19 but this holiday was traditionally observed the day after Thanksgiving.",
              "active": [
                {
                  "to": "2016-01-01"
                }
              ]
            },
            "friday after 4th thursday in November #2": {
              "name": {
                "en": "State Holiday"
              },
              "note": "Known as Robert E. Lee's Birtday prior to 2016",
              "active": [
                {
                  "from": "2016-01-01"
                }
              ]
            },
            "12-24": {
              "name": {
                "en": "Washington's Birthday"
              }
            },
            "substitutes 12-24 if wednesday then next friday": {
              "substitute": true,
              "name": {
                "en": "Washington's Birthday"
              }
            }
          }
        },
        "HI": {
          "name": "Hawaii",
          "zones": [
            "Pacific/Honolulu"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "03-26 and if saturday then previous friday if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Prince Jonah Kuhio Kalanianaole Day"
              }
            },
            "easter -2": {
              "_name": "easter -2"
            },
            "06-11 and if saturday then previous friday if sunday then next monday": {
              "substitute": true,
              "name": {
                "en": "Kamehameha Day"
              }
            },
            "3rd friday in August": {
              "name": {
                "en": "Statehood Day"
              }
            },
            "2nd monday in October": false,
            "tuesday after 1st monday in November in even years": {
              "name": {
                "en": "General Election Day"
              }
            }
          }
        },
        "ID": {
          "name": "Idaho",
          "zones": [
            "America/Boise",
            "America/Los_Angeles"
          ],
          "days": {
            "3rd monday in January": {
              "name": {
                "en": "Martin Luther King, Jr./ Idaho Human Rights Day"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            }
          }
        },
        "IL": {
          "name": "Illinois",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "02-12": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            },
            "1st monday in March": {
              "name": {
                "en": "Casimir Pulaski Day"
              }
            },
            "05-19": {
              "name": {
                "en": "Malcolm X Day"
              }
            },
            "tuesday after 1st monday in November in even years": {
              "name": {
                "en": "Election Day"
              }
            }
          }
        },
        "IN": {
          "name": "Indiana",
          "zones": [
            "America/Indiana/Indianapolis",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Vevay",
            "America/Indiana/Tell_City",
            "America/Indiana/Knox"
          ],
          "days": {
            "easter -2": {
              "_name": "easter -2"
            },
            "tuesday after 1st monday in May": {
              "name": {
                "en": "Primary Election Day"
              }
            },
            "tuesday after 1st monday in November": {
              "name": {
                "en": "Election Day"
              }
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            }
          }
        },
        "IA": {
          "name": "Iowa",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "02-12": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            },
            "2nd monday in October": {
              "name": {
                "en": "Columbus Day"
              },
              "active": [
                {
                  "to": "2018-10-07"
                }
              ]
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2018-10-08"
                }
              ]
            }
          }
        },
        "KS": {
          "name": "Kansas",
          "zones": [
            "America/Chicago",
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": false
          }
        },
        "KY": {
          "name": "Kentucky",
          "zones": [
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello"
          ],
          "days": {
            "3rd monday in February": false,
            "easter -2 14:00": {
              "_name": "easter -2"
            },
            "12-24": {
              "_name": "12-24"
            },
            "12-31": {
              "_name": "12-31"
            }
          }
        },
        "LA": {
          "name": "Louisiana",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "easter -2": {
              "_name": "easter -2"
            },
            "tuesday after 1st monday in November in even years": {
              "name": {
                "en": "Election Day"
              }
            }
          },
          "regions": {
            "NO": {
              "name": "New Orleans",
              "days": {
                "easter -47": {
                  "_name": "easter -47",
                  "name": {
                    "en": "Mardi Gras"
                  }
                }
              }
            }
          }
        },
        "ME": {
          "name": "Maine",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Washington's Birthday/President's Day"
              }
            },
            "3rd monday in April": {
              "name": {
                "en": "Patriots' Day"
              }
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2019-04-26"
                }
              ]
            }
          }
        },
        "MD": {
          "name": "Maryland",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            },
            "friday before 1st monday before 06-01 since 2009 and prior to 2016": {
              "name": {
                "en": "Service Reduction Day"
              }
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Native American Heritage Day"
              }
            }
          }
        },
        "MA": {
          "name": "Massachusetts",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "03-17": {
              "name": {
                "en": "Evacuation Day"
              }
            },
            "3rd monday in April": {
              "name": {
                "en": "Patriots' Day"
              }
            },
            "06-17": {
              "name": {
                "en": "Bunker Hill Day"
              }
            }
          }
        },
        "MI": {
          "name": "Michigan",
          "zones": [
            "America/Detroit",
            "America/Menominee"
          ],
          "days": {
            "12-24": {
              "_name": "12-24"
            },
            "12-31": {
              "_name": "12-31"
            }
          }
        },
        "MN": {
          "name": "Minnesota",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Washington's and Lincoln's Birthday"
              }
            },
            "2nd monday in October": {
              "name": {
                "en": "Columbus Day"
              },
              "active": [
                {
                  "to": "2017-01-01"
                }
              ]
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2017-01-01"
                }
              ]
            }
          }
        },
        "MS": {
          "name": "Mississippi",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "3rd monday in January": {
              "name": {
                "en": "Martin Luther King's and Robert E. Lee's Birthdays"
              }
            },
            "monday before 05-01": {
              "name": {
                "en": "Confederate Memorial Day"
              }
            }
          }
        },
        "MO": {
          "name": "Missouri",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "02-12": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            },
            "05-08": {
              "name": {
                "en": "Truman Day"
              }
            }
          }
        },
        "MT": {
          "name": "Montana",
          "zones": [
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Lincoln's and Washington's Birthday"
              }
            },
            "tuesday after 1st monday in November": {
              "name": {
                "en": "Election Day"
              }
            },
            "12-24": {
              "_name": "12-24"
            },
            "12-31": {
              "_name": "12-31"
            }
          }
        },
        "NE": {
          "name": "Nebraska",
          "zones": [
            "America/Chicago",
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            },
            "friday before 05-01": {
              "name": {
                "en": "Arbor Day"
              }
            }
          }
        },
        "NV": {
          "name": "Nevada",
          "zones": [
            "America/Los_Angeles"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents Day"
              }
            },
            "2nd monday in October": false,
            "08-09": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2017-01-01"
                }
              ],
              "type": "observance"
            },
            "friday before 11-01": {
              "name": {
                "en": "Nevada Day"
              }
            },
            "4th friday in November": {
              "name": {
                "en": "Family Day"
              }
            }
          }
        },
        "NH": {
          "name": "New Hampshire",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in January": {
              "name": {
                "en": "Martin Luther King, Jr./ Civil Rights Day"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            },
            "2nd monday in October": {
              "type": "observance"
            },
            "tuesday after 1st monday in November in even years": {
              "name": {
                "en": "Election Day"
              }
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day after Thanksgiving"
              }
            }
          }
        },
        "NJ": {
          "name": "New Jersey",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "02-12": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "Presidents Day"
              }
            },
            "easter -2": {
              "_name": "easter -2"
            },
            "tuesday after 1st monday in November": {
              "name": {
                "en": "Election Day"
              }
            }
          }
        },
        "NM": {
          "name": "New Mexico",
          "zones": [
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2019-04-01"
                }
              ]
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day after Thanksgiving"
              }
            }
          }
        },
        "NY": {
          "name": "New York",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "02-12": {
              "name": {
                "en": "Lincoln's Birthday"
              }
            },
            "02-15": {
              "name": {
                "en": "Susan B. Anthony Day"
              }
            },
            "tuesday after 1st monday in November": {
              "name": {
                "en": "Election Day"
              }
            }
          }
        },
        "NC": {
          "name": "North Carolina",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": false,
            "2nd monday in October": false,
            "easter -2": {
              "_name": "easter -2"
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day after Thanksgiving"
              }
            },
            "12-24 and if friday then previous thursday if saturday,sunday then previous friday": {
              "substitute": true,
              "_name": "12-24"
            }
          }
        },
        "ND": {
          "name": "North Dakota",
          "zones": [
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/North_Dakota/Beulah"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            }
          }
        },
        "OH": {
          "name": "Ohio",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Washington-Lincoln Day"
              }
            }
          }
        },
        "OK": {
          "name": "Oklahoma",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day after Thanksgiving"
              }
            }
          }
        },
        "OR": {
          "name": "Oregon",
          "zones": [
            "America/Los_Angeles"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents Day"
              }
            }
          }
        },
        "PA": {
          "name": "Pennsylvania",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "06-14": {
              "name": {
                "en": "Flag Day"
              }
            }
          }
        },
        "RI": {
          "name": "Rhode Island",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "2nd monday in August": {
              "name": {
                "en": "Victory Day"
              }
            }
          }
        },
        "SC": {
          "name": "South Carolina",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "05-10": {
              "name": {
                "en": "Confederate Memorial Day"
              }
            },
            "12-26": {
              "_name": "12-26"
            }
          }
        },
        "SD": {
          "name": "South Dakota",
          "zones": [
            "America/Chicago",
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "2nd monday in October": {
              "name": {
                "en": "Columbus Day"
              },
              "active": [
                {
                  "to": "2015-01-01"
                }
              ]
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Native American Day"
              },
              "active": [
                {
                  "from": "2015-01-01"
                }
              ]
            }
          }
        },
        "TN": {
          "name": "Tennessee",
          "zones": [
            "America/Chicago",
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            },
            "easter -2": {
              "_name": "easter -2"
            },
            "12-24": {
              "_name": "12-24"
            }
          }
        },
        "TX": {
          "name": "Texas",
          "zones": [
            "America/Chicago",
            "America/Denver"
          ],
          "days": {
            "01-19": {
              "name": {
                "en": "Confederate Heroes Day"
              },
              "type": "observance",
              "note": "state agencies are partially staffed"
            },
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "03-02": {
              "name": {
                "en": "Texas Independence Day"
              },
              "type": "observance",
              "note": "state agencies are partially staffed"
            },
            "03-31": {
              "name": {
                "en": "Cesar Chavez Day"
              },
              "type": "observance"
            },
            "easter -2": {
              "_name": "easter -2",
              "type": "observance"
            },
            "04-21": {
              "name": {
                "en": "San Jacinto Day"
              },
              "type": "observance",
              "note": "state agencies are partially staffed"
            },
            "06-19": {
              "name": {
                "en": "Emancipation Day In Texas"
              },
              "type": "observance",
              "note": "state agencies are partially staffed"
            },
            "08-27": {
              "name": {
                "en": "Lyndon Baines Johnson Day"
              },
              "type": "observance",
              "note": "state agencies are partially staffed"
            },
            "friday after 4th thursday in November": {
              "name": {
                "en": "Day after Thanksgiving"
              }
            },
            "12-24": {
              "_name": "12-24"
            },
            "12-26": {
              "_name": "12-26",
              "name": {
                "en": "Day after Christmas"
              }
            }
          }
        },
        "UT": {
          "name": "Utah",
          "zones": [
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Washington and Lincoln Day"
              }
            },
            "07-24": {
              "name": {
                "en": "Pioneer Day"
              }
            }
          }
        },
        "VT": {
          "name": "Vermont",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            },
            "1st tuesday in March": {
              "name": {
                "en": "Town Meeting Day"
              }
            },
            "3rd monday in August": {
              "name": {
                "en": "Bennington Battle Day"
              }
            },
            "2nd monday in October": {
              "name": {
                "en": "Columbus Day"
              },
              "active": [
                {
                  "to": "2017-09-01"
                }
              ]
            },
            "2nd monday in October #1": {
              "name": {
                "en": "Indigenous Peoples' Day"
              },
              "active": [
                {
                  "from": "2017-09-01"
                }
              ]
            }
          }
        },
        "VA": {
          "name": "Virginia",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "George Washington Day"
              }
            },
            "friday before 3rd monday in January prior to 2021": {
              "name": {
                "en": "Lee–Jackson Day"
              }
            },
            "tuesday after 1st monday in November in even years since 2020": {
              "name": "Election Day"
            }
          }
        },
        "WA": {
          "name": "Washington",
          "zones": [
            "America/Los_Angeles"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "Presidents' Day"
              }
            }
          }
        },
        "WV": {
          "name": "West Virginia",
          "zones": [
            "America/New_York"
          ],
          "days": {
            "02-15": {
              "name": {
                "en": "Susan B. Anthony Day"
              }
            },
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            },
            "06-20": {
              "name": {
                "en": "West Virginia Day"
              }
            },
            "4th friday in November": {
              "name": {
                "en": "Lincoln's Day"
              }
            }
          }
        },
        "WI": {
          "name": "Wisconsin",
          "zones": [
            "America/Chicago"
          ],
          "days": {
            "02-15": {
              "name": {
                "en": "Susan B. Anthony Day"
              }
            },
            "2nd tuesday in September": {
              "name": {
                "en": "Primary Election Day"
              }
            },
            "tuesday after 1st monday in November": {
              "name": {
                "en": "Election Day"
              }
            }
          }
        },
        "WY": {
          "name": "Wyoming",
          "zones": [
            "America/Denver"
          ],
          "days": {
            "3rd monday in February": {
              "name": {
                "en": "President's Day"
              }
            }
          }
        }
      }
    },
    "UY": {
      "names": {
        "es": "Uruguay",
        "en": "Uruguay"
      },
      "dayoff": "sunday",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Montevideo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06",
          "type": "observance"
        },
        "easter -48": {
          "name": {
            "en": "Carnival",
            "es": "Carnaval"
          },
          "type": "observance"
        },
        "easter -47": {
          "_name": "easter -47",
          "type": "observance"
        },
        "easter -6 P5D": {
          "name": {
            "en": "Tourism Week",
            "es": "Semana de Turismo"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "04-19 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Landing of the 33 Orientals",
            "es": "Desembarco de los 33 Orientales"
          },
          "type": "observance"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-18 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Battle of Las Piedras",
            "es": "Batalla de las Piedras"
          },
          "type": "observance"
        },
        "06-19": {
          "name": {
            "en": "Birthday of José Gervasio Artigas and Never Again Day",
            "es": "Natalicio de Artigas y Día del Nunca Más"
          },
          "type": "observance"
        },
        "07-18": {
          "_name": "Constitution Day"
        },
        "08-25": {
          "_name": "Independence Day"
        },
        "10-12 if tuesday,wednesday then previous monday if thursday,friday then next monday": {
          "name": {
            "en": "Columbus Day",
            "es": "Día de la Raza"
          },
          "type": "observance"
        },
        "11-02": {
          "_name": "11-02",
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24",
          "type": "observance"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31",
          "type": "observance"
        }
      }
    },
    "VA": {
      "names": {
        "it": "Stato della Città del Vaticano",
        "la": "Status Civitatis Vaticanae",
        "en": "Vatican City"
      },
      "langs": [
        "it"
      ],
      "zones": [
        "Europe/Rome"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "name": {
            "en": "Solemnity of Mary, Mother of God",
            "it": "Maria Santissima Madre di Dio"
          }
        },
        "01-06": {
          "name": {
            "en": "Epiphany",
            "it": "Epifania del Signore"
          }
        },
        "02-11": {
          "name": {
            "en": "Anniversary of the foundation of Vatican City",
            "it": "Anniversario della istituzione dello Stato della Città del Vaticano"
          }
        },
        "03-19": {
          "_name": "03-19"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 39": {
          "_name": "easter 39",
          "active": [
            {
              "to": 2009
            }
          ]
        },
        "easter 60": {
          "_name": "easter 60",
          "active": [
            {
              "to": 2009
            }
          ]
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Saint Joseph the Worker",
            "it": "San Giuseppe lavoratore"
          }
        },
        "06-29": {
          "_name": "06-29"
        },
        "08-15": {
          "_name": "08-15",
          "name": {
            "it": "Assunzione di Maria in Cielo"
          }
        },
        "09-08": {
          "name": {
            "en": "Nativity of Mary",
            "it": "Festa della natività della madonna"
          }
        },
        "11-01": {
          "_name": "11-01"
        },
        "12-08": {
          "_name": "12-08"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        },
        "10-16": {
          "name": {
            "en": "Anniversary of the election of Pope John Paul II",
            "it": "Anniversario dell'Elezione del Santo Padre"
          },
          "active": [
            {
              "from": 1978,
              "to": 2005
            }
          ]
        },
        "11-04": {
          "name": {
            "en": "Saint Charles Borromeo - Name day of the Holy Father",
            "it": "San Carlo Borromeo - Onomastico del Santo Padre"
          },
          "note": "Name day of Pope John Paul II (Karol Józef Wojtyła)",
          "active": [
            {
              "from": 1978,
              "to": 2005
            }
          ]
        },
        "04-19": {
          "name": {
            "en": "Anniversary of the election of Pope Benedict XVI",
            "it": "Anniversario dell'Elezione del Santo Padre"
          },
          "active": [
            {
              "from": 2005,
              "to": 2013
            }
          ]
        },
        "03-19#1": {
          "name": {
            "en": "Saint Joseph - Name day of the Holy Father",
            "it": "San Giuseppe - Onomastico del Santo Padre"
          },
          "note": "Name day of Pope Benedict XVI (Josef Ratzinger)",
          "active": [
            {
              "from": 2005,
              "to": 2013
            }
          ]
        },
        "03-13": {
          "name": {
            "en": "Anniversary of the election of Pope Francis",
            "it": "Anniversario dell'Elezione del Santo Padre"
          },
          "active": [
            {
              "from": 2013
            }
          ]
        },
        "04-23": {
          "name": {
            "en": "Saint George - Name day of the Holy Father",
            "it": "San Giorgio - Onomastico del Santo Padre"
          },
          "note": "Name day of Pope Francis (Jorge Mario Bergoglio)",
          "active": [
            {
              "from": 2013
            }
          ]
        }
      }
    },
    "VC": {
      "names": {
        "en": "St. Vincent & Grenadines"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "03-14 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "National Hero′s Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "1st Monday in July": {
          "name": {
            "en": "Carnival Monday"
          },
          "disable": [
            "2021-06-05"
          ],
          "enable": [
            "2021-09-06"
          ]
        },
        "Tuesday after 1st Monday in July": {
          "name": {
            "en": "Carnival Tuesday"
          },
          "disable": [
            "2021-06-06"
          ],
          "enable": [
            "2021-09-07"
          ]
        },
        "08-01 and if Sunday then next Monday": {
          "substitute": true,
          "name": {
            "en": "Emancipation Day"
          }
        },
        "10-27 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "12-25 and if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Sunday then next Monday": {
          "substitute": true,
          "_name": "12-26"
        }
      }
    },
    "VE": {
      "names": {
        "es": "Venezuela",
        "en": "Venezuela"
      },
      "dayoff": "sundays",
      "langs": [
        "es"
      ],
      "zones": [
        "America/Caracas"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "01-06": {
          "_name": "01-06",
          "type": "observance"
        },
        "01-15": {
          "name": {
            "es": "Día del Maestro",
            "en": "Teacher's Day"
          },
          "type": "optional",
          "note": "teachers only"
        },
        "03-19": {
          "_name": "03-19",
          "type": "observance"
        },
        "easter -48": {
          "name": {
            "en": "Carnival",
            "es": "Carnaval"
          }
        },
        "easter -47": {
          "_name": "easter -47"
        },
        "easter -6 P7D": {
          "name": {
            "en": "Holy Week",
            "es": "Semana Santa"
          },
          "type": "observance"
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter"
        },
        "04-19": {
          "name": {
            "en": "Declaration of Independence",
            "es": "Declaración de la Independencia"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "06-24": {
          "name": {
            "en": "Battle of Carabobo",
            "es": "Aniversario de la Batalla de Carabobo"
          }
        },
        "07-05": {
          "_name": "Independence Day"
        },
        "07-24": {
          "name": {
            "en": "Birthday of Simón Bolívar",
            "es": "Natalicio de Simón Bolívar"
          }
        },
        "08-03": {
          "name": {
            "en": "Flag Day",
            "es": "Día de la Bandera"
          },
          "type": "observance"
        },
        "09-11": {
          "name": {
            "en": "Our Lady of Coromoto",
            "es": "Día de Nuestra Señora de Coromoto"
          },
          "type": "observance"
        },
        "10-12": {
          "name": {
            "en": "Day of Indigenous Resistance",
            "es": "Día de la resistencia indígena"
          }
        },
        "11-01": {
          "_name": "11-01",
          "type": "observance"
        },
        "11-02": {
          "_name": "11-02",
          "type": "observance"
        },
        "12-08": {
          "_name": "12-08",
          "type": "observance"
        },
        "12-10": {
          "name": {
            "en": "Venezuelan Air Force Day",
            "es": "Día de la Aviación Nacional"
          },
          "type": "observance"
        },
        "12-24": {
          "_name": "12-24"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-31": {
          "_name": "12-31"
        }
      },
      "states": {
        "B": {
          "name": "Anzoátegui",
          "days": {
            "11-14": {
              "name": {
                "es": "Natalicio de José Antonio Anzoátegui"
              }
            }
          }
        },
        "G": {
          "name": "Carabobo",
          "days": {
            "11-13": {
              "name": {
                "es": "Día de la Virgen del Socorro"
              }
            }
          }
        },
        "K": {
          "name": "Lara",
          "days": {
            "01-14": {
              "name": {
                "es": "Día de La Divina Pastora"
              }
            },
            "05-28": {
              "name": {
                "es": "Natalicio de Jacinto Lara"
              }
            }
          },
          "regions": {
            "BA": {
              "name": "Barquisimeto",
              "days": {
                "09-14": {
                  "name": {
                    "es": "Día de Barquisimeto"
                  }
                }
              }
            }
          }
        },
        "M": {
          "name": "Miranda",
          "days": {
            "03-19": {
              "_name": "03-19"
            }
          }
        },
        "N": {
          "name": "Monagas",
          "days": {
            "12-07": {
              "name": {
                "es": "Día de Maturin"
              }
            }
          }
        },
        "S": {
          "name": "Táchira",
          "days": {
            "08-15": {
              "_name": "08-15",
              "name": {
                "es": "Día de la Virgen de Consolación"
              }
            }
          }
        },
        "V": {
          "name": "Zulia",
          "days": {
            "10-24": {
              "name": {
                "es": "Natalicio de Rafael Urdaneta"
              }
            },
            "11-18": {
              "name": {
                "es": "Día de la Virgen de la Chinita"
              }
            }
          }
        }
      }
    },
    "VG": {
      "names": {
        "en": "British Virgin Islands"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "Monday before 03-08": {
          "name": {
            "en": "The Anniversary of the Birth of Hamilton Lavity Stoutt"
          }
        },
        "2nd Monday in March": {
          "name": {
            "en": "Commonwealth Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "easter 49": {
          "_name": "easter 49",
          "type": "observance"
        },
        "easter 50": {
          "_name": "easter 50"
        },
        "2nd Saturday after 06-02 prior to 2020": {
          "name": {
            "en": "Sovereign’s Birthday"
          },
          "disable": [
            "2017-06-10",
            "2019-06-15"
          ],
          "enable": [
            "2017-06-17",
            "2019-06-07"
          ]
        },
        "2nd Friday after 06-02 since 2020": {
          "name": {
            "en": "Sovereign’s Birthday"
          }
        },
        "07-01 if Sunday,Thursday then next Monday if Saturday then previous Friday if Tuesday,Wednesday then previous Monday": {
          "name": {
            "en": "Virgin Islands Day"
          }
        },
        "10-21 if Sunday then next Monday if Saturday then previous Friday if Tuesday,Wednesday then previous Monday if Thursday then next Friday": {
          "name": {
            "en": "St. Ursula’s Day"
          },
          "disable": [
            "2016-10-23",
            "2020-10-19",
            "2021-10-22"
          ],
          "enable": [
            "2016-10-19",
            "2020-10-23"
          ]
        },
        "1st Monday in August": {
          "name": {
            "en": "Emancipation Monday"
          }
        },
        "Tuesday after 1st Monday in August": {
          "name": {
            "en": "Emancipation Tuesday"
          }
        },
        "Wednesday after 1st Monday in August": {
          "name": {
            "en": "Emancipation Wednesday"
          }
        },
        "2021-10-18": {
          "name": {
            "en": "Heroes’ and Forefathers Day"
          }
        },
        "2021-11-08": {
          "name": {
            "en": "Commemoration of the Great March of 1949"
          }
        },
        "12-25 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-25"
        },
        "12-26 and if Saturday then next Monday if Sunday then next Tuesday": {
          "substitute": true,
          "_name": "12-26"
        }
      }
    },
    "VI": {
      "names": {
        "en": "U.S. Virgin Islands"
      },
      "langs": [
        "en"
      ],
      "zones": [
        "America/Port_of_Spain"
      ],
      "dayoff": "sunday",
      "_days": "US",
      "days": {
        "01-06": {
          "_name": "01-06",
          "name": {
            "en": "Three Kings Day"
          }
        },
        "3rd monday in February": {
          "name": {
            "en": "President's Day"
          }
        },
        "03-17": false,
        "03-31": {
          "name": {
            "en": "Transfer Day"
          }
        },
        "easter -3": {
          "_name": "easter -3"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "07-03": {
          "name": {
            "en": "Emancipation Day"
          }
        },
        "4th Monday in July": {
          "name": {
            "en": "Hurricane Supplication Day"
          }
        },
        "2nd monday in October": {
          "name": {
            "en": "Virgin Islands–Puerto Rico Friendship Day"
          }
        },
        "10-25": {
          "name": {
            "en": "Hurricane Thanksgiving"
          },
          "type": "observance"
        },
        "friday after 4th thursday in November": {
          "name": {
            "en": "Day after Thanksgiving Day"
          },
          "type": "school"
        }
      }
    },
    "VN": {
      "names": {
        "vi": "Cộng hòa Xã hội chủ nghĩa Việt Nam",
        "en": "Vietnam"
      },
      "dayoff": "",
      "langs": [
        "vi"
      ],
      "zones": [
        "Asia/Ho_Chi_Minh",
        "Asia/Bangkok"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "vietnamese 1-0-1": {
          "name": {
            "en": "Vietnamese New Year",
            "vi": "Tết Nguyên Đán"
          }
        },
        "1 day before vietnamese 1-0-1 P5D": {
          "name": {
            "en": "Vietnamese New Year Holidays",
            "vi": "Giao thừa Tết Nguyên Đán"
          }
        },
        "vietnamese 3-0-10": {
          "name": {
            "en": "Hung Kings Commemorations",
            "vi": "Giỗ tổ Hùng Vương"
          }
        },
        "04-30": {
          "name": {
            "en": "Day of liberating the South for national reunification",
            "vi": "Ngày Giải phóng miền Nam"
          }
        },
        "05-01": {
          "_name": "05-01"
        },
        "09-02": {
          "name": {
            "en": "National Day",
            "vi": "Quốc khánh"
          }
        },
        "02-03": {
          "name": {
            "en": "Communist Party of Viet Nam Foundation Anniversary",
            "vi": "Ngày thành lập Đảng"
          },
          "type": "observance"
        },
        "03-08": {
          "_name": "03-08",
          "type": "observance"
        },
        "04-21": {
          "name": {
            "en": "Vietnam Book Day",
            "vi": "Ngày Sách Việt Nam"
          },
          "type": "observance"
        },
        "05-07": {
          "name": {
            "en": "Dien Bien Phu Victory Day",
            "vi": "Ngày Chiến thắng Điện Biện Phủ"
          },
          "type": "observance"
        },
        "05-19": {
          "name": {
            "en": "President Ho Chi Minh's Birthday",
            "vi": "Ngày sinh Chủ tịch Hồ Chí Minh"
          },
          "type": "observance"
        },
        "06-01": {
          "name": {
            "en": "International Children's Day",
            "vi": "Ngày quốc tế Thiếu nhi"
          },
          "type": "observance"
        },
        "06-28": {
          "name": {
            "en": "Vietnamese Family Day",
            "vi": "Ngày Gia đình Việt Nam"
          },
          "type": "observance"
        },
        "07-27": {
          "name": {
            "en": "Remembrance Day",
            "vi": "Ngày Thương Binh Liệt Sĩ"
          },
          "type": "observance"
        },
        "08-19": {
          "name": {
            "en": "August Revolution Commemoration Day",
            "vi": "Ngày cách mạng Tháng Tám"
          },
          "type": "observance"
        },
        "10-10": {
          "name": {
            "en": "Capital Liberation Day",
            "vi": "Ngày giải phóng Thủ Đô"
          },
          "type": "observance"
        },
        "10-20": {
          "name": {
            "en": "Vietnamese Women's Day",
            "vi": "Ngày Phụ nữ Việt Nam"
          },
          "type": "observance"
        },
        "11-20": {
          "name": {
            "en": "Vietnamese Teacher's Day",
            "vi": "Ngày Nhà giáo Việt Nam"
          },
          "type": "observance"
        },
        "12-22": {
          "name": {
            "en": "National Defence Day",
            "vi": "Ngày hội Quốc phòng Toàn dân"
          },
          "type": "observance"
        },
        "vietnamese 1-0-5": {
          "name": {
            "en": "Victory of Ngọc Hồi-Đống Đa",
            "vi": "Chiến thắng Ngọc Hồi - Đống Đa"
          },
          "type": "observance"
        },
        "vietnamese 1-0-15": {
          "name": {
            "en": "Lantern Festival",
            "vi": "Tết Nguyên Tiêu"
          },
          "type": "observance"
        },
        "vietnamese 4-0-15": {
          "name": {
            "en": "Buddha's Birthday",
            "vi": "Lễ Phật đản"
          },
          "type": "observance"
        },
        "vietnamese 5-0-5": {
          "name": {
            "en": "Mid-year Festival",
            "vi": "Tết Đoan ngọ"
          },
          "type": "observance"
        },
        "vietnamese 7-0-15": {
          "name": {
            "en": "Ghost Festival",
            "vi": "Rằm Tháng Bảy, Vu Lan"
          },
          "type": "observance"
        },
        "vietnamese 8-0-15": {
          "name": {
            "en": "Mid-Autumn Festival",
            "vi": "Tết Trung thu"
          },
          "type": "observance"
        },
        "vietnamese 12-0-23": {
          "name": {
            "en": "Kitchen guardians",
            "vi": "Ông Táo chầu trời"
          },
          "type": "observance"
        }
      }
    },
    "VU": {
      "names": {
        "en": "Vanuatu",
        "fr": "République de Vanuatu"
      },
      "langs": [
        "fr",
        "en",
        "bi"
      ],
      "zones": [
        "Pacific/Efate"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "02-21": {
          "name": "Mémoire du père de l'indépendance Rév. Dr. W.H. Lini"
        },
        "02-22": {
          "_name": "Public Holiday"
        },
        "03-05": {
          "name": "Fête des chefs coutumiers"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01": {
          "_name": "05-01"
        },
        "easter 39": {
          "_name": "easter 39"
        },
        "07-24": {
          "name": "Journée Mondiale des Enfants"
        },
        "07-30": {
          "_name": "Independence Day"
        },
        "08-15": {
          "_name": "08-15"
        },
        "08-16": {
          "_name": "Public Holiday"
        },
        "10-05": {
          "_name": "Constitution Day"
        },
        "10-29": {
          "name": "Jour de l'Unité"
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "name": "Fête de Famille"
        },
        "12-27": {
          "_name": "Public Holiday"
        }
      }
    },
    "XK": {
      "names": {
        "sq": "Republika e Kosovës",
        "sr": "Република Косово",
        "en": "Kosovo"
      },
      "langs": [
        "sq",
        "sr"
      ],
      "zones": [
        "Europe/Belgrade"
      ],
      "dayoff": "sunday",
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "julian 12-25": {
          "_name": "julian 12-25"
        },
        "02-17": {
          "_name": "Independence Day"
        },
        "04-09": {
          "_name": "Constitution Day"
        },
        "easter": {
          "_name": "easter"
        },
        "orthodox": {
          "_name": "orthodox"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-09": {
          "_name": "05-09"
        },
        "12-25": {
          "_name": "12-25"
        },
        "1 Shawwal": {
          "_name": "1 Shawwal"
        },
        "10 Dhu al-Hijjah": {
          "_name": "10 Dhu al-Hijjah"
        }
      }
    },
    "YT": {
      "names": {
        "fr": "Mayotte",
        "en": "Mayotte"
      },
      "langs": [
        "fr"
      ],
      "zones": [
        "Africa/Nairobi"
      ],
      "dayoff": "sunday",
      "_days": "FR",
      "days": {
        "04-27": {
          "_name": "Abolition of Slavery"
        }
      }
    },
    "ZA": {
      "names": {
        "en": "South Africa"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Johannesburg"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "substitutes 01-01 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "03-21": {
          "name": {
            "en": "Human Rights Day"
          }
        },
        "substitutes 03-21 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1",
          "name": {
            "en": "Family Day"
          }
        },
        "04-27": {
          "name": {
            "en": "Freedom Day"
          }
        },
        "substitutes 04-27 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "05-01": {
          "_name": "05-01",
          "name": {
            "en": "Workers' Day"
          }
        },
        "substitutes 05-01 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "06-16": {
          "name": {
            "en": "Youth Day"
          }
        },
        "substitutes 06-16 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "08-09": {
          "name": {
            "en": "National Women's Day"
          }
        },
        "substitutes 08-09 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "07-18": {
          "name": {
            "en": "Nelson Mandela Day"
          },
          "type": "observance"
        },
        "09-24": {
          "name": {
            "en": "Heritage Day"
          }
        },
        "substitutes 09-24 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "12-16": {
          "name": {
            "en": "Day of Reconciliation"
          }
        },
        "substitutes 12-16 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26",
          "name": {
            "en": "Day of Goodwill"
          }
        },
        "substitutes 12-26 if sunday then next monday": {
          "name": {
            "en": "Public Holiday"
          }
        },
        "2023-12-15": {
          "name": {
            "en": "Rugby World Cup Win Public Holiday"
          }
        },
        "2024-05-29": {
          "name": {
            "en": "Voting Day"
          }
        }
      }
    },
    "ZM": {
      "names": {
        "en": "Zambia"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "01-01"
        },
        "03-09": {
          "name": {
            "en": "Women’s Day"
          }
        },
        "03-12 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "Youth Day"
          }
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "05-01 and if sunday then next monday": {
          "substitute": true,
          "_name": "05-01"
        },
        "05-25 and if sunday then next monday": {
          "substitute": true,
          "name": {
            "en": "African Freedom Day"
          }
        },
        "1st monday in July": {
          "name": {
            "en": "Heroes' Day"
          }
        },
        "tuesday after 1st monday in July": {
          "name": {
            "en": "Unity Day"
          }
        },
        "1st monday in August": {
          "name": {
            "en": "Farmers' Day"
          }
        },
        "2015-10-18": {
          "name": {
            "en": "National day of Prayers"
          }
        },
        "10-24 and if sunday then next monday": {
          "substitute": true,
          "_name": "Independence Day"
        },
        "12-25 and if sunday then next monday": {
          "substitute": true,
          "_name": "12-25"
        }
      }
    },
    "ZW": {
      "names": {
        "sn": "Nyika yeZimbabwe",
        "nd": "iRiphabhuliki yeZimbabwe",
        "xh": "iRiphubliki eyeZimbabwe",
        "kck": "Nyika yeZimbabwe",
        "en": "Zimbabwe"
      },
      "dayoff": "sunday",
      "langs": [
        "en"
      ],
      "zones": [
        "Africa/Maputo"
      ],
      "days": {
        "01-01": {
          "_name": "01-01"
        },
        "easter -2": {
          "_name": "easter -2"
        },
        "easter": {
          "_name": "easter",
          "type": "observance"
        },
        "easter 1": {
          "_name": "easter 1"
        },
        "04-18": {
          "_name": "Independence Day"
        },
        "05-01": {
          "_name": "05-01"
        },
        "05-25": {
          "name": {
            "en": "Africa Day"
          }
        },
        "2nd sunday in May": {
          "_name": "Mothers Day",
          "type": "observance"
        },
        "3rd sunday in June": {
          "_name": "Fathers Day",
          "type": "observance"
        },
        "2nd monday in August": {
          "name": {
            "en": "Heroes' Day"
          }
        },
        "2nd tuesday in August": {
          "name": {
            "en": "Defence Forces Day"
          }
        },
        "12-22": {
          "name": {
            "en": "Unity Day"
          }
        },
        "12-25": {
          "_name": "12-25"
        },
        "12-26": {
          "_name": "12-26"
        }
      }
    }
  },
  "names": {
    "01-01": {
      "name": {
        "en": "New Year's Day",
        "am": "እንቁጣጣሽ",
        "ar": "عيد رأس السنة",
        "az": "Yeni il",
        "be": "Новы год",
        "bg": "Нова Година",
        "bs": "Novogodisnji dan",
        "ca": "Any nou",
        "cz": "Nový rok",
        "da": "Nytår",
        "de": "Neujahr",
        "el": "Πρωτοχρονιά",
        "es": "Año Nuevo",
        "et": "uusaasta",
        "fi": "Uudenvuodenpäivä",
        "fil": "Araw ng Bagong Taon",
        "fo": "Nýggjársdagur",
        "fr": "Nouvel An",
        "ge": "ახალი წელი",
        "hr": "Nova godina",
        "hu": "Újév",
        "hy": "Ամանոր",
        "id": "Hari tahun baru",
        "it": "Capodanno",
        "is": "Nýársdagur",
        "jp": "元日",
        "kl": "ukiortaaq",
        "ko": "신정",
        "lb": "Neijoerschdag",
        "lt": "Naujieji metai",
        "lv": "Jaunais Gads",
        "mg": "Taom-baovao",
        "mk": "Нова Година",
        "ms": "Hari Tahun Baru",
        "mt": "L-Ewwel tas-Sena",
        "nl": "Nieuwjaar",
        "no": "Første nyttårsdag",
        "pap": "Aña Nobo",
        "pl": "Nowy Rok",
        "pt": "Ano Novo",
        "ro": "Anul nou",
        "ru": "Новый год",
        "sl": "Novo leto",
        "sq": "Viti i Ri",
        "sr": "Нова година",
        "sv": "Nyårsdagen",
        "sw": "Mwaka mpya",
        "th": "วันขึ้นปีใหม่",
        "ti": "ሓዲሽ ዓመት",
        "tr": "Yılbaşı",
        "uk": "Новий Рік",
        "vi": "Tết Dương lịch",
        "zh": "元旦"
      }
    },
    "01-06": {
      "name": {
        "en": "Epiphany",
        "am": "ብርሐነ ጥምቀት",
        "da": "Åbenbaring",
        "de": "Heilige Drei Könige",
        "de-ch": "Dreikönigstag",
        "es": "Día de los Reyes Magos",
        "et": "kolmekuningapäev",
        "fi": "Loppiainen",
        "fr": "l'Épiphanie",
        "el": "Θεοφάνεια",
        "hr": "Bogojavljenje, Sveta tri kralja",
        "hu": "Vízkereszt",
        "it": "Befana",
        "is": "Þrettándinn",
        "lb": "Dräikinneksdag",
        "nl": "Driekoningen",
        "mk": "Богојавление",
        "pl": "Święto Trzech Króli",
        "pt": "Epifania do Senhor",
        "sk": "Zjavenie Pána",
        "sv": "Trettondedag jul",
        "ti": "ጥምቀት",
        "vi": "Lễ Hiển Linh"
      }
    },
    "02-02": {
      "name": {
        "en": "Candlemas",
        "de": "Lichtmess",
        "hu": "Gyertyaszentelő Boldogasszony",
        "lb": "Liichtmëssdag",
        "nl": "Lichtmis",
        "vi": "Lễ Đức Mẹ dâng Chúa Giêsu trong đền thánh"
      }
    },
    "02-14": {
      "name": {
        "en": "Valentine's Day",
        "de": "Valentinstag",
        "fr": "Saint-Valentin",
        "hu": "Valentin nap",
        "lb": "Vältesdag",
        "nl": "Valentijnsdag",
        "no": "Valentinsdag",
        "pl": "Walentynki",
        "pt": "Dia dos Namorados",
        "vi": "Lễ tình nhân"
      }
    },
    "03-08": {
      "name": {
        "en": "International Women's Day",
        "az": "Qadınlar günü",
        "be": "Мiжнародны жаночы дзень",
        "bg": "Ден на жената",
        "de": "Internationaler Frauentag",
        "fr": "Journée internationale des femmes",
        "ge": "ქალთა საერთაშორისო დღე",
        "hu": "Nemzetközi nőnap",
        "hy": "Կանանց տոն",
        "lb": "Internationale Fraendag",
        "nl": "Internationale Vrouwendag",
        "no": "Kvinnedagen",
        "pl": "Dzień Kobiet",
        "pt": "Dia Internacional da Mulher",
        "ro": "Ziua Internationala a Femeii",
        "ru": "Международный женский день",
        "sl": "Mednarodni dan žena",
        "uk": "Міжнародний жіночий день",
        "vi": "Quốc tế Phụ nữ",
        "zh": "国际妇女节",
        "ti": "መዓልቲ ኣነስቲ"
      }
    },
    "03-19": {
      "name": {
        "en": "Saint Joseph",
        "de-at": "Josefitag",
        "de": "Josefstag",
        "es": "San José",
        "it": "San Giuseppe",
        "mt": "San Ġużepp",
        "nl": "Hoogfeest van de Heilige Jozef",
        "vi": "Kính Thánh Giuse"
      }
    },
    "04-01": {
      "name": {
        "en": "April Fools' Day",
        "de": "1. April",
        "hu": "Bolondok napja",
        "nl": "1 April",
        "no": "Aprilsnarr",
        "sq": "Dita e Gënjeshtrave",
        "vi": "Cá tháng tư"
      }
    },
    "05-01": {
      "name": {
        "en": "Labour Day",
        "en-us": "Labor Day",
        "ar": "يوم العمال",
        "be": "Дзень працы",
        "bg": "Ден на труда",
        "bs": "Radni dan",
        "cz": "Svátek práce",
        "da": "1. maj",
        "de": "Tag der Arbeit",
        "el": "Εργατική Πρωτομαγιά",
        "es": "Día del trabajador",
        "et": "kevadpüha",
        "fi": "Vappu",
        "fil": "Araw ng mga Manggagawa",
        "fr": "Fête du travail",
        "hr": "Praznik rada",
        "hu": "A munka ünnepe",
        "hy": "Աշխատանքի օր",
        "id": "Hari Buruh Internasional",
        "it": "Festa del Lavoro",
        "is": "Hátíðisdagur Verkamanna",
        "lb": "Éischte Mee",
        "lt": "Tarptautinė darbo diena",
        "lv": "Darba svētki",
        "nl": "Dag van de Arbeid",
        "no": "Arbeidernes dag",
        "mg": "Fetin'ny asa",
        "mk": "Ден на трудот",
        "ms": "Hari Pekerja",
        "mt": "Jum il-Ħaddiem",
        "pap": "Dia di Obrero",
        "pl": "Święto Pracy",
        "pt": "Dia do trabalhador",
        "ro": "Ziua muncii",
        "sk": "Sviatok práce",
        "sl": "Praznik dela",
        "sq": "Dita Ndërkombëtare e Punonjësve",
        "sr": "Празник рада",
        "sv": "Första Maj",
        "ti": "የላብ አደሮች ቀን",
        "uk": "День міжнародної солідарності трудящих",
        "vi": "Quốc tế Lao động",
        "zh": "劳动节"
      }
    },
    "05-09": {
      "name": {
        "en": "Europe Day",
        "bg": "Денят на Европа",
        "cs": "Den Evropy",
        "da": "Europadagen",
        "de": "Europatag",
        "el": "Ημέρα της Ευρώπης",
        "es": "Día de Europa",
        "et": "Euroopa päev",
        "fi": "Eurooppa-päivä",
        "fr": "Journée de l'Europe",
        "ga": "Lá na hEorpa",
        "hr": "Dan Europe",
        "hu": "Európa-nap",
        "it": "Festa dell'Europa",
        "lb": "Europadag",
        "ls": "Dan Evrope",
        "lt": "Europos diena",
        "lv": "Eiropas diena",
        "mt": "Jum l-Ewropa",
        "nl": "Europadag",
        "pl": "Dzień Europy",
        "pt": "Dia da Europa",
        "ro": "Ziua Europei",
        "sk": "Deň Európy",
        "sq": "Dita e Evropës",
        "sv": "Europadagen"
      }
    },
    "06-29": {
      "name": {
        "en": "Saints Peter and Paul",
        "de": "Peter und Paul",
        "es": "San Pedro y San Pablo",
        "fr": "Saint Pierre et Paul",
        "it": "Santi Pietro e Paolo",
        "mt": "L-Imnarja",
        "nl": "Hoogfeest van Petrus en Paulus",
        "vi": "Lễ kính Thánh Phêrô"
      }
    },
    "08-15": {
      "name": {
        "en": "Assumption",
        "de": "Mariä Himmelfahrt",
        "es": "Asunción",
        "fr": "Assomption",
        "el": "Κοίμηση της Θεοτόκου",
        "hr": "Velika Gospa",
        "it": "Ferragosto",
        "lb": "Léiffrawëschdag",
        "lt": "Žolinė",
        "mg": "Asompsiona",
        "mk": "Успение на Пресвета Богородица",
        "mt": "Santa Marija",
        "nl": "O.L.V. Hemelvaart",
        "pl": "Wniebowzięcie Najświętszej Maryi Panny",
        "pt": "Assunção de Maria",
        "ro": "Adormirea Maicii Domnului",
        "sl": "Marijino vnebovzetje",
        "sq": "Shën Mëria e Gushtit",
        "vi": "Đức Mẹ Lên Trời"
      }
    },
    "11-01": {
      "name": {
        "en": "All Saints' Day",
        "bs": "Dita e të gjithë Shenjtorëve",
        "de": "Allerheiligen",
        "es": "Todos los Santos",
        "fi": "Pyhäinpäivä",
        "fil": "Undás; Todos los Santos; Araw ng mga Santo",
        "fr": "Toussaint",
        "hr": "Svi sveti",
        "hu": "Mindenszentek",
        "it": "Ognissanti",
        "lb": "Allerhellegen",
        "lt": "Visų šventųjų diena",
        "mg": "Fetin'ny olo-masina",
        "mk": "Празникот на сите светци",
        "nl": "Allerheiligen",
        "pl": "Wszystkich Świętych",
        "pt": "Todos os santos",
        "sk": "Sviatok všetkých svätých",
        "sq": "Të gjitha Saints",
        "sr": "Сви Свети",
        "sv": "Alla Helgons dag",
        "vi": "Lễ Các Thánh"
      }
    },
    "11-02": {
      "name": {
        "en": "All Souls' Day",
        "de": "Allerseelen",
        "es": "Día de los Difuntos",
        "et": "hingedepäev",
        "fil": "Araw ng mga Kaluluwa",
        "fr": "Fête des morts",
        "hr": "Dušni dan",
        "hu": "Halottak napja",
        "lb": "Allerséilen",
        "nl": "Allerzielen",
        "pt": "Dia de Finados",
        "vi": "Lễ Các Đẳng",
        "lt": "Vėlinės"
      }
    },
    "10-04": {
      "name": {
        "en": "World Animal Day",
        "de": "Welttierschutztag",
        "es": "Día de los Animales",
        "fr": "Journée mondiale des Animaux",
        "nl": "Dierendag",
        "pt": "Dia Mundial dos Animais"
      }
    },
    "11-11": {
      "name": {
        "en": "Saint Martin",
        "de": "Sankt Martin (Faschingsbeginn)",
        "hu": "Márton nap",
        "nl": "Sint-Maarten",
        "vi": "Lễ thánh Martin"
      }
    },
    "12-06": {
      "name": {
        "en": "Saint Nicholas",
        "de": "Sankt Nikolaus",
        "fr": "Saint-Nicolas",
        "hu": "Mikulás",
        "lb": "Niklosdag",
        "nl": "Sinterklaas",
        "pl": "Mikołajki",
        "vi": "Thánh Saint Nicholas"
      }
    },
    "12-07": {
      "name": {
        "it": "Sant'Ambrogio",
        "en": "Saint Ambrose",
        "de": "Ambrosius von Mailand",
        "nl": "Ambrosius van Milaan"
      }
    },
    "12-08": {
      "name": {
        "en": "Immaculate Conception",
        "de": "Mariä Empfängnis",
        "es": "La inmaculada concepción",
        "fr": "Immaculée Conception",
        "it": "Immacolata Concezione",
        "mt": "Il-Kunċizzjoni",
        "nl": "Onbevlekte Ontvangenis van Maria",
        "pt": "Imaculada Conceição"
      }
    },
    "12-24": {
      "name": {
        "en": "Christmas Eve",
        "bg": "Бъдни вечер",
        "bs": "Badnji dan",
        "cz": "Štědrý den",
        "da": "Juleaften",
        "de": "Heiliger Abend",
        "es": "Nochebuena",
        "et": "jõululaupäev",
        "fo": "Jólaaftan",
        "fi": "Jouluaatto",
        "fil": "Bisperas ng Pasko",
        "fr": "Veille de Noël",
        "hr": "Badnji dan",
        "hu": "Szenteste",
        "is": "Aðfangadagur",
        "kl": "juulliaraq",
        "lb": "Hellegowend",
        "lt": "Šv. Kūčios",
        "lv": "Ziemassvētku vakars",
        "ms": "Hari Sebelum Krismas",
        "nl": "Kerstavond",
        "no": "Julaften",
        "pl": "Wigilia Bożego Narodzenia",
        "pt": "Noite de Natal",
        "sk": "Štedrý deň",
        "sq": "Nata e Krishtlindjes",
        "sr": "Бадњи дан",
        "sv": "Julafton",
        "vi": "Đêm Giáng Sinh"
      }
    },
    "12-25": {
      "name": {
        "en": "Christmas Day",
        "am": "ልደተ-ለእግዚእነ/ ገና",
        "ar": "عيد الميلاد المجيد",
        "bg": "Коледа",
        "bn": "বড়দিন",
        "bs": "Božić",
        "de-at": "Christtag",
        "ca": "Nadal",
        "cz": "1. svátek vánoční",
        "da": "Juledag",
        "de": "Weihnachten",
        "de-ch": "Weihnachtstag",
        "el": "Χριστούγεννα",
        "es": "Navidad",
        "et": "esimene jõulupüha",
        "fi": "Joulupäivä",
        "fil": "Araw ng Pasko",
        "fo": "Fyrsti jóladagur",
        "fr": "Noël",
        "hr": "Božić",
        "hu": "Karácsony",
        "hy": "Սուրբ Ծնունդ",
        "id": "Hari Raya Natal",
        "it": "Natale",
        "is": "Jóladagur",
        "jp": "ノエル",
        "kl": "juullerujussuaq",
        "ko": "기독탄신일",
        "lb": "Chrëschtdag",
        "lt": "Šv. Kalėdos",
        "lv": "Ziemassvētki",
        "mg": "Krismasy",
        "mk": "Католички Божиќ",
        "ms": "Hari Krismas",
        "mt": "Il-Milied",
        "nl": "Kerstmis",
        "no": "Første Juledag",
        "pap": "Dia Pasco di Nascimento",
        "pl": "Pierwszy dzień Bożego Narodzenia",
        "pt": "Natal",
        "ro": "Crăciunul",
        "ru": "Рождество Христово",
        "sk": "Prvý sviatok vianočný",
        "sl": "Božič",
        "sq": "Krishtlindja",
        "sr": "Католички Божић",
        "sv": "Juldagen",
        "sw": "Krismasi",
        "ti": "ልደት",
        "uk": "Різдво Христове",
        "vi": "Lễ Giáng Sinh",
        "zh": "聖誕節"
      }
    },
    "12-26": {
      "name": {
        "en": "Boxing Day",
        "bg": "2-ри ден на Коледа",
        "cz": "2. svátek vánoční",
        "da": "Anden Juledag",
        "de": "2. Weihnachtstag",
        "de-at": "Stefanitag",
        "de-ch": "Stephanstag",
        "el": "Δεύτερη μέρα των Χριστουγέννων",
        "es": "San Esteban",
        "et": "teine jõulupüha",
        "fi": "2. joulupäivä",
        "fo": "Fyrsti gerandisdagur eftir jóladag",
        "fr": "Lendemain de Noël",
        "hr": "Svetog Stjepana",
        "hu": "Karácsony másnapja",
        "it": "Santo Stefano",
        "is": "Annar í jólum",
        "kl": "juullip aappaa",
        "lb": "Stiefesdag",
        "lt": "2. Kalėdų diena",
        "lv": "Otrie Ziemassvētki",
        "nl": "Tweede kerstdag",
        "no": "Andre juledag",
        "pap": "Di dos Dia Pasco di Nascimento",
        "pl": "Drugi dzień Bożego Narodzenia",
        "ro": "A doua zi de Crăciun",
        "sk": "Druhý sviatok vianočný",
        "sv": "Annandag jul",
        "vi": "Ngày tặng quà"
      }
    },
    "12-31": {
      "name": {
        "en": "New Year's Eve",
        "da": "Nytårsaften",
        "de": "Silvester",
        "es": "Fin del Año",
        "fi": "Uudenvuodenaatto",
        "fil": "Bisperas ng Bagong Taon",
        "fo": "Nýggjársaftan",
        "fr": "Saint-Sylvestre",
        "hu": "Szilveszter",
        "hy": "Նոր տարվա գիշեր",
        "is": "Gamlársdagur",
        "it": "Ultimo dell’anno",
        "jp": "大晦日",
        "lb": "Silvester",
        "lv": "Vecgada vakars",
        "nl": "Oudejaarsavond",
        "no": "Nyttårsaften",
        "pl": "Sylwester",
        "pt": "Véspera de Ano Novo",
        "sv": "Nyårsafton",
        "th": "วันสิ้นปี",
        "vi": "Đêm giao thừa"
      }
    },
    "easter -48": {
      "name": {
        "en": "Shrove Monday",
        "de": "Rosenmontag",
        "es": "Carnaval",
        "fr": "Lundi de Carnaval",
        "lb": "Fuesméindeg",
        "nl": "Carnavalsmaandag",
        "pap": "Dialuna di Carnaval",
        "vi": "Ngày thứ hai hoa hồng"
      }
    },
    "easter -47": {
      "name": {
        "en": "Shrove Tuesday",
        "es": "Carnaval",
        "de": "Faschingsdienstag",
        "hr": "Pokladni utorak",
        "hu": "Húshagyó kedd",
        "nl": "Vastenavond",
        "pl": "Ostatki",
        "pt": "Carnaval",
        "vi": "Thứ ba mập béo"
      }
    },
    "easter -46": {
      "name": {
        "en": "Ash Wednesday",
        "de": "Aschermittwoch",
        "es": "Miercoles de Ceniza",
        "fr": "Mercredi des Cendres",
        "hu": "Hamvazószerda",
        "it": "Ceneri",
        "is": "Öskudagur",
        "lb": "Äschermëttwoch",
        "nl": "Aswoensdag",
        "no": "Askeonsdag",
        "pl": "Środa Popielcowa",
        "pt": "Quarta-feira de Cinzas",
        "sw": "Jumatano ya Majivu",
        "vi": "Thứ tư Lễ Tro"
      }
    },
    "easter -7": {
      "name": {
        "en": "Palm Sunday",
        "de": "Palmsonntag",
        "es": "Domingo de Ramos",
        "hu": "Virágvasárnap",
        "it": "Domenica delle Palme",
        "is": "Pálmasunnudagur",
        "lb": "Pällemsonndeg",
        "nl": "Palmzondag",
        "no": "Palmesøndag",
        "pl": "Niedziela Palmowa",
        "vi": "Chúa nhật Lễ Lá"
      }
    },
    "easter -3": {
      "name": {
        "en": "Maundy Thursday",
        "cz": "Zelený čtvrtek",
        "da": "Skærtorsdag",
        "de": "Gründonnerstag",
        "es": "Jueves Santo",
        "fil": "Huwebes Santo",
        "fo": "Skírhósdagur",
        "fr": "Jeudi saint",
        "is": "Skírdagur",
        "it": "Giovedì santo",
        "kl": "sisamanngortoq illernartoq",
        "lb": "Gréngen Donneschdeg",
        "nl": "Witte Donderdag",
        "no": "Skjærtorsdag",
        "pl": "Wielki Czwartek",
        "sv": "Skärtorsdagen",
        "vi": "Thứ năm Tuần Thánh"
      }
    },
    "easter -2": {
      "name": {
        "en": "Good Friday",
        "am": "ስቅለት",
        "bg": "Разпети петък",
        "bs": "Dobar petak",
        "cz": "Velký pátek",
        "da": "Langfredag",
        "de": "Karfreitag",
        "es": "Viernes Santo",
        "fi": "Pitkäperjantai",
        "fil": "Biyernes Santo",
        "fo": "Langafríggjadagur",
        "fr": "Vendredi saint",
        "el": "Μεγάλη Παρασκευή",
        "et": "suur reede",
        "ge": "წითელი პარასკევი",
        "hr": "Veliki petak",
        "hu": "Nagypéntek",
        "id": "Wafat Yesus Kristus",
        "it": "Venerdì santo",
        "is": "Föstudagurinn langi",
        "kl": "tallimanngornersuaq",
        "lb": "Karfreideg",
        "lv": "Lielā Piektdiena",
        "ms": "Jumat Agung",
        "mt": "Il-Ġimgħa l-Kbira",
        "nl": "Goede Vrijdag",
        "no": "Langfredag",
        "pap": "Diabierna Santo",
        "pl": "Wielki Piątek",
        "pt": "Sexta-Feira Santa",
        "ro": "Vinerea Mare",
        "sk": "Veľkonočný piatok",
        "sq": "E Premtja e Madhe",
        "sr": "Католички Велики петак",
        "sv": "Långfredagen",
        "sw": "Ijumaa Kuu",
        "vi": "Thứ sáu Tuần Thánh",
        "zh": "耶穌受難節"
      }
    },
    "easter -1": {
      "name": {
        "en": "Easter Saturday",
        "cz": "Bílá sobota",
        "de": "Karsamstag",
        "es": "Sabado Santo",
        "fil": "Sabado de Gloria",
        "fr": "Samedi saint",
        "ge": "დიდი შაბათი",
        "hu": "Nagyszombat",
        "it": "Sabado santo",
        "lb": "Karsamschdeg",
        "nl": "Dag voor Pasen",
        "no": "Påskeaften",
        "pl": "Wielka Sobota",
        "sv": "Påskafton",
        "vi": "Thứ bảy Tuần Thánh",
        "zh": "耶穌受難節翌日"
      }
    },
    "easter": {
      "name": {
        "en": "Easter Sunday",
        "am": "ፋሲካ",
        "bg": "Великден",
        "bs": "Vaskrs",
        "cz": "Velikonoční neděle",
        "da": "Påskesøndag",
        "de": "Ostersonntag",
        "el": "Πάσχα",
        "es": "Pascua",
        "et": "lihavõtted",
        "fi": "Pääsiäispäivä",
        "fil": "Pasko ng Pagkabuhay",
        "fo": "Páskadagur",
        "fr": "Pâques",
        "ge": "აღდგომა",
        "hr": "Uskrs",
        "hu": "Húsvétvasárnap",
        "it": "Domenica di Pasqua",
        "is": "Páskadagur",
        "kl": "poorskip-ullua",
        "lb": "Ouschtersonndeg",
        "lt": "Velykos",
        "lv": "Lieldienas",
        "nl": "Pasen",
        "no": "Første påskedag",
        "pap": "Dia Pasco di Resureccion",
        "pl": "Niedziela Wielkanocna",
        "pt": "Páscoa",
        "ro": "Paștele",
        "sk": "Veľká noc",
        "sl": "Velika noč",
        "sq": "Pashkët Katolike",
        "sr": "Католички Васкрс",
        "sv": "Påskdagen",
        "sw": "Pasaka",
        "vi": "Lễ Phục Sinh",
        "zh": "复活节"
      }
    },
    "easter 1": {
      "name": {
        "en": "Easter Monday",
        "bg": "Велики понеделник",
        "bs": "Uskrsni ponedjeljak",
        "cz": "Velikonoční pondělí",
        "da": "Anden påskedag",
        "de": "Ostermontag",
        "el": "Δευτέρα του Πάσχα",
        "es": "Lunes de Pascua",
        "fi": "2. pääsiäispäivä",
        "fo": "Annar páskadagur",
        "fr": "Lundi de Pâques",
        "ge": "აღდგომის ორშაბათი",
        "hr": "Uskršnji ponedjeljak",
        "hu": "Húsvéthétfő",
        "it": "Lunedì dell’Angelo",
        "is": "Annar í páskum",
        "kl": "poorskip-aappaa",
        "lb": "Ouschterméindeg",
        "lt": "Velykų pirmadienis",
        "lv": "Otrās Lieldienas",
        "mg": "Alatsinain'ny Paska",
        "mk": "вториот ден на Велигден",
        "nl": "Tweede paasdag",
        "no": "Andre påskedag",
        "pap": "Di dos Dia Pasco di Resureccion",
        "pl": "Drugi dzień Wielkanocy",
        "ro": "A doua zi de Pasti",
        "sk": "Veľkonočný pondelok",
        "sl": "Velikonočni ponedeljek",
        "sr": "Католички Васкрсни понедељак",
        "sv": "Annandag påsk",
        "sw": "Jumatatu ya Pasaka",
        "vi": "Thứ hai phục sinh",
        "zh": "復活節星期一"
      }
    },
    "easter 39": {
      "name": {
        "en": "Ascension Day",
        "da": "Kristi Himmelfartsdag",
        "de": "Christi Himmelfahrt",
        "es": "La Asunción",
        "fi": "Helatorstai",
        "fo": "Kristi Himmalsferðardagur",
        "fr": "Ascension",
        "id": "Kenaikan Yesus Kristus",
        "it": "Ascensione",
        "is": "Uppstigningardagur",
        "kl": "qilaliarfik",
        "mg": "Andro niakarana",
        "lb": "Christi Himmelfaart",
        "nl": "O.L.H. Hemelvaart",
        "no": "Kristi himmelfartsdag",
        "pap": "Dia di Asuncion",
        "ro": "Ziua Eroilor",
        "sv": "Kristi himmelfärds dag",
        "vi": "Lễ Thăng Thiên"
      }
    },
    "easter 49": {
      "name": {
        "en": "Pentecost",
        "da": "Pinsedag",
        "de": "Pfingstsonntag",
        "el": "Πεντηκοστή",
        "es": "Pentecostés",
        "et": "nelipühade 1. püha",
        "fi": "Helluntaipäivä",
        "fo": "Hvítusunnudagur",
        "fr": "Pentecôte",
        "hu": "Pünkösdvasárnap",
        "it": "Pentecoste",
        "is": "Hvítasunnudagur",
        "kl": "piinsip ullua",
        "lb": "Päischtsonndeg",
        "nl": "Pinksteren",
        "no": "Første pinsedag",
        "mk": "Духовден",
        "pl": "Zielone Świątki",
        "ro": "Rusaliile",
        "sl": "Binkošti",
        "sv": "Pingstdagen",
        "uk": "Трійця",
        "vi": "Lễ Chúa Thánh Thần Hiện Xuống"
      }
    },
    "easter 50": {
      "name": {
        "en": "Whit Monday",
        "da": "Anden Pinsedag",
        "de": "Pfingstmontag",
        "el": "Αγίου Πνεύματος",
        "es": "Lunes de Pentecostés",
        "fo": "Annar hvítusunnudagur",
        "fr": "Lundi de Pentecôte",
        "hu": "Pünkösdhétfő",
        "is": "Annar í hvítasunnu",
        "it": "Lunedì di Pentecoste",
        "kl": "piinsip aappaa",
        "mg": "Alatsinain'ny Pentekosta",
        "lb": "Péngschtméindeg",
        "nl": "Tweede pinksterdag",
        "no": "Andre pinsedag",
        "ro": "A doua zi de Rusalii",
        "sv": "Annandag pingst"
      }
    },
    "easter 60": {
      "name": {
        "en": "Corpus Christi",
        "de": "Fronleichnam",
        "es": "Corpus Christi",
        "fr": "la Fête-Dieu",
        "it": "Corpus Domini",
        "hr": "Tijelovo",
        "nl": "Sacramentsdag",
        "pl": "Dzień Bożego Ciała",
        "pt": "Corpo de Deus",
        "vi": "Lễ Mình và Máu Thánh Chúa Kitô"
      }
    },
    "julian 01-01": {
      "name": {
        "en": "Orthodox New Year",
        "bs": "Pravoslavni novogodišnji dan",
        "hr": "Pravoslavna Nova Godina",
        "nl": "Orthodox Nieuwjaar",
        "sq": "Viti i Ri Ortodoks",
        "sr": "Православна Нова година"
      }
    },
    "julian 12-24": {
      "name": {
        "en": "Orthodox Christmas Eve",
        "nl": "Orthodoxe Kerstavond",
        "mk": "Бадник",
        "ti": "ልደት"
      }
    },
    "julian 12-25": {
      "name": {
        "en": "Orthodox Christmas",
        "bs": "Pravoslavni Božić",
        "hr": "Pravoslavni Božić",
        "mk": "Прв ден Божик",
        "nl": "Orthodoxe Kerstmis",
        "ro": "Craciun pe Rit Vechi",
        "sq": "Krishtlindjet Ortodokse",
        "sr": "Божић",
        "uk": "Різдво"
      }
    },
    "orthodox -2": {
      "name": {
        "en": "Orthodox Good Friday",
        "mk": "Велики Петок",
        "nl": "Orthodoxe Goede Vrijdag",
        "sr": "Велики петак",
        "ti": "ዓርቢ ስቅለት"
      }
    },
    "orthodox": {
      "name": {
        "en": "Orthodox Easter",
        "bs": "Pravoslavni Vaskrs",
        "hr": "Pravoslavni Uskrs",
        "mk": "Прв ден Велигден",
        "nl": "Orthodox Pasen",
        "sq": "Pashkët Ortodokse",
        "sr": "Васкрс",
        "ti": "ፋሲካ",
        "uk": "Великдень"
      }
    },
    "orthodox 1": {
      "name": {
        "en": "Orthodox Easter Monday",
        "mk": "Втор ден Велигден",
        "nl": "Orthodoxe Tweede Paasdag",
        "sr": "Васкрсни понедељак"
      }
    },
    "1 Muharram": {
      "name": {
        "en": "Islamic New Year",
        "ar": "رأس السنة الهجرية",
        "bs": "Nova hidžretska godina",
        "fil": "Unang Araw ng Muharram",
        "fr": "Nouvel an islamique",
        "hr": "Nova hidžretska godina",
        "id": "Tahun Baru Islam",
        "ms": "Awal Muharram",
        "nl": "Islamitisch Nieuwjaar",
        "sq": "Viti i Ri hixhri"
      }
    },
    "10 Muharram": {
      "name": {
        "en": "Day of Ashura",
        "ar": "عاشوراء",
        "bn": "আশুরা",
        "nl": "De tiende dag (Asjoera)"
      }
    },
    "12 Rabi al-awwal": {
      "name": {
        "en": "Birthday of Muhammad (Mawlid)",
        "am": "መውሊድ",
        "ar": "المولد النبويّ",
        "bn": "ঈদে মিলাদুন্নবী",
        "bs": "Mevlud",
        "fr": "Mawlid",
        "id": "Maulid Nabi Muhammad",
        "ms": "Hari Keputeraan Nabi Muhammad S.A.W.",
        "nl": "Geboortedag Mohammed (Mawlid an-Nabi)",
        "sq": "Mevludi"
      }
    },
    "27 Rajab": {
      "name": {
        "en": "Laylat al-Mi'raj",
        "ar": "الإسراء والمعراج",
        "bs": "Lejletul Mi'radž",
        "id": "Maulid Nabi Muhammad",
        "ms": "Israk dan Mikraj",
        "nl": "Hemelvaart Mohammed (Lailat-ul-Meraj)",
        "sq": "Nata e Miraxhit",
        "tr": "Miraç Gecesi"
      }
    },
    "15 Shaban": {
      "name": {
        "en": "Laylat al-Bara'at",
        "ar": "ليلة البراءة",
        "bs": "Lejletul berat",
        "nl": "Nacht van de Lotsbezegeling (Lailat-ul-Baraat)",
        "sq": "Nata e Beratit"
      }
    },
    "1 Ramadan": {
      "name": {
        "en": "First day of Ramadan",
        "am": "ረመዳን",
        "ar": "اليوم الأول من رمضان",
        "bs": "Prvi dan posta",
        "ms": "Awal Ramadan",
        "nl": "Eerste dag van Ramadan",
        "sq": "Dita e parë e agjërimit"
      }
    },
    "17 Ramadan": {
      "name": {
        "en": "Day of Nuzul Al-Quran",
        "ms": "Hari Nuzul Al-Quran"
      }
    },
    "23 Ramadan": {
      "name": {
        "en": "Lailat al-Qadr"
      }
    },
    "27 Ramadan": {
      "name": {
        "en": "Laylat al-Qadr",
        "ar": "لیلة القدر",
        "bs": "Lejletul kadr",
        "nl": "Waardevolle Nacht (Laylat al-Qadr)",
        "sq": "Nata e Kadrit"
      }
    },
    "1 Shawwal": {
      "name": {
        "en": "End of Ramadan (Eid al-Fitr)",
        "am": "ዒድ አል ፈጥር",
        "ar": "عيد الفطر",
        "az": "Ramazan Bayramı",
        "bn": "ঈদুল ফিতর",
        "bs": "Ramazanski bajram",
        "de": "Zuckerfest",
        "es": "Fiesta del Eid Fitr",
        "fa": "ﻋﯿﺪ ﺳﻌﯿﺪ ﻓﻄﺮ",
        "fil": "Pagwawakas ng Ramadan",
        "fr": "Fête de fin du Ramadan",
        "hr": "Ramazanski bajram",
        "id": "Hari Raya Idul Fitri",
        "nl": "Suikerfeest (Eid al-Fitr)",
        "mk": "Рамазан Бајрам",
        "ms": "Hari Raya Aidil Fitri",
        "sq": "Fitër Bajrami",
        "tr": "Ramazan Bayramı",
        "sr": "Рамазански Бајрам",
        "sw": "Idd-ul-Fitr"
      }
    },
    "9 Dhu al-Hijjah": {
      "name": {
        "en": "Arafat Day",
        "ar": "يوم عرفة",
        "es": "Fiesta del Sacrificio-Eidul Adha",
        "ms": "Hari Arafah",
        "nl": "Dag van Arafat"
      }
    },
    "10 Dhu al-Hijjah": {
      "name": {
        "en": "Feast of the Sacrifice (Eid al-Adha)",
        "am": "ዒድ አል አድሐ",
        "ar": "عيد الأضحى",
        "az": "Qurban Bayramı",
        "bn": "ঈদুল আযহা",
        "bs": "Kurbanski bajram",
        "de": "Opferfest",
        "es": "Fiesta del Sacrificio-Aid Al Adha",
        "fa": "ﻋﯿﺪ ﺳﻌﯿﺪ ﻗﺮﺑﺎن",
        "fil": "Eidul Adha",
        "fr": "Fête du mouton",
        "hr": "Kurban-bajram",
        "id": "Hari Raya Idul Adha",
        "nl": "Offerfeest (Eid Al-Adha)",
        "mk": "Курбан Бајрам",
        "ms": "Hari Raya Haji",
        "sq": "Kurban Bajrami",
        "tr": "Kurban Bayramı",
        "sr": "Курбански Бајрам",
        "sw": "Idd-ul-Azha"
      }
    },
    "15 Nisan": {
      "name": {
        "en": "Pesach",
        "bs": "Pesah",
        "de": "Pessach",
        "hr": "Pesač",
        "nl": "Pesach",
        "sq": "Pesach",
        "sr": "Песах"
      }
    },
    "1 Tishrei": {
      "name": {
        "en": "Rosh Hashanah",
        "bs": "Roš Hašana",
        "de": "Rosch Haschana",
        "hr": "Roš Hašane",
        "nl": "Rosj Hasjana",
        "sq": "Rosh Hashanah",
        "sr": "Рош Хашана"
      }
    },
    "10 Tishrei": {
      "name": {
        "en": "Yom Kippur",
        "bs": "Jom Kipur",
        "de": "Jom Kippur",
        "hr": "Jom Kipur",
        "mk": "Јом Кипур",
        "nl": "Jom Kipoer",
        "sq": "Yom Kippur",
        "sr": "Јом Кипур"
      }
    },
    "Deepavali": {
      "name": {
        "en": "Deepavali",
        "nl": "Divali"
      }
    },
    "Vesak": {
      "name": {
        "en": "Vesak Day",
        "id": "Hari Raya Waisak",
        "nl": "Vesakha Puja",
        "th": "วันวิสาขบูชา"
      }
    },
    "Holi": {
      "name": {
        "en": "Holi Phagwa",
        "nl": "Holifeest"
      }
    },
    "Thaipusam": {
      "name": {
        "en": "Thaipusam",
        "ms": "Hari Thaipusam"
      }
    },
    "Makha Bucha": {
      "name": {
        "en": "Makha Bucha",
        "nl": "Magha Puja",
        "th": "วันมาฆบูชา"
      }
    },
    "Asalha Puja": {
      "name": {
        "en": "Asalha Puja",
        "nl": "Asalha Puja",
        "th": "วันอาสาฬหบูชา"
      }
    },
    "Buddhist Lent": {
      "name": {
        "en": "Buddhist Lent",
        "nl": "Vassa",
        "th": "วันเข้าพรรษา"
      }
    },
    "Abolition of Slavery": {
      "name": {
        "en": "Abolition of Slavery",
        "fr": "Abolition de l’esclavage",
        "nl": "Afschaffing van de slavernij",
        "vi": "Bãi bỏ chế độ Nô lệ"
      }
    },
    "Buß- und Bettag": {
      "name": {
        "de": "Buß- und Bettag",
        "en": "Day of Prayer and Repentance",
        "nl": "Dag van gebed en bekering"
      }
    },
    "Constitution Day": {
      "name": {
        "en": "Constitution Day",
        "da": "Grundlovsdag",
        "de": "Tag der Verfassung",
        "ca": "Dia de la Constitució",
        "es": "Día de la Constitución",
        "fil": "Araw ng Saligang Batas",
        "fo": "Grundlógardagur",
        "hy": "Սահմանադրության օր",
        "jp": "憲法記念日",
        "ko": "제헌절",
        "nl": "Dag van de Grondwet",
        "no": "Grunnlovsdagen",
        "pt": "Dia da Constituição",
        "ro": "Ziua Constituției",
        "sk": "Deň Ústavy",
        "sq": "Dita e Kushtetutës",
        "uk": "День Конституції",
        "vi": "Ngày pháp luật"
      }
    },
    "Fathers Day": {
      "name": {
        "en": "Father's Day",
        "et": "isadepäev",
        "fi": "Isänpäivä",
        "fr": "Fête des Pères",
        "lt": "Tėvo diena",
        "nl": "Vaderdag",
        "pl": "Dzień Ojca",
        "pt": "Dia dos Pais",
        "no": "Farsdag",
        "sv": "Fars dag",
        "vi": "Ngày của cha"
      }
    },
    "Independence Day": {
      "name": {
        "en": "Independence Day",
        "ar": "عيد الاستقلال",
        "be": "Дзень Незалежнасцi",
        "bg": "Ден на независимостта",
        "bs": "Dan nezavisnosti",
        "de": "Unabhängigkeitstag",
        "es": "Día de la Independencia",
        "et": "iseseisvuspäev",
        "fi": "Itsenäisyyspäivä",
        "fil": "Araw ng Kalayaan",
        "fr": "Jour de l'Indépendance",
        "hr": "Dan neovisnosti",
        "hy": "Անկախության օր",
        "id": "Hari Ulang Tahun Kemerdekaan Republik Indonesia",
        "mk": "Ден на независноста",
        "ms": "Hari Kebangsaan",
        "mt": "Jum l-Indipendenza",
        "nl": "Onafhankelijkheidsdag",
        "pl": "Narodowe Święto Niepodległości",
        "pt": "Dia da Independência",
        "ro": "Ziua Independentei",
        "sq": "Dita e Pavarësisë",
        "sr": "Дан независности",
        "sv": "Självständighetsdagen",
        "sw": "Siku ya uhuru",
        "ti": "መዓልቲ ናጽነት",
        "uk": "День Незалежності",
        "vi": "Ngày Độc lập"
      }
    },
    "Liberation Day": {
      "name": {
        "en": "Liberation Day",
        "ar": "يوم التحرير",
        "nl": "Bevrijdingsdag",
        "no": "Frigjøringsdagen",
        "sq": "Dita e Çlirimit",
        "vi": "Ngày Thống nhất"
      }
    },
    "Mothers Day": {
      "name": {
        "en": "Mother's Day",
        "cz": "Den matek",
        "da": "Mors Dag",
        "de": "Muttertag",
        "el": "Γιορτή της μητέρας",
        "es": "Día de la Madre",
        "et": "emadepäev",
        "fi": "Äitienpäivä",
        "fr": "Fête des Mères",
        "hr": "Majčin dan",
        "hu": "Anyák napja",
        "hy": "Ցեղասպանության զոհերի հիշատակի օր",
        "is": "Mæðradagurinn",
        "it": "Festa della mamma",
        "lt": "Motinos diena",
        "lv": "Mātes diena",
        "nl": "Moederdag",
        "no": "Morsdag",
        "pt": "Dia das Mães",
        "pl": "Dzień Matki",
        "ro": "Ziua Mamei",
        "sq": "Dita e Nënës",
        "sv": "Mors dag",
        "vi": "Ngày của mẹ"
      }
    },
    "National Holiday": {
      "name": {
        "en": "National Holiday",
        "de": "Nationalfeiertag",
        "es": "Fiesta Nacional",
        "fr": "Fête nationale",
        "hu": "Nemzeti ünnep",
        "el": "εθνική επέτειος",
        "lb": "Nationalfeierdag",
        "nl": "Nationale feestdag",
        "vi": "Quốc Lễ"
      }
    },
    "Public Holiday": {
      "name": {
        "en": "Public Holiday",
        "fr": "Jour férié légaux",
        "nl": "Wettelijke feestdag",
        "pt": "Feriado Obrigatório",
        "vi": "Nghỉ lễ Toàn Quốc"
      }
    },
    "Reformation Day": {
      "name": {
        "en": "Reformation Day",
        "de": "Reformationstag",
        "es": "Día Nacional de las Iglesias Evangélicas y Protestantes",
        "nl": "Hervormingsdag",
        "vi": "Kháng Cách"
      }
    },
    "Revolution Day": {
      "name": {
        "en": "Revolution Day",
        "ar": "يوم الثورة",
        "es": "Día de la Revolución",
        "nl": "Dag van de Revolutie",
        "ti": "ባሕቲ መስከረም",
        "vi": "Tổng khởi nghĩa"
      }
    },
    "Bridge Day": {
      "name": {
        "en": "Bridge Day",
        "es": "Feriado Puente Turístico"
      }
    },
    "substitutes": {
      "name": {
        "en": "substitute day",
        "az": "əvəz gün",
        "bs": "zamjena dan",
        "de": "Ersatztag",
        "es": "día sustituto",
        "fr": "jour substitut",
        "hr": "zamjena dan",
        "jp": "振替休日",
        "lv": "aizstājējs diena",
        "mk": "заменет ден",
        "nl": "substituut",
        "sq": "ditë zëvendësuese",
        "sr": "замена дан",
        "uk": "замінити день",
        "vi": "ngày thay thế",
        "zh": "更换日"
      }
    }
  }
};

// node_modules/date-holidays/src/Holidays.js
var Holidays2 = class extends Holidays {
  constructor(country, state, region, opts) {
    super(data, country, state, region, opts);
  }
};
export {
  Holidays2 as default
};
/*! Bundled license information:

moment/dist/moment.js:
  (*! moment.js *)
  (*! version : 2.30.1 *)
  (*! authors : Tim Wood, Iskren Chernev, Moment.js contributors *)
  (*! license : MIT *)
  (*! momentjs.com *)

moment-timezone/moment-timezone.js:
  (*! moment-timezone.js *)
  (*! version : 0.5.48 *)
  (*! Copyright (c) JS Foundation and other contributors *)
  (*! license : MIT *)
  (*! github.com/moment/moment-timezone *)

astronomia/src/base.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module base
   *)

astronomia/src/interpolation.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module interpolation
   *)

astronomia/src/angle.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module angle
   *)

astronomia/src/sexagesimal.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module sexagesimal
   *)

astronomia/src/globe.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module globe
   *)

astronomia/src/coord.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module coord
   *)

astronomia/src/nutation.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module nutation
   *)

astronomia/src/elementequinox.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module elementequinox
   *)

astronomia/src/precess.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module precess
   *)

astronomia/src/planetposition.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module planetposition
   *)

astronomia/src/solar.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module solar
   *)

astronomia/src/apparent.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module apparent
   *)

astronomia/src/apsis.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module apsis
   *)

astronomia/src/binary.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module binary
   *)

astronomia/src/conjunction.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module conjunction
   *)

astronomia/src/circle.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module circle
   *)

astronomia/src/deltat.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module deltat
   *)

astronomia/src/iterate.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module iterate
   *)

astronomia/src/kepler.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module kepler
   *)

astronomia/src/solarxyz.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module solarxyz
   *)

astronomia/src/elliptic.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module elliptic
   *)

astronomia/src/moonphase.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module moonphase
   *)

astronomia/src/eclipse.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module eclipse
   *)

astronomia/src/elp.js:
  (**
   * @copyright 2020 mdmunir
   * @copyright 2020 commenthol
   * @license MIT
   * @module elp
   *)

astronomia/src/eqtime.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module eqtime
   *)

astronomia/src/fit.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module fit
   *)

astronomia/src/illum.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module illum
   *)

astronomia/src/julian.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module julian
   *)

astronomia/src/jm.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module jm
   *)

astronomia/src/jupiter.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module jupiter
   *)

astronomia/src/planetelements.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module planetelements
   *)

astronomia/src/jupitermoons.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module jupitermoons
   *)

astronomia/src/line.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module line
   *)

astronomia/src/nearparabolic.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module nearparabolic
   *)

astronomia/src/node.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module node
   *)

astronomia/src/mars.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module mars
   *)

astronomia/src/moonposition.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module moonposition
   *)

astronomia/src/moon.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module moon
   *)

astronomia/src/moonillum.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module moonillum
   *)

astronomia/src/moonmaxdec.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module moonmaxdec
   *)

astronomia/src/moonnode.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module moonnode
   *)

astronomia/src/parabolic.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module parabolic
   *)

astronomia/src/sidereal.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module sidereal
   *)

astronomia/src/parallax.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module parallax
   *)

astronomia/src/parallactic.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module parallactic
   *)

astronomia/src/perihelion.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module perihelion
   *)

astronomia/src/planetary.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module planetary
   *)

astronomia/src/pluto.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module pluto
   *)

astronomia/src/refraction.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module refraction
   *)

astronomia/src/rise.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module rise
   *)

astronomia/src/saturnmoons.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module saturnmoons
   *)

astronomia/src/saturnring.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module saturnring
   *)

astronomia/src/solardisk.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module solardisk
   *)

astronomia/src/solstice.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module solstice
   *)

astronomia/src/stellar.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module stellar
   *)

astronomia/src/sundial.js:
  (**
   * @copyright 2013 Sonia Keys
   * @copyright 2016 commenthol
   * @license MIT
   * @module sundial
   *)

astronomia/src/sunrise.js:
  (**
   * @copyright 2016 commenthol
   * @license MIT
   * @module sunrise
   *)

date-chinese/src/Chinese.js:
  (**
   * @copyright 2016 commenthol
   * @license MIT
   *)

date-chinese/src/Korean.js:
  (**
   * @copyright 2016 commenthol
   * @license MIT
   *)

date-chinese/src/Vietnamese.js:
  (**
   * @copyright 2016 commenthol
   * @license MIT
   *)

date-chinese/src/Japanese.js:
  (**
   * @copyright 2016 commenthol
   * @license MIT
   *)

date-chinese/src/index.js:
  (**
   * @copyright 2016 commenthol
   * @license MIT
   *)

date-bengali-revised/src/index.js:
  (**
   * @copyright 2018-present commenthol
   * @license MIT
   *)

date-holidays-parser/src/Holidays.js:
  (**
   * @copyright 2016- (c) commenthol
   * @license ISC
   *)

date-holidays/src/Holidays.js:
  (**
   * @copyright 2015-present (c) commenthol
   * @license ISC
   *)
*/
//# sourceMappingURL=date-holidays.js.map
